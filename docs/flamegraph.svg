<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="806" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="789.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="789.00"> </text><svg id="frames" x="10" width="1180" total_samples="154001828498"><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (32,408,107 samples, 0.02%)</title><rect x="0.0110%" y="645" width="0.0210%" height="15" fill="rgb(227,0,7)" fg:x="17009813" fg:w="32408107"/><text x="0.2610%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (32,408,107 samples, 0.02%)</title><rect x="0.0110%" y="629" width="0.0210%" height="15" fill="rgb(217,0,24)" fg:x="17009813" fg:w="32408107"/><text x="0.2610%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (32,408,107 samples, 0.02%)</title><rect x="0.0110%" y="613" width="0.0210%" height="15" fill="rgb(221,193,54)" fg:x="17009813" fg:w="32408107"/><text x="0.2610%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20,025,730 samples, 0.01%)</title><rect x="0.0191%" y="597" width="0.0130%" height="15" fill="rgb(248,212,6)" fg:x="29392190" fg:w="20025730"/><text x="0.2691%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20,025,730 samples, 0.01%)</title><rect x="0.0191%" y="581" width="0.0130%" height="15" fill="rgb(208,68,35)" fg:x="29392190" fg:w="20025730"/><text x="0.2691%" y="591.50"></text></g><g><title>alloc::alloc::alloc (20,025,730 samples, 0.01%)</title><rect x="0.0191%" y="565" width="0.0130%" height="15" fill="rgb(232,128,0)" fg:x="29392190" fg:w="20025730"/><text x="0.2691%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (85,453,243 samples, 0.06%)</title><rect x="0.0000%" y="725" width="0.0555%" height="15" fill="rgb(207,160,47)" fg:x="5964" fg:w="85453243"/><text x="0.2500%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (68,449,394 samples, 0.04%)</title><rect x="0.0110%" y="709" width="0.0444%" height="15" fill="rgb(228,23,34)" fg:x="17009813" fg:w="68449394"/><text x="0.2610%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (68,449,394 samples, 0.04%)</title><rect x="0.0110%" y="693" width="0.0444%" height="15" fill="rgb(218,30,26)" fg:x="17009813" fg:w="68449394"/><text x="0.2610%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (68,449,394 samples, 0.04%)</title><rect x="0.0110%" y="677" width="0.0444%" height="15" fill="rgb(220,122,19)" fg:x="17009813" fg:w="68449394"/><text x="0.2610%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (68,449,394 samples, 0.04%)</title><rect x="0.0110%" y="661" width="0.0444%" height="15" fill="rgb(250,228,42)" fg:x="17009813" fg:w="68449394"/><text x="0.2610%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (36,041,287 samples, 0.02%)</title><rect x="0.0321%" y="645" width="0.0234%" height="15" fill="rgb(240,193,28)" fg:x="49417920" fg:w="36041287"/><text x="0.2821%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (36,041,287 samples, 0.02%)</title><rect x="0.0321%" y="629" width="0.0234%" height="15" fill="rgb(216,20,37)" fg:x="49417920" fg:w="36041287"/><text x="0.2821%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (28,318,640 samples, 0.02%)</title><rect x="0.0555%" y="725" width="0.0184%" height="15" fill="rgb(206,188,39)" fg:x="85459207" fg:w="28318640"/><text x="0.3055%" y="735.50"></text></g><g><title>alloc::string::String::push_str (28,318,640 samples, 0.02%)</title><rect x="0.0555%" y="709" width="0.0184%" height="15" fill="rgb(217,207,13)" fg:x="85459207" fg:w="28318640"/><text x="0.3055%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (28,318,640 samples, 0.02%)</title><rect x="0.0555%" y="693" width="0.0184%" height="15" fill="rgb(231,73,38)" fg:x="85459207" fg:w="28318640"/><text x="0.3055%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (28,318,640 samples, 0.02%)</title><rect x="0.0555%" y="677" width="0.0184%" height="15" fill="rgb(225,20,46)" fg:x="85459207" fg:w="28318640"/><text x="0.3055%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (28,318,640 samples, 0.02%)</title><rect x="0.0555%" y="661" width="0.0184%" height="15" fill="rgb(210,31,41)" fg:x="85459207" fg:w="28318640"/><text x="0.3055%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (23,379,447 samples, 0.02%)</title><rect x="0.0852%" y="629" width="0.0152%" height="15" fill="rgb(221,200,47)" fg:x="131149891" fg:w="23379447"/><text x="0.3352%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (23,379,447 samples, 0.02%)</title><rect x="0.0852%" y="613" width="0.0152%" height="15" fill="rgb(226,26,5)" fg:x="131149891" fg:w="23379447"/><text x="0.3352%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (23,379,447 samples, 0.02%)</title><rect x="0.0852%" y="597" width="0.0152%" height="15" fill="rgb(249,33,26)" fg:x="131149891" fg:w="23379447"/><text x="0.3352%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (83,645,373 samples, 0.05%)</title><rect x="0.0739%" y="709" width="0.0543%" height="15" fill="rgb(235,183,28)" fg:x="113777847" fg:w="83645373"/><text x="0.3239%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (66,273,329 samples, 0.04%)</title><rect x="0.0852%" y="693" width="0.0430%" height="15" fill="rgb(221,5,38)" fg:x="131149891" fg:w="66273329"/><text x="0.3352%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (66,273,329 samples, 0.04%)</title><rect x="0.0852%" y="677" width="0.0430%" height="15" fill="rgb(247,18,42)" fg:x="131149891" fg:w="66273329"/><text x="0.3352%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (66,273,329 samples, 0.04%)</title><rect x="0.0852%" y="661" width="0.0430%" height="15" fill="rgb(241,131,45)" fg:x="131149891" fg:w="66273329"/><text x="0.3352%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (66,273,329 samples, 0.04%)</title><rect x="0.0852%" y="645" width="0.0430%" height="15" fill="rgb(249,31,29)" fg:x="131149891" fg:w="66273329"/><text x="0.3352%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (42,893,882 samples, 0.03%)</title><rect x="0.1003%" y="629" width="0.0279%" height="15" fill="rgb(225,111,53)" fg:x="154529338" fg:w="42893882"/><text x="0.3503%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (42,893,882 samples, 0.03%)</title><rect x="0.1003%" y="613" width="0.0279%" height="15" fill="rgb(238,160,17)" fg:x="154529338" fg:w="42893882"/><text x="0.3503%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (40,726,446 samples, 0.03%)</title><rect x="0.1282%" y="709" width="0.0264%" height="15" fill="rgb(214,148,48)" fg:x="197423220" fg:w="40726446"/><text x="0.3782%" y="719.50"></text></g><g><title>alloc::string::String::push_str (27,500,952 samples, 0.02%)</title><rect x="0.1368%" y="693" width="0.0179%" height="15" fill="rgb(232,36,49)" fg:x="210648714" fg:w="27500952"/><text x="0.3868%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (27,500,952 samples, 0.02%)</title><rect x="0.1368%" y="677" width="0.0179%" height="15" fill="rgb(209,103,24)" fg:x="210648714" fg:w="27500952"/><text x="0.3868%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (27,500,952 samples, 0.02%)</title><rect x="0.1368%" y="661" width="0.0179%" height="15" fill="rgb(229,88,8)" fg:x="210648714" fg:w="27500952"/><text x="0.3868%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (27,500,952 samples, 0.02%)</title><rect x="0.1368%" y="645" width="0.0179%" height="15" fill="rgb(213,181,19)" fg:x="210648714" fg:w="27500952"/><text x="0.3868%" y="655.50"></text></g><g><title>[libc.so.6] (180,095,639 samples, 0.12%)</title><rect x="0.1546%" y="709" width="0.1169%" height="15" fill="rgb(254,191,54)" fg:x="238149666" fg:w="180095639"/><text x="0.4046%" y="719.50"></text></g><g><title>__rdl_alloc (66,756,090 samples, 0.04%)</title><rect x="0.2716%" y="709" width="0.0433%" height="15" fill="rgb(241,83,37)" fg:x="418245305" fg:w="66756090"/><text x="0.5216%" y="719.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (62,701,605 samples, 0.04%)</title><rect x="0.2742%" y="693" width="0.0407%" height="15" fill="rgb(233,36,39)" fg:x="422299790" fg:w="62701605"/><text x="0.5242%" y="703.50"></text></g><g><title>__rust_alloc (26,356,689 samples, 0.02%)</title><rect x="0.3176%" y="709" width="0.0171%" height="15" fill="rgb(226,3,54)" fg:x="489060972" fg:w="26356689"/><text x="0.5676%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (31,723,018 samples, 0.02%)</title><rect x="0.3437%" y="709" width="0.0206%" height="15" fill="rgb(245,192,40)" fg:x="529270866" fg:w="31723018"/><text x="0.5937%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (23,798,925 samples, 0.02%)</title><rect x="0.3488%" y="693" width="0.0155%" height="15" fill="rgb(238,167,29)" fg:x="537194959" fg:w="23798925"/><text x="0.5988%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (31,747,629 samples, 0.02%)</title><rect x="0.3643%" y="709" width="0.0206%" height="15" fill="rgb(232,182,51)" fg:x="560993884" fg:w="31747629"/><text x="0.6143%" y="719.50"></text></g><g><title>clock_gettime (34,946,967 samples, 0.02%)</title><rect x="0.3877%" y="709" width="0.0227%" height="15" fill="rgb(231,60,39)" fg:x="597034435" fg:w="34946967"/><text x="0.6377%" y="719.50"></text></g><g><title>malloc (53,437,921 samples, 0.03%)</title><rect x="0.4246%" y="709" width="0.0347%" height="15" fill="rgb(208,69,12)" fg:x="653902584" fg:w="53437921"/><text x="0.6746%" y="719.50"></text></g><g><title>rpq::RPQ&lt;T&gt;::dequeue (48,745,128 samples, 0.03%)</title><rect x="0.4593%" y="709" width="0.0317%" height="15" fill="rgb(235,93,37)" fg:x="707340505" fg:w="48745128"/><text x="0.7093%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (16,567,879 samples, 0.01%)</title><rect x="0.4802%" y="693" width="0.0108%" height="15" fill="rgb(213,116,39)" fg:x="739517754" fg:w="16567879"/><text x="0.7302%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (16,567,879 samples, 0.01%)</title><rect x="0.4802%" y="677" width="0.0108%" height="15" fill="rgb(222,207,29)" fg:x="739517754" fg:w="16567879"/><text x="0.7302%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (16,567,879 samples, 0.01%)</title><rect x="0.4802%" y="661" width="0.0108%" height="15" fill="rgb(206,96,30)" fg:x="739517754" fg:w="16567879"/><text x="0.7302%" y="671.50"></text></g><g><title>rpq::RPQ&lt;T&gt;::enqueue (19,927,083 samples, 0.01%)</title><rect x="0.4910%" y="709" width="0.0129%" height="15" fill="rgb(218,138,4)" fg:x="756085633" fg:w="19927083"/><text x="0.7410%" y="719.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::first (20,555,492 samples, 0.01%)</title><rect x="0.5193%" y="693" width="0.0133%" height="15" fill="rgb(250,191,14)" fg:x="799698538" fg:w="20555492"/><text x="0.7693%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::first_key_value (20,555,492 samples, 0.01%)</title><rect x="0.5193%" y="677" width="0.0133%" height="15" fill="rgb(239,60,40)" fg:x="799698538" fg:w="20555492"/><text x="0.7693%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::collections::btree::set::BTreeSet&lt;u64&gt;&gt;&gt; (41,197,243 samples, 0.03%)</title><rect x="0.5382%" y="693" width="0.0268%" height="15" fill="rgb(206,27,48)" fg:x="828806236" fg:w="41197243"/><text x="0.7882%" y="703.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (41,197,243 samples, 0.03%)</title><rect x="0.5382%" y="677" width="0.0268%" height="15" fill="rgb(225,35,8)" fg:x="828806236" fg:w="41197243"/><text x="0.7882%" y="687.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read_unlock (41,197,243 samples, 0.03%)</title><rect x="0.5382%" y="661" width="0.0268%" height="15" fill="rgb(250,213,24)" fg:x="828806236" fg:w="41197243"/><text x="0.7882%" y="671.50"></text></g><g><title>rpq::bpq::BucketPriorityQueue::peek (119,500,720 samples, 0.08%)</title><rect x="0.5085%" y="709" width="0.0776%" height="15" fill="rgb(247,123,22)" fg:x="783090524" fg:w="119500720"/><text x="0.7585%" y="719.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (32,587,765 samples, 0.02%)</title><rect x="0.5649%" y="693" width="0.0212%" height="15" fill="rgb(231,138,38)" fg:x="870003479" fg:w="32587765"/><text x="0.8149%" y="703.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read (24,609,710 samples, 0.02%)</title><rect x="0.5701%" y="677" width="0.0160%" height="15" fill="rgb(231,145,46)" fg:x="877981534" fg:w="24609710"/><text x="0.8201%" y="687.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (50,395,903 samples, 0.03%)</title><rect x="0.6632%" y="677" width="0.0327%" height="15" fill="rgb(251,118,11)" fg:x="1021401491" fg:w="50395903"/><text x="0.9132%" y="687.50"></text></g><g><title>core::ptr::read (41,831,099 samples, 0.03%)</title><rect x="0.6688%" y="661" width="0.0272%" height="15" fill="rgb(217,147,25)" fg:x="1029966295" fg:w="41831099"/><text x="0.9188%" y="671.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (70,178,744 samples, 0.05%)</title><rect x="0.6549%" y="693" width="0.0456%" height="15" fill="rgb(247,81,37)" fg:x="1008587229" fg:w="70178744"/><text x="0.9049%" y="703.50"></text></g><g><title>rpq::pq::PriorityQueue&lt;T&gt;::dequeue (229,495,243 samples, 0.15%)</title><rect x="0.5861%" y="709" width="0.1490%" height="15" fill="rgb(209,12,38)" fg:x="902591244" fg:w="229495243"/><text x="0.8361%" y="719.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (40,651,515 samples, 0.03%)</title><rect x="0.7087%" y="693" width="0.0264%" height="15" fill="rgb(227,1,9)" fg:x="1091434972" fg:w="40651515"/><text x="0.9587%" y="703.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::write (32,647,867 samples, 0.02%)</title><rect x="0.7139%" y="677" width="0.0212%" height="15" fill="rgb(248,47,43)" fg:x="1099438620" fg:w="32647867"/><text x="0.9639%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (28,365,194 samples, 0.02%)</title><rect x="0.7167%" y="661" width="0.0184%" height="15" fill="rgb(221,10,30)" fg:x="1103721293" fg:w="28365194"/><text x="0.9667%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (28,365,194 samples, 0.02%)</title><rect x="0.7167%" y="645" width="0.0184%" height="15" fill="rgb(210,229,1)" fg:x="1103721293" fg:w="28365194"/><text x="0.9667%" y="655.50"></text></g><g><title>rpq::pq::PriorityQueue&lt;T&gt;::enqueue (58,777,259 samples, 0.04%)</title><rect x="0.7351%" y="709" width="0.0382%" height="15" fill="rgb(222,148,37)" fg:x="1132086487" fg:w="58777259"/><text x="0.9851%" y="719.50"></text></g><g><title>rpq::pq::PriorityQueue&lt;T&gt;::len (69,703,109 samples, 0.05%)</title><rect x="0.7733%" y="709" width="0.0453%" height="15" fill="rgb(234,67,33)" fg:x="1190863746" fg:w="69703109"/><text x="1.0233%" y="719.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read_contended (156,261,949 samples, 0.10%)</title><rect x="0.8185%" y="709" width="0.1015%" height="15" fill="rgb(247,98,35)" fg:x="1260566855" fg:w="156261949"/><text x="1.0685%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (15,418,672 samples, 0.01%)</title><rect x="0.9833%" y="661" width="0.0100%" height="15" fill="rgb(247,138,52)" fg:x="1514323866" fg:w="15418672"/><text x="1.2333%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (15,418,672 samples, 0.01%)</title><rect x="0.9833%" y="645" width="0.0100%" height="15" fill="rgb(213,79,30)" fg:x="1514323866" fg:w="15418672"/><text x="1.2333%" y="655.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::write_contended (139,040,179 samples, 0.09%)</title><rect x="0.9200%" y="709" width="0.0903%" height="15" fill="rgb(246,177,23)" fg:x="1416828804" fg:w="139040179"/><text x="1.1700%" y="719.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_write (119,850,467 samples, 0.08%)</title><rect x="0.9325%" y="693" width="0.0778%" height="15" fill="rgb(230,62,27)" fg:x="1436018516" fg:w="119850467"/><text x="1.1825%" y="703.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_until (119,850,467 samples, 0.08%)</title><rect x="0.9325%" y="677" width="0.0778%" height="15" fill="rgb(216,154,8)" fg:x="1436018516" fg:w="119850467"/><text x="1.1825%" y="687.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_write::_{{closure}} (26,126,445 samples, 0.02%)</title><rect x="0.9933%" y="661" width="0.0170%" height="15" fill="rgb(244,35,45)" fg:x="1529742538" fg:w="26126445"/><text x="1.2433%" y="671.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (123,433,647 samples, 0.08%)</title><rect x="1.0103%" y="709" width="0.0802%" height="15" fill="rgb(251,115,12)" fg:x="1555868983" fg:w="123433647"/><text x="1.2603%" y="719.50"></text></g><g><title>alloc::string::String::new (208,125,250 samples, 0.14%)</title><rect x="1.1346%" y="661" width="0.1351%" height="15" fill="rgb(240,54,50)" fg:x="1747307855" fg:w="208125250"/><text x="1.3846%" y="671.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (238,434,661 samples, 0.15%)</title><rect x="1.1270%" y="677" width="0.1548%" height="15" fill="rgb(233,84,52)" fg:x="1735617424" fg:w="238434661"/><text x="1.3770%" y="687.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (333,740,138 samples, 0.22%)</title><rect x="1.0904%" y="709" width="0.2167%" height="15" fill="rgb(207,117,47)" fg:x="1679302630" fg:w="333740138"/><text x="1.3404%" y="719.50"></text></g><g><title>rpq::main::_{{closure}} (333,740,138 samples, 0.22%)</title><rect x="1.0904%" y="693" width="0.2167%" height="15" fill="rgb(249,43,39)" fg:x="1679302630" fg:w="333740138"/><text x="1.3404%" y="703.50"></text></g><g><title>rpq::pq::Item&lt;T&gt;::new (22,988,025 samples, 0.01%)</title><rect x="1.2922%" y="677" width="0.0149%" height="15" fill="rgb(209,38,44)" fg:x="1990054743" fg:w="22988025"/><text x="1.5422%" y="687.50"></text></g><g><title>syscall (344,561,079 samples, 0.22%)</title><rect x="1.3126%" y="709" width="0.2237%" height="15" fill="rgb(236,212,23)" fg:x="2021357266" fg:w="344561079"/><text x="1.5626%" y="719.50"></text></g><g><title>uuid::fmt::&lt;impl core::fmt::Display for uuid::Uuid&gt;::fmt (23,423,114 samples, 0.02%)</title><rect x="1.5363%" y="709" width="0.0152%" height="15" fill="rgb(242,79,21)" fg:x="2365918345" fg:w="23423114"/><text x="1.7863%" y="719.50"></text></g><g><title>uuid::fmt::format_hyphenated (196,548,289 samples, 0.13%)</title><rect x="1.5515%" y="709" width="0.1276%" height="15" fill="rgb(211,96,35)" fg:x="2389341459" fg:w="196548289"/><text x="1.8015%" y="719.50"></text></g><g><title>[[heap]] (2,483,469,387 samples, 1.61%)</title><rect x="0.0739%" y="725" width="1.6126%" height="15" fill="rgb(253,215,40)" fg:x="113777847" fg:w="2483469387"/><text x="0.3239%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (56,219,034 samples, 0.04%)</title><rect x="1.6865%" y="709" width="0.0365%" height="15" fill="rgb(211,81,21)" fg:x="2597247234" fg:w="56219034"/><text x="1.9365%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (36,467,822 samples, 0.02%)</title><rect x="1.7230%" y="709" width="0.0237%" height="15" fill="rgb(208,190,38)" fg:x="2653466268" fg:w="36467822"/><text x="1.9730%" y="719.50"></text></g><g><title>[libc.so.6] (111,493,323 samples, 0.07%)</title><rect x="1.7467%" y="709" width="0.0724%" height="15" fill="rgb(235,213,38)" fg:x="2689934090" fg:w="111493323"/><text x="1.9967%" y="719.50"></text></g><g><title>__vdso_clock_gettime (17,934,883 samples, 0.01%)</title><rect x="1.8307%" y="709" width="0.0116%" height="15" fill="rgb(237,122,38)" fg:x="2819345174" fg:w="17934883"/><text x="2.0807%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (15,920,428 samples, 0.01%)</title><rect x="1.8642%" y="677" width="0.0103%" height="15" fill="rgb(244,218,35)" fg:x="2870919000" fg:w="15920428"/><text x="2.1142%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (78,675,337 samples, 0.05%)</title><rect x="1.8424%" y="709" width="0.0511%" height="15" fill="rgb(240,68,47)" fg:x="2837280057" fg:w="78675337"/><text x="2.0924%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (62,158,788 samples, 0.04%)</title><rect x="1.8531%" y="693" width="0.0404%" height="15" fill="rgb(210,16,53)" fg:x="2853796606" fg:w="62158788"/><text x="2.1031%" y="703.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (20,346,622 samples, 0.01%)</title><rect x="1.8802%" y="677" width="0.0132%" height="15" fill="rgb(235,124,12)" fg:x="2895608772" fg:w="20346622"/><text x="2.1302%" y="687.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (20,346,622 samples, 0.01%)</title><rect x="1.8802%" y="661" width="0.0132%" height="15" fill="rgb(224,169,11)" fg:x="2895608772" fg:w="20346622"/><text x="2.1302%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (31,628,050 samples, 0.02%)</title><rect x="1.8935%" y="709" width="0.0205%" height="15" fill="rgb(250,166,2)" fg:x="2915955394" fg:w="31628050"/><text x="2.1435%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (51,425,501 samples, 0.03%)</title><rect x="1.9321%" y="533" width="0.0334%" height="15" fill="rgb(242,216,29)" fg:x="2975545015" fg:w="51425501"/><text x="2.1821%" y="543.50"></text></g><g><title>asm_exc_page_fault (16,757,334 samples, 0.01%)</title><rect x="1.9703%" y="517" width="0.0109%" height="15" fill="rgb(230,116,27)" fg:x="3034255810" fg:w="16757334"/><text x="2.2203%" y="527.50"></text></g><g><title>getrandom::imp::getrandom_inner (83,160,091 samples, 0.05%)</title><rect x="1.9321%" y="597" width="0.0540%" height="15" fill="rgb(228,99,48)" fg:x="2975545015" fg:w="83160091"/><text x="2.1821%" y="607.50"></text></g><g><title>getrandom::util_libc::sys_fill_exact (83,160,091 samples, 0.05%)</title><rect x="1.9321%" y="581" width="0.0540%" height="15" fill="rgb(253,11,6)" fg:x="2975545015" fg:w="83160091"/><text x="2.1821%" y="591.50"></text></g><g><title>core::ops::function::Fn::call (83,160,091 samples, 0.05%)</title><rect x="1.9321%" y="565" width="0.0540%" height="15" fill="rgb(247,143,39)" fg:x="2975545015" fg:w="83160091"/><text x="2.1821%" y="575.50"></text></g><g><title>getrandom::util_libc::getrandom_syscall (83,160,091 samples, 0.05%)</title><rect x="1.9321%" y="549" width="0.0540%" height="15" fill="rgb(236,97,10)" fg:x="2975545015" fg:w="83160091"/><text x="2.1821%" y="559.50"></text></g><g><title>syscall (24,449,296 samples, 0.02%)</title><rect x="1.9703%" y="533" width="0.0159%" height="15" fill="rgb(233,208,19)" fg:x="3034255810" fg:w="24449296"/><text x="2.2203%" y="543.50"></text></g><g><title>rpq::RPQ&lt;T&gt;::enqueue (391,239,853 samples, 0.25%)</title><rect x="1.9861%" y="597" width="0.2540%" height="15" fill="rgb(216,164,2)" fg:x="3058705106" fg:w="391239853"/><text x="2.2361%" y="607.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (382,426,273 samples, 0.25%)</title><rect x="1.9919%" y="581" width="0.2483%" height="15" fill="rgb(220,129,5)" fg:x="3067518686" fg:w="382426273"/><text x="2.2419%" y="591.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read (382,426,273 samples, 0.25%)</title><rect x="1.9919%" y="565" width="0.2483%" height="15" fill="rgb(242,17,10)" fg:x="3067518686" fg:w="382426273"/><text x="2.2419%" y="575.50"></text></g><g><title>clock_gettime (499,232,734 samples, 0.32%)</title><rect x="1.9189%" y="709" width="0.3242%" height="15" fill="rgb(242,107,0)" fg:x="2955203415" fg:w="499232734"/><text x="2.1689%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (478,891,134 samples, 0.31%)</title><rect x="1.9321%" y="693" width="0.3110%" height="15" fill="rgb(251,28,31)" fg:x="2975545015" fg:w="478891134"/><text x="2.1821%" y="703.50"></text></g><g><title>alloc::string::String::push_str (478,891,134 samples, 0.31%)</title><rect x="1.9321%" y="677" width="0.3110%" height="15" fill="rgb(233,223,10)" fg:x="2975545015" fg:w="478891134"/><text x="2.1821%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (478,891,134 samples, 0.31%)</title><rect x="1.9321%" y="661" width="0.3110%" height="15" fill="rgb(215,21,27)" fg:x="2975545015" fg:w="478891134"/><text x="2.1821%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (478,891,134 samples, 0.31%)</title><rect x="1.9321%" y="645" width="0.3110%" height="15" fill="rgb(232,23,21)" fg:x="2975545015" fg:w="478891134"/><text x="2.1821%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (478,891,134 samples, 0.31%)</title><rect x="1.9321%" y="629" width="0.3110%" height="15" fill="rgb(244,5,23)" fg:x="2975545015" fg:w="478891134"/><text x="2.1821%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (478,891,134 samples, 0.31%)</title><rect x="1.9321%" y="613" width="0.3110%" height="15" fill="rgb(226,81,46)" fg:x="2975545015" fg:w="478891134"/><text x="2.1821%" y="623.50"></text></g><g><title>core::ops::function::Fn::call (87,923,796 samples, 0.06%)</title><rect x="2.6866%" y="677" width="0.0571%" height="15" fill="rgb(247,70,30)" fg:x="4137452862" fg:w="87923796"/><text x="2.9366%" y="687.50"></text></g><g><title>getrandom::util_libc::getrandom_syscall (87,923,796 samples, 0.06%)</title><rect x="2.6866%" y="661" width="0.0571%" height="15" fill="rgb(212,68,19)" fg:x="4137452862" fg:w="87923796"/><text x="2.9366%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_mut (70,052,426 samples, 0.05%)</title><rect x="2.7437%" y="677" width="0.0455%" height="15" fill="rgb(240,187,13)" fg:x="4225376658" fg:w="70052426"/><text x="2.9937%" y="687.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_mut (70,052,426 samples, 0.05%)</title><rect x="2.7437%" y="661" width="0.0455%" height="15" fill="rgb(223,113,26)" fg:x="4225376658" fg:w="70052426"/><text x="2.9937%" y="671.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_mut (70,052,426 samples, 0.05%)</title><rect x="2.7437%" y="645" width="0.0455%" height="15" fill="rgb(206,192,2)" fg:x="4225376658" fg:w="70052426"/><text x="2.9937%" y="655.50"></text></g><g><title>getrandom::imp::getrandom_inner (844,891,652 samples, 0.55%)</title><rect x="2.2431%" y="709" width="0.5486%" height="15" fill="rgb(241,108,4)" fg:x="3454436149" fg:w="844891652"/><text x="2.4931%" y="719.50"></text></g><g><title>getrandom::util_libc::sys_fill_exact (793,015,544 samples, 0.51%)</title><rect x="2.2768%" y="693" width="0.5149%" height="15" fill="rgb(247,173,49)" fg:x="3506312257" fg:w="793015544"/><text x="2.5268%" y="703.50"></text></g><g><title>malloc (52,247,485 samples, 0.03%)</title><rect x="2.7917%" y="709" width="0.0339%" height="15" fill="rgb(224,114,35)" fg:x="4299327801" fg:w="52247485"/><text x="3.0417%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (61,619,945 samples, 0.04%)</title><rect x="2.8549%" y="645" width="0.0400%" height="15" fill="rgb(245,159,27)" fg:x="4396622989" fg:w="61619945"/><text x="3.1049%" y="655.50"></text></g><g><title>rand::rng::Rng::gen_range (241,042,910 samples, 0.16%)</title><rect x="2.8257%" y="709" width="0.1565%" height="15" fill="rgb(245,172,44)" fg:x="4351575286" fg:w="241042910"/><text x="3.0757%" y="719.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::sample_single (214,547,311 samples, 0.14%)</title><rect x="2.8429%" y="693" width="0.1393%" height="15" fill="rgb(236,23,11)" fg:x="4378070885" fg:w="214547311"/><text x="3.0929%" y="703.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u64&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (214,547,311 samples, 0.14%)</title><rect x="2.8429%" y="677" width="0.1393%" height="15" fill="rgb(205,117,38)" fg:x="4378070885" fg:w="214547311"/><text x="3.0929%" y="687.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u64&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single_inclusive (214,547,311 samples, 0.14%)</title><rect x="2.8429%" y="661" width="0.1393%" height="15" fill="rgb(237,72,25)" fg:x="4378070885" fg:w="214547311"/><text x="3.0929%" y="671.50"></text></g><g><title>rand::rng::Rng::gen (123,750,920 samples, 0.08%)</title><rect x="2.9018%" y="645" width="0.0804%" height="15" fill="rgb(244,70,9)" fg:x="4468867276" fg:w="123750920"/><text x="3.1518%" y="655.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u64&gt; for rand::distributions::Standard&gt;::sample (123,750,920 samples, 0.08%)</title><rect x="2.9018%" y="629" width="0.0804%" height="15" fill="rgb(217,125,39)" fg:x="4468867276" fg:w="123750920"/><text x="3.1518%" y="639.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (123,750,920 samples, 0.08%)</title><rect x="2.9018%" y="613" width="0.0804%" height="15" fill="rgb(235,36,10)" fg:x="4468867276" fg:w="123750920"/><text x="3.1518%" y="623.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (123,750,920 samples, 0.08%)</title><rect x="2.9018%" y="597" width="0.0804%" height="15" fill="rgb(251,123,47)" fg:x="4468867276" fg:w="123750920"/><text x="3.1518%" y="607.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (123,750,920 samples, 0.08%)</title><rect x="2.9018%" y="581" width="0.0804%" height="15" fill="rgb(221,13,13)" fg:x="4468867276" fg:w="123750920"/><text x="3.1518%" y="591.50"></text></g><g><title>rand::rngs::thread::thread_rng (37,395,031 samples, 0.02%)</title><rect x="2.9851%" y="709" width="0.0243%" height="15" fill="rgb(238,131,9)" fg:x="4597099088" fg:w="37395031"/><text x="3.2351%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (33,268,249 samples, 0.02%)</title><rect x="2.9878%" y="693" width="0.0216%" height="15" fill="rgb(211,50,8)" fg:x="4601225870" fg:w="33268249"/><text x="3.2378%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (33,268,249 samples, 0.02%)</title><rect x="2.9878%" y="677" width="0.0216%" height="15" fill="rgb(245,182,24)" fg:x="4601225870" fg:w="33268249"/><text x="3.2378%" y="687.50"></text></g><g><title>rand::rngs::thread::thread_rng::_{{closure}} (25,375,515 samples, 0.02%)</title><rect x="2.9929%" y="661" width="0.0165%" height="15" fill="rgb(242,14,37)" fg:x="4609118604" fg:w="25375515"/><text x="3.2429%" y="671.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (25,375,515 samples, 0.02%)</title><rect x="2.9929%" y="645" width="0.0165%" height="15" fill="rgb(246,228,12)" fg:x="4609118604" fg:w="25375515"/><text x="3.2429%" y="655.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (25,375,515 samples, 0.02%)</title><rect x="2.9929%" y="629" width="0.0165%" height="15" fill="rgb(213,55,15)" fg:x="4609118604" fg:w="25375515"/><text x="3.2429%" y="639.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (17,450,455 samples, 0.01%)</title><rect x="2.9980%" y="613" width="0.0113%" height="15" fill="rgb(209,9,3)" fg:x="4617043664" fg:w="17450455"/><text x="3.2480%" y="623.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (17,450,455 samples, 0.01%)</title><rect x="2.9980%" y="597" width="0.0113%" height="15" fill="rgb(230,59,30)" fg:x="4617043664" fg:w="17450455"/><text x="3.2480%" y="607.50"></text></g><g><title>core::mem::replace (17,450,455 samples, 0.01%)</title><rect x="2.9980%" y="581" width="0.0113%" height="15" fill="rgb(209,121,21)" fg:x="4617043664" fg:w="17450455"/><text x="3.2480%" y="591.50"></text></g><g><title>core::ptr::write (17,450,455 samples, 0.01%)</title><rect x="2.9980%" y="565" width="0.0113%" height="15" fill="rgb(220,109,13)" fg:x="4617043664" fg:w="17450455"/><text x="3.2480%" y="575.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (15,734,424 samples, 0.01%)</title><rect x="3.0395%" y="645" width="0.0102%" height="15" fill="rgb(232,18,1)" fg:x="4680889104" fg:w="15734424"/><text x="3.2895%" y="655.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (15,734,424 samples, 0.01%)</title><rect x="3.0395%" y="629" width="0.0102%" height="15" fill="rgb(215,41,42)" fg:x="4680889104" fg:w="15734424"/><text x="3.2895%" y="639.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (15,734,424 samples, 0.01%)</title><rect x="3.0395%" y="613" width="0.0102%" height="15" fill="rgb(224,123,36)" fg:x="4680889104" fg:w="15734424"/><text x="3.2895%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (15,734,424 samples, 0.01%)</title><rect x="3.0395%" y="597" width="0.0102%" height="15" fill="rgb(240,125,3)" fg:x="4680889104" fg:w="15734424"/><text x="3.2895%" y="607.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (18,761,491 samples, 0.01%)</title><rect x="3.0578%" y="645" width="0.0122%" height="15" fill="rgb(205,98,50)" fg:x="4709131583" fg:w="18761491"/><text x="3.3078%" y="655.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (18,761,491 samples, 0.01%)</title><rect x="3.0578%" y="629" width="0.0122%" height="15" fill="rgb(205,185,37)" fg:x="4709131583" fg:w="18761491"/><text x="3.3078%" y="639.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (18,761,491 samples, 0.01%)</title><rect x="3.0578%" y="613" width="0.0122%" height="15" fill="rgb(238,207,15)" fg:x="4709131583" fg:w="18761491"/><text x="3.3078%" y="623.50"></text></g><g><title>rand_chacha::guts::round (58,897,787 samples, 0.04%)</title><rect x="3.0395%" y="661" width="0.0382%" height="15" fill="rgb(213,199,42)" fg:x="4680889104" fg:w="58897787"/><text x="3.2895%" y="671.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (100,080,211 samples, 0.06%)</title><rect x="3.0152%" y="709" width="0.0650%" height="15" fill="rgb(235,201,11)" fg:x="4643533283" fg:w="100080211"/><text x="3.2652%" y="719.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (100,080,211 samples, 0.06%)</title><rect x="3.0152%" y="693" width="0.0650%" height="15" fill="rgb(207,46,11)" fg:x="4643533283" fg:w="100080211"/><text x="3.2652%" y="703.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (100,080,211 samples, 0.06%)</title><rect x="3.0152%" y="677" width="0.0650%" height="15" fill="rgb(241,35,35)" fg:x="4643533283" fg:w="100080211"/><text x="3.2652%" y="687.50"></text></g><g><title>rpq::RPQ&lt;T&gt;::dequeue (26,167,249 samples, 0.02%)</title><rect x="3.0802%" y="709" width="0.0170%" height="15" fill="rgb(243,32,47)" fg:x="4743613494" fg:w="26167249"/><text x="3.3302%" y="719.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (29,641,641 samples, 0.02%)</title><rect x="3.1153%" y="677" width="0.0192%" height="15" fill="rgb(247,202,23)" fg:x="4797671288" fg:w="29641641"/><text x="3.3653%" y="687.50"></text></g><g><title>entry_SYSCALL_64 (29,641,641 samples, 0.02%)</title><rect x="3.1153%" y="661" width="0.0192%" height="15" fill="rgb(219,102,11)" fg:x="4797671288" fg:w="29641641"/><text x="3.3653%" y="671.50"></text></g><g><title>&lt;rpq::pq::Item&lt;T&gt; as core::clone::Clone&gt;::clone (58,851,148 samples, 0.04%)</title><rect x="3.1128%" y="693" width="0.0382%" height="15" fill="rgb(243,110,44)" fg:x="4793806985" fg:w="58851148"/><text x="3.3628%" y="703.50"></text></g><g><title>entry_SYSCALL_64 (18,106,580 samples, 0.01%)</title><rect x="3.1393%" y="677" width="0.0118%" height="15" fill="rgb(222,74,54)" fg:x="4834551553" fg:w="18106580"/><text x="3.3893%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (21,451,122 samples, 0.01%)</title><rect x="3.1538%" y="597" width="0.0139%" height="15" fill="rgb(216,99,12)" fg:x="4856972826" fg:w="21451122"/><text x="3.4038%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (21,451,122 samples, 0.01%)</title><rect x="3.1538%" y="581" width="0.0139%" height="15" fill="rgb(226,22,26)" fg:x="4856972826" fg:w="21451122"/><text x="3.4038%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpq::pq::Item&lt;i32&gt;&gt; (25,772,994 samples, 0.02%)</title><rect x="3.1510%" y="693" width="0.0167%" height="15" fill="rgb(217,163,10)" fg:x="4852658133" fg:w="25772994"/><text x="3.4010%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (25,772,994 samples, 0.02%)</title><rect x="3.1510%" y="677" width="0.0167%" height="15" fill="rgb(213,25,53)" fg:x="4852658133" fg:w="25772994"/><text x="3.4010%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (21,458,301 samples, 0.01%)</title><rect x="3.1538%" y="661" width="0.0139%" height="15" fill="rgb(252,105,26)" fg:x="4856972826" fg:w="21458301"/><text x="3.4038%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (21,458,301 samples, 0.01%)</title><rect x="3.1538%" y="645" width="0.0139%" height="15" fill="rgb(220,39,43)" fg:x="4856972826" fg:w="21458301"/><text x="3.4038%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (21,458,301 samples, 0.01%)</title><rect x="3.1538%" y="629" width="0.0139%" height="15" fill="rgb(229,68,48)" fg:x="4856972826" fg:w="21458301"/><text x="3.4038%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21,458,301 samples, 0.01%)</title><rect x="3.1538%" y="613" width="0.0139%" height="15" fill="rgb(252,8,32)" fg:x="4856972826" fg:w="21458301"/><text x="3.4038%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,rpq::pq::PriorityQueue&lt;i32&gt;&gt;&gt;&gt; (66,222,959 samples, 0.04%)</title><rect x="3.1678%" y="693" width="0.0430%" height="15" fill="rgb(223,20,43)" fg:x="4878431127" fg:w="66222959"/><text x="3.4178%" y="703.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (66,222,959 samples, 0.04%)</title><rect x="3.1678%" y="677" width="0.0430%" height="15" fill="rgb(229,81,49)" fg:x="4878431127" fg:w="66222959"/><text x="3.4178%" y="687.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read_unlock (66,222,959 samples, 0.04%)</title><rect x="3.1678%" y="661" width="0.0430%" height="15" fill="rgb(236,28,36)" fg:x="4878431127" fg:w="66222959"/><text x="3.4178%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_add (53,774,733 samples, 0.03%)</title><rect x="3.2108%" y="693" width="0.0349%" height="15" fill="rgb(249,185,26)" fg:x="4944654086" fg:w="53774733"/><text x="3.4608%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_add (53,774,733 samples, 0.03%)</title><rect x="3.2108%" y="677" width="0.0349%" height="15" fill="rgb(249,174,33)" fg:x="4944654086" fg:w="53774733"/><text x="3.4608%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (20,599,999 samples, 0.01%)</title><rect x="3.2597%" y="565" width="0.0134%" height="15" fill="rgb(233,201,37)" fg:x="5020071970" fg:w="20599999"/><text x="3.5097%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (18,159,554 samples, 0.01%)</title><rect x="3.2755%" y="549" width="0.0118%" height="15" fill="rgb(221,78,26)" fg:x="5044352097" fg:w="18159554"/><text x="3.5255%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (15,546,533 samples, 0.01%)</title><rect x="3.2873%" y="549" width="0.0101%" height="15" fill="rgb(250,127,30)" fg:x="5062511651" fg:w="15546533"/><text x="3.5373%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (15,546,533 samples, 0.01%)</title><rect x="3.2873%" y="533" width="0.0101%" height="15" fill="rgb(230,49,44)" fg:x="5062511651" fg:w="15546533"/><text x="3.5373%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (44,888,383 samples, 0.03%)</title><rect x="3.2731%" y="565" width="0.0291%" height="15" fill="rgb(229,67,23)" fg:x="5040671969" fg:w="44888383"/><text x="3.5231%" y="575.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (82,566,536 samples, 0.05%)</title><rect x="3.2516%" y="613" width="0.0536%" height="15" fill="rgb(249,83,47)" fg:x="5007554816" fg:w="82566536"/><text x="3.5016%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (82,566,536 samples, 0.05%)</title><rect x="3.2516%" y="597" width="0.0536%" height="15" fill="rgb(215,43,3)" fg:x="5007554816" fg:w="82566536"/><text x="3.5016%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (82,566,536 samples, 0.05%)</title><rect x="3.2516%" y="581" width="0.0536%" height="15" fill="rgb(238,154,13)" fg:x="5007554816" fg:w="82566536"/><text x="3.5016%" y="591.50"></text></g><g><title>hashbrown::map::make_hash (94,975,708 samples, 0.06%)</title><rect x="3.2485%" y="645" width="0.0617%" height="15" fill="rgb(219,56,2)" fg:x="5002674565" fg:w="94975708"/><text x="3.4985%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (94,975,708 samples, 0.06%)</title><rect x="3.2485%" y="629" width="0.0617%" height="15" fill="rgb(233,0,4)" fg:x="5002674565" fg:w="94975708"/><text x="3.4985%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (17,718,191 samples, 0.01%)</title><rect x="3.3101%" y="597" width="0.0115%" height="15" fill="rgb(235,30,7)" fg:x="5097650273" fg:w="17718191"/><text x="3.5601%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (143,159,096 samples, 0.09%)</title><rect x="3.2485%" y="693" width="0.0930%" height="15" fill="rgb(250,79,13)" fg:x="5002674565" fg:w="143159096"/><text x="3.4985%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (143,159,096 samples, 0.09%)</title><rect x="3.2485%" y="677" width="0.0930%" height="15" fill="rgb(211,146,34)" fg:x="5002674565" fg:w="143159096"/><text x="3.4985%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (143,159,096 samples, 0.09%)</title><rect x="3.2485%" y="661" width="0.0930%" height="15" fill="rgb(228,22,38)" fg:x="5002674565" fg:w="143159096"/><text x="3.4985%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (48,183,388 samples, 0.03%)</title><rect x="3.3101%" y="645" width="0.0313%" height="15" fill="rgb(235,168,5)" fg:x="5097650273" fg:w="48183388"/><text x="3.5601%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (48,183,388 samples, 0.03%)</title><rect x="3.3101%" y="629" width="0.0313%" height="15" fill="rgb(221,155,16)" fg:x="5097650273" fg:w="48183388"/><text x="3.5601%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (48,183,388 samples, 0.03%)</title><rect x="3.3101%" y="613" width="0.0313%" height="15" fill="rgb(215,215,53)" fg:x="5097650273" fg:w="48183388"/><text x="3.5601%" y="623.50"></text></g><g><title>rpq::RPQ&lt;T&gt;::enqueue (444,635,929 samples, 0.29%)</title><rect x="3.0972%" y="709" width="0.2887%" height="15" fill="rgb(223,4,10)" fg:x="4769780743" fg:w="444635929"/><text x="3.3472%" y="719.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (68,583,011 samples, 0.04%)</title><rect x="3.3414%" y="693" width="0.0445%" height="15" fill="rgb(234,103,6)" fg:x="5145833661" fg:w="68583011"/><text x="3.5914%" y="703.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read (65,093,497 samples, 0.04%)</title><rect x="3.3437%" y="677" width="0.0423%" height="15" fill="rgb(227,97,0)" fg:x="5149323175" fg:w="65093497"/><text x="3.5937%" y="687.50"></text></g><g><title>entry_SYSCALL_64 (23,580,170 samples, 0.02%)</title><rect x="3.3706%" y="661" width="0.0153%" height="15" fill="rgb(234,150,53)" fg:x="5190836502" fg:w="23580170"/><text x="3.6206%" y="671.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (62,607,449 samples, 0.04%)</title><rect x="3.5083%" y="597" width="0.0407%" height="15" fill="rgb(228,201,54)" fg:x="5402769473" fg:w="62607449"/><text x="3.7583%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (22,219,631 samples, 0.01%)</title><rect x="3.5345%" y="581" width="0.0144%" height="15" fill="rgb(222,22,37)" fg:x="5443157291" fg:w="22219631"/><text x="3.7845%" y="591.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (252,251,465 samples, 0.16%)</title><rect x="3.4308%" y="645" width="0.1638%" height="15" fill="rgb(237,53,32)" fg:x="5283548675" fg:w="252251465"/><text x="3.6808%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (252,251,465 samples, 0.16%)</title><rect x="3.4308%" y="629" width="0.1638%" height="15" fill="rgb(233,25,53)" fg:x="5283548675" fg:w="252251465"/><text x="3.6808%" y="639.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (252,251,465 samples, 0.16%)</title><rect x="3.4308%" y="613" width="0.1638%" height="15" fill="rgb(210,40,34)" fg:x="5283548675" fg:w="252251465"/><text x="3.6808%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (70,423,218 samples, 0.05%)</title><rect x="3.5489%" y="597" width="0.0457%" height="15" fill="rgb(241,220,44)" fg:x="5465376922" fg:w="70423218"/><text x="3.7989%" y="607.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::contains (352,355,159 samples, 0.23%)</title><rect x="3.4225%" y="693" width="0.2288%" height="15" fill="rgb(235,28,35)" fg:x="5270759852" fg:w="352355159"/><text x="3.6725%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (352,355,159 samples, 0.23%)</title><rect x="3.4225%" y="677" width="0.2288%" height="15" fill="rgb(210,56,17)" fg:x="5270759852" fg:w="352355159"/><text x="3.6725%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (352,355,159 samples, 0.23%)</title><rect x="3.4225%" y="661" width="0.2288%" height="15" fill="rgb(224,130,29)" fg:x="5270759852" fg:w="352355159"/><text x="3.6725%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (87,314,871 samples, 0.06%)</title><rect x="3.5946%" y="645" width="0.0567%" height="15" fill="rgb(235,212,8)" fg:x="5535800140" fg:w="87314871"/><text x="3.8446%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (34,241,570 samples, 0.02%)</title><rect x="3.6291%" y="629" width="0.0222%" height="15" fill="rgb(223,33,50)" fg:x="5588873441" fg:w="34241570"/><text x="3.8791%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::collections::btree::set::BTreeSet&lt;u64&gt;&gt;&gt; (132,423,409 samples, 0.09%)</title><rect x="3.6513%" y="693" width="0.0860%" height="15" fill="rgb(219,149,13)" fg:x="5623115011" fg:w="132423409"/><text x="3.9013%" y="703.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (132,423,409 samples, 0.09%)</title><rect x="3.6513%" y="677" width="0.0860%" height="15" fill="rgb(250,156,29)" fg:x="5623115011" fg:w="132423409"/><text x="3.9013%" y="687.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read_unlock (132,423,409 samples, 0.09%)</title><rect x="3.6513%" y="661" width="0.0860%" height="15" fill="rgb(216,193,19)" fg:x="5623115011" fg:w="132423409"/><text x="3.9013%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (22,972,831 samples, 0.01%)</title><rect x="3.7224%" y="645" width="0.0149%" height="15" fill="rgb(216,135,14)" fg:x="5732565589" fg:w="22972831"/><text x="3.9724%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (24,556,634 samples, 0.02%)</title><rect x="3.7862%" y="645" width="0.0159%" height="15" fill="rgb(241,47,5)" fg:x="5830839096" fg:w="24556634"/><text x="4.0362%" y="655.50"></text></g><g><title>std::sync::poison::Flag::borrow (162,464,284 samples, 0.11%)</title><rect x="3.7440%" y="661" width="0.1055%" height="15" fill="rgb(233,42,35)" fg:x="5765854284" fg:w="162464284"/><text x="3.9940%" y="671.50"></text></g><g><title>std::sync::poison::Flag::get (72,922,838 samples, 0.05%)</title><rect x="3.8022%" y="645" width="0.0474%" height="15" fill="rgb(231,13,6)" fg:x="5855395730" fg:w="72922838"/><text x="4.0522%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (72,922,838 samples, 0.05%)</title><rect x="3.8022%" y="629" width="0.0474%" height="15" fill="rgb(207,181,40)" fg:x="5855395730" fg:w="72922838"/><text x="4.0522%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_load (72,922,838 samples, 0.05%)</title><rect x="3.8022%" y="613" width="0.0474%" height="15" fill="rgb(254,173,49)" fg:x="5855395730" fg:w="72922838"/><text x="4.0522%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (16,514,737 samples, 0.01%)</title><rect x="3.8388%" y="597" width="0.0107%" height="15" fill="rgb(221,1,38)" fg:x="5911803831" fg:w="16514737"/><text x="4.0888%" y="607.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (306,627,556 samples, 0.20%)</title><rect x="3.7440%" y="677" width="0.1991%" height="15" fill="rgb(206,124,46)" fg:x="5765854284" fg:w="306627556"/><text x="3.9940%" y="687.50"></text></g><g><title>std::sync::poison::map_result (144,163,272 samples, 0.09%)</title><rect x="3.8495%" y="661" width="0.0936%" height="15" fill="rgb(249,21,11)" fg:x="5928318568" fg:w="144163272"/><text x="4.0995%" y="671.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new::_{{closure}} (144,163,272 samples, 0.09%)</title><rect x="3.8495%" y="645" width="0.0936%" height="15" fill="rgb(222,201,40)" fg:x="5928318568" fg:w="144163272"/><text x="4.0995%" y="655.50"></text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::get (144,163,272 samples, 0.09%)</title><rect x="3.8495%" y="629" width="0.0936%" height="15" fill="rgb(235,61,29)" fg:x="5928318568" fg:w="144163272"/><text x="4.0995%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (30,894,417 samples, 0.02%)</title><rect x="3.9231%" y="613" width="0.0201%" height="15" fill="rgb(219,207,3)" fg:x="6041587423" fg:w="30894417"/><text x="4.1731%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (32,818,461 samples, 0.02%)</title><rect x="3.9989%" y="661" width="0.0213%" height="15" fill="rgb(222,56,46)" fg:x="6158387864" fg:w="32818461"/><text x="4.2489%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (32,818,461 samples, 0.02%)</title><rect x="3.9989%" y="645" width="0.0213%" height="15" fill="rgb(239,76,54)" fg:x="6158387864" fg:w="32818461"/><text x="4.2489%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (17,076,043 samples, 0.01%)</title><rect x="4.0091%" y="629" width="0.0111%" height="15" fill="rgb(231,124,27)" fg:x="6174130282" fg:w="17076043"/><text x="4.2591%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (47,825,125 samples, 0.03%)</title><rect x="4.0202%" y="661" width="0.0311%" height="15" fill="rgb(249,195,6)" fg:x="6191206325" fg:w="47825125"/><text x="4.2702%" y="671.50"></text></g><g><title>rpq::bpq::BucketPriorityQueue::add_bucket (1,312,674,440 samples, 0.85%)</title><rect x="3.3859%" y="709" width="0.8524%" height="15" fill="rgb(237,174,47)" fg:x="5214416672" fg:w="1312674440"/><text x="3.6359%" y="719.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (761,236,828 samples, 0.49%)</title><rect x="3.7440%" y="693" width="0.4943%" height="15" fill="rgb(206,201,31)" fg:x="5765854284" fg:w="761236828"/><text x="3.9940%" y="703.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read (454,609,272 samples, 0.30%)</title><rect x="3.9431%" y="677" width="0.2952%" height="15" fill="rgb(231,57,52)" fg:x="6072481840" fg:w="454609272"/><text x="4.1931%" y="687.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::is_read_lockable (288,059,662 samples, 0.19%)</title><rect x="4.0513%" y="661" width="0.1870%" height="15" fill="rgb(248,177,22)" fg:x="6239031450" fg:w="288059662"/><text x="4.3013%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (97,982,257 samples, 0.06%)</title><rect x="4.1747%" y="645" width="0.0636%" height="15" fill="rgb(215,211,37)" fg:x="6429108855" fg:w="97982257"/><text x="4.4247%" y="655.50"></text></g><g><title>rpq::bpq::BucketPriorityQueue::peek (63,694,430 samples, 0.04%)</title><rect x="4.2383%" y="709" width="0.0414%" height="15" fill="rgb(241,128,51)" fg:x="6527091112" fg:w="63694430"/><text x="4.4883%" y="719.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (35,962,650 samples, 0.02%)</title><rect x="4.2563%" y="693" width="0.0234%" height="15" fill="rgb(227,165,31)" fg:x="6554822892" fg:w="35962650"/><text x="4.5063%" y="703.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read (23,495,158 samples, 0.02%)</title><rect x="4.2644%" y="677" width="0.0153%" height="15" fill="rgb(228,167,24)" fg:x="6567290384" fg:w="23495158"/><text x="4.5144%" y="687.50"></text></g><g><title>rpq::pq::PriorityQueue&lt;T&gt;::dequeue (69,534,592 samples, 0.05%)</title><rect x="4.2818%" y="709" width="0.0452%" height="15" fill="rgb(228,143,12)" fg:x="6594102384" fg:w="69534592"/><text x="4.5318%" y="719.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_write (217,100,904 samples, 0.14%)</title><rect x="4.5634%" y="677" width="0.1410%" height="15" fill="rgb(249,149,8)" fg:x="7027663465" fg:w="217100904"/><text x="4.8134%" y="687.50"></text></g><g><title>core::ptr::write (207,278,168 samples, 0.13%)</title><rect x="4.5697%" y="661" width="0.1346%" height="15" fill="rgb(243,35,44)" fg:x="7037486201" fg:w="207278168"/><text x="4.8197%" y="671.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::is_full (50,216,254 samples, 0.03%)</title><rect x="4.7043%" y="677" width="0.0326%" height="15" fill="rgb(246,89,9)" fg:x="7244764369" fg:w="50216254"/><text x="4.9543%" y="687.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back (306,481,410 samples, 0.20%)</title><rect x="4.5527%" y="693" width="0.1990%" height="15" fill="rgb(233,213,13)" fg:x="7011222843" fg:w="306481410"/><text x="4.8027%" y="703.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::to_physical_idx (22,723,630 samples, 0.01%)</title><rect x="4.7369%" y="677" width="0.0148%" height="15" fill="rgb(233,141,41)" fg:x="7294980623" fg:w="22723630"/><text x="4.9869%" y="687.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::wrap_add (22,723,630 samples, 0.01%)</title><rect x="4.7369%" y="661" width="0.0148%" height="15" fill="rgb(239,167,4)" fg:x="7294980623" fg:w="22723630"/><text x="4.9869%" y="671.50"></text></g><g><title>std::sync::poison::Flag::done (32,377,912 samples, 0.02%)</title><rect x="4.7595%" y="661" width="0.0210%" height="15" fill="rgb(209,217,16)" fg:x="7329705093" fg:w="32377912"/><text x="5.0095%" y="671.50"></text></g><g><title>std::thread::panicking (23,265,737 samples, 0.02%)</title><rect x="4.7654%" y="645" width="0.0151%" height="15" fill="rgb(219,88,35)" fg:x="7338817268" fg:w="23265737"/><text x="5.0154%" y="655.50"></text></g><g><title>std::panicking::panicking (23,265,737 samples, 0.02%)</title><rect x="4.7654%" y="629" width="0.0151%" height="15" fill="rgb(220,193,23)" fg:x="7338817268" fg:w="23265737"/><text x="5.0154%" y="639.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (23,265,737 samples, 0.02%)</title><rect x="4.7654%" y="613" width="0.0151%" height="15" fill="rgb(230,90,52)" fg:x="7338817268" fg:w="23265737"/><text x="5.0154%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;alloc::collections::vec_deque::VecDeque&lt;rpq::pq::Item&lt;i32&gt;&gt;&gt;&gt; (1,119,788,654 samples, 0.73%)</title><rect x="4.7517%" y="693" width="0.7271%" height="15" fill="rgb(252,106,19)" fg:x="7317704253" fg:w="1119788654"/><text x="5.0017%" y="703.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,119,788,654 samples, 0.73%)</title><rect x="4.7517%" y="677" width="0.7271%" height="15" fill="rgb(206,74,20)" fg:x="7317704253" fg:w="1119788654"/><text x="5.0017%" y="687.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::write_unlock (1,075,409,902 samples, 0.70%)</title><rect x="4.7805%" y="661" width="0.6983%" height="15" fill="rgb(230,138,44)" fg:x="7362083005" fg:w="1075409902"/><text x="5.0305%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (234,740,442 samples, 0.15%)</title><rect x="5.3264%" y="645" width="0.1524%" height="15" fill="rgb(235,182,43)" fg:x="8202752465" fg:w="234740442"/><text x="5.5764%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_sub (234,740,442 samples, 0.15%)</title><rect x="5.3264%" y="629" width="0.1524%" height="15" fill="rgb(242,16,51)" fg:x="8202752465" fg:w="234740442"/><text x="5.5764%" y="639.50"></text></g><g><title>std::sync::rwlock::RwLockWriteGuard&lt;T&gt;::new (54,452,145 samples, 0.04%)</title><rect x="5.4788%" y="677" width="0.0354%" height="15" fill="rgb(248,9,4)" fg:x="8437492907" fg:w="54452145"/><text x="5.7288%" y="687.50"></text></g><g><title>std::sync::poison::Flag::guard (54,452,145 samples, 0.04%)</title><rect x="5.4788%" y="661" width="0.0354%" height="15" fill="rgb(210,31,22)" fg:x="8437492907" fg:w="54452145"/><text x="5.7288%" y="671.50"></text></g><g><title>std::thread::panicking (30,302,180 samples, 0.02%)</title><rect x="5.4945%" y="645" width="0.0197%" height="15" fill="rgb(239,54,39)" fg:x="8461642872" fg:w="30302180"/><text x="5.7445%" y="655.50"></text></g><g><title>std::panicking::panicking (30,302,180 samples, 0.02%)</title><rect x="5.4945%" y="629" width="0.0197%" height="15" fill="rgb(230,99,41)" fg:x="8461642872" fg:w="30302180"/><text x="5.7445%" y="639.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (30,302,180 samples, 0.02%)</title><rect x="5.4945%" y="613" width="0.0197%" height="15" fill="rgb(253,106,12)" fg:x="8461642872" fg:w="30302180"/><text x="5.7445%" y="623.50"></text></g><g><title>rpq::pq::PriorityQueue&lt;T&gt;::enqueue (2,058,513,634 samples, 1.34%)</title><rect x="4.3270%" y="709" width="1.3367%" height="15" fill="rgb(213,46,41)" fg:x="6663636976" fg:w="2058513634"/><text x="4.5770%" y="719.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (284,657,703 samples, 0.18%)</title><rect x="5.4788%" y="693" width="0.1848%" height="15" fill="rgb(215,133,35)" fg:x="8437492907" fg:w="284657703"/><text x="5.7288%" y="703.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::write (230,205,558 samples, 0.15%)</title><rect x="5.5142%" y="677" width="0.1495%" height="15" fill="rgb(213,28,5)" fg:x="8491945052" fg:w="230205558"/><text x="5.7642%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (24,899,527 samples, 0.02%)</title><rect x="5.6475%" y="661" width="0.0162%" height="15" fill="rgb(215,77,49)" fg:x="8697251083" fg:w="24899527"/><text x="5.8975%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (24,899,527 samples, 0.02%)</title><rect x="5.6475%" y="645" width="0.0162%" height="15" fill="rgb(248,100,22)" fg:x="8697251083" fg:w="24899527"/><text x="5.8975%" y="655.50"></text></g><g><title>rpq::pq::PriorityQueue&lt;T&gt;::prioritize (56,785,325 samples, 0.04%)</title><rect x="5.6664%" y="709" width="0.0369%" height="15" fill="rgb(208,67,9)" fg:x="8726427494" fg:w="56785325"/><text x="5.9164%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (63,547,912 samples, 0.04%)</title><rect x="6.1058%" y="693" width="0.0413%" height="15" fill="rgb(219,133,21)" fg:x="9403092235" fg:w="63547912"/><text x="6.3558%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (63,547,912 samples, 0.04%)</title><rect x="6.1058%" y="677" width="0.0413%" height="15" fill="rgb(246,46,29)" fg:x="9403092235" fg:w="63547912"/><text x="6.3558%" y="687.50"></text></g><g><title>entry_SYSCALL_64 (21,842,326 samples, 0.01%)</title><rect x="6.1471%" y="693" width="0.0142%" height="15" fill="rgb(246,185,52)" fg:x="9466640147" fg:w="21842326"/><text x="6.3971%" y="703.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_read (348,116,070 samples, 0.23%)</title><rect x="6.1613%" y="693" width="0.2260%" height="15" fill="rgb(252,136,11)" fg:x="9488482473" fg:w="348116070"/><text x="6.4113%" y="703.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_until (348,116,070 samples, 0.23%)</title><rect x="6.1613%" y="677" width="0.2260%" height="15" fill="rgb(219,138,53)" fg:x="9488482473" fg:w="348116070"/><text x="6.4113%" y="687.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_read::_{{closure}} (201,417,400 samples, 0.13%)</title><rect x="6.2565%" y="661" width="0.1308%" height="15" fill="rgb(211,51,23)" fg:x="9635181143" fg:w="201417400"/><text x="6.5065%" y="671.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read_contended (1,258,808,929 samples, 0.82%)</title><rect x="5.7033%" y="709" width="0.8174%" height="15" fill="rgb(247,221,28)" fg:x="8783212819" fg:w="1258808929"/><text x="5.9533%" y="719.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::is_read_lockable (205,423,205 samples, 0.13%)</title><rect x="6.3873%" y="693" width="0.1334%" height="15" fill="rgb(251,222,45)" fg:x="9836598543" fg:w="205423205"/><text x="6.6373%" y="703.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::wake_writer_or_readers (26,547,862 samples, 0.02%)</title><rect x="6.5207%" y="709" width="0.0172%" height="15" fill="rgb(217,162,53)" fg:x="10042021748" fg:w="26547862"/><text x="6.7707%" y="719.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::write_contended (69,867,351 samples, 0.05%)</title><rect x="6.5380%" y="709" width="0.0454%" height="15" fill="rgb(229,93,14)" fg:x="10068569610" fg:w="69867351"/><text x="6.7880%" y="719.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_write (25,743,821 samples, 0.02%)</title><rect x="6.5666%" y="693" width="0.0167%" height="15" fill="rgb(209,67,49)" fg:x="10112693140" fg:w="25743821"/><text x="6.8166%" y="703.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_until (25,743,821 samples, 0.02%)</title><rect x="6.5666%" y="677" width="0.0167%" height="15" fill="rgb(213,87,29)" fg:x="10112693140" fg:w="25743821"/><text x="6.8166%" y="687.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (200,490,239 samples, 0.13%)</title><rect x="6.5833%" y="709" width="0.1302%" height="15" fill="rgb(205,151,52)" fg:x="10138436961" fg:w="200490239"/><text x="6.8333%" y="719.50"></text></g><g><title>alloc::string::String::new (392,200,063 samples, 0.25%)</title><rect x="6.8066%" y="661" width="0.2547%" height="15" fill="rgb(253,215,39)" fg:x="10482250393" fg:w="392200063"/><text x="7.0566%" y="671.50"></text></g><g><title>core::fmt::Formatter::new (40,321,431 samples, 0.03%)</title><rect x="7.0612%" y="661" width="0.0262%" height="15" fill="rgb(221,220,41)" fg:x="10874450456" fg:w="40321431"/><text x="7.3112%" y="671.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (480,487,215 samples, 0.31%)</title><rect x="6.7771%" y="677" width="0.3120%" height="15" fill="rgb(218,133,21)" fg:x="10436926890" fg:w="480487215"/><text x="7.0271%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_add (17,317,915 samples, 0.01%)</title><rect x="7.0915%" y="677" width="0.0112%" height="15" fill="rgb(221,193,43)" fg:x="10921063784" fg:w="17317915"/><text x="7.3415%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_add (17,317,915 samples, 0.01%)</title><rect x="7.0915%" y="661" width="0.0112%" height="15" fill="rgb(240,128,52)" fg:x="10921063784" fg:w="17317915"/><text x="7.3415%" y="671.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (632,775,039 samples, 0.41%)</title><rect x="6.7135%" y="709" width="0.4109%" height="15" fill="rgb(253,114,12)" fg:x="10338927200" fg:w="632775039"/><text x="6.9635%" y="719.50"></text></g><g><title>rpq::main::_{{closure}} (632,775,039 samples, 0.41%)</title><rect x="6.7135%" y="693" width="0.4109%" height="15" fill="rgb(215,223,47)" fg:x="10338927200" fg:w="632775039"/><text x="6.9635%" y="703.50"></text></g><g><title>rpq::pq::Item&lt;T&gt;::new (27,637,154 samples, 0.02%)</title><rect x="7.1065%" y="677" width="0.0179%" height="15" fill="rgb(248,225,23)" fg:x="10944065085" fg:w="27637154"/><text x="7.3565%" y="687.50"></text></g><g><title>std::time::Instant::now (16,463,726 samples, 0.01%)</title><rect x="7.1244%" y="709" width="0.0107%" height="15" fill="rgb(250,108,0)" fg:x="10971702239" fg:w="16463726"/><text x="7.3744%" y="719.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (16,463,726 samples, 0.01%)</title><rect x="7.1244%" y="693" width="0.0107%" height="15" fill="rgb(228,208,7)" fg:x="10971702239" fg:w="16463726"/><text x="7.3744%" y="703.50"></text></g><g><title>syscall (740,885,393 samples, 0.48%)</title><rect x="7.1351%" y="709" width="0.4811%" height="15" fill="rgb(244,45,10)" fg:x="10988165965" fg:w="740885393"/><text x="7.3851%" y="719.50"></text></g><g><title>uuid::fmt::&lt;impl core::fmt::Display for uuid::Uuid&gt;::fmt (40,293,707 samples, 0.03%)</title><rect x="7.6162%" y="709" width="0.0262%" height="15" fill="rgb(207,125,25)" fg:x="11729051358" fg:w="40293707"/><text x="7.8662%" y="719.50"></text></g><g><title>uuid::fmt::format_hyphenated (100,324,770 samples, 0.07%)</title><rect x="7.6423%" y="709" width="0.0651%" height="15" fill="rgb(210,195,18)" fg:x="11769345065" fg:w="100324770"/><text x="7.8923%" y="719.50"></text></g><g><title>uuid::builder::&lt;impl uuid::Uuid&gt;::from_u128 (148,522,782 samples, 0.10%)</title><rect x="7.7614%" y="693" width="0.0964%" height="15" fill="rgb(249,80,12)" fg:x="11952664069" fg:w="148522782"/><text x="8.0114%" y="703.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (161,301,601 samples, 0.10%)</title><rect x="7.9477%" y="677" width="0.1047%" height="15" fill="rgb(221,65,9)" fg:x="12239583471" fg:w="161301601"/><text x="8.1977%" y="687.50"></text></g><g><title>[anon] (9,808,034,106 samples, 6.37%)</title><rect x="1.6865%" y="725" width="6.3688%" height="15" fill="rgb(235,49,36)" fg:x="2597247234" fg:w="9808034106"/><text x="1.9365%" y="735.50">[anon]</text></g><g><title>uuid::v4::&lt;impl uuid::Uuid&gt;::new_v4 (535,611,505 samples, 0.35%)</title><rect x="7.7075%" y="709" width="0.3478%" height="15" fill="rgb(225,32,20)" fg:x="11869669835" fg:w="535611505"/><text x="7.9575%" y="719.50"></text></g><g><title>uuid::rng::u128 (304,094,489 samples, 0.20%)</title><rect x="7.8578%" y="693" width="0.1975%" height="15" fill="rgb(215,141,46)" fg:x="12101186851" fg:w="304094489"/><text x="8.1078%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (24,088,535 samples, 0.02%)</title><rect x="10.8150%" y="373" width="0.0156%" height="15" fill="rgb(250,160,47)" fg:x="16655249987" fg:w="24088535"/><text x="11.0650%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (45,211,066 samples, 0.03%)</title><rect x="10.8040%" y="469" width="0.0294%" height="15" fill="rgb(216,222,40)" fg:x="16638413370" fg:w="45211066"/><text x="11.0540%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (45,211,066 samples, 0.03%)</title><rect x="10.8040%" y="453" width="0.0294%" height="15" fill="rgb(234,217,39)" fg:x="16638413370" fg:w="45211066"/><text x="11.0540%" y="463.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (45,211,066 samples, 0.03%)</title><rect x="10.8040%" y="437" width="0.0294%" height="15" fill="rgb(207,178,40)" fg:x="16638413370" fg:w="45211066"/><text x="11.0540%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (45,211,066 samples, 0.03%)</title><rect x="10.8040%" y="421" width="0.0294%" height="15" fill="rgb(221,136,13)" fg:x="16638413370" fg:w="45211066"/><text x="11.0540%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (45,211,066 samples, 0.03%)</title><rect x="10.8040%" y="405" width="0.0294%" height="15" fill="rgb(249,199,10)" fg:x="16638413370" fg:w="45211066"/><text x="11.0540%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (41,095,636 samples, 0.03%)</title><rect x="10.8067%" y="389" width="0.0267%" height="15" fill="rgb(249,222,13)" fg:x="16642528800" fg:w="41095636"/><text x="11.0567%" y="399.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (63,929,129 samples, 0.04%)</title><rect x="10.8016%" y="517" width="0.0415%" height="15" fill="rgb(244,185,38)" fg:x="16634690788" fg:w="63929129"/><text x="11.0516%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (63,929,129 samples, 0.04%)</title><rect x="10.8016%" y="501" width="0.0415%" height="15" fill="rgb(236,202,9)" fg:x="16634690788" fg:w="63929129"/><text x="11.0516%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (63,929,129 samples, 0.04%)</title><rect x="10.8016%" y="485" width="0.0415%" height="15" fill="rgb(250,229,37)" fg:x="16634690788" fg:w="63929129"/><text x="11.0516%" y="495.50"></text></g><g><title>rpq::RPQ&lt;T&gt;::dequeue (88,577,001 samples, 0.06%)</title><rect x="10.7961%" y="533" width="0.0575%" height="15" fill="rgb(206,174,23)" fg:x="16626191290" fg:w="88577001"/><text x="11.0461%" y="543.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (16,148,374 samples, 0.01%)</title><rect x="10.8431%" y="517" width="0.0105%" height="15" fill="rgb(211,33,43)" fg:x="16698619917" fg:w="16148374"/><text x="11.0931%" y="527.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read (16,148,374 samples, 0.01%)</title><rect x="10.8431%" y="501" width="0.0105%" height="15" fill="rgb(245,58,50)" fg:x="16698619917" fg:w="16148374"/><text x="11.0931%" y="511.50"></text></g><g><title>alloc::string::String::new (543,772,734 samples, 0.35%)</title><rect x="11.0380%" y="485" width="0.3531%" height="15" fill="rgb(244,68,36)" fg:x="16998719326" fg:w="543772734"/><text x="11.2880%" y="495.50"></text></g><g><title>core::fmt::Formatter::new (121,481,074 samples, 0.08%)</title><rect x="11.3911%" y="485" width="0.0789%" height="15" fill="rgb(232,229,15)" fg:x="17542492060" fg:w="121481074"/><text x="11.6411%" y="495.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (15,409,487 samples, 0.01%)</title><rect x="11.4751%" y="485" width="0.0100%" height="15" fill="rgb(254,30,23)" fg:x="17671906541" fg:w="15409487"/><text x="11.7251%" y="495.50"></text></g><g><title>rpq::main::_{{closure}} (15,409,487 samples, 0.01%)</title><rect x="11.4751%" y="469" width="0.0100%" height="15" fill="rgb(235,160,14)" fg:x="17671906541" fg:w="15409487"/><text x="11.7251%" y="479.50"></text></g><g><title>syscall (25,336,565 samples, 0.02%)</title><rect x="11.4851%" y="485" width="0.0165%" height="15" fill="rgb(212,155,44)" fg:x="17687316028" fg:w="25336565"/><text x="11.7351%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (27,799,686 samples, 0.02%)</title><rect x="11.9890%" y="293" width="0.0181%" height="15" fill="rgb(226,2,50)" fg:x="18463287944" fg:w="27799686"/><text x="12.2390%" y="303.50"></text></g><g><title>__rdl_alloc (26,626,230 samples, 0.02%)</title><rect x="12.1236%" y="277" width="0.0173%" height="15" fill="rgb(234,177,6)" fg:x="18670598359" fg:w="26626230"/><text x="12.3736%" y="287.50"></text></g><g><title>__rust_alloc (16,856,254 samples, 0.01%)</title><rect x="12.1409%" y="277" width="0.0109%" height="15" fill="rgb(217,24,9)" fg:x="18697224589" fg:w="16856254"/><text x="12.3909%" y="287.50"></text></g><g><title>cfree (16,483,055 samples, 0.01%)</title><rect x="12.1519%" y="277" width="0.0107%" height="15" fill="rgb(220,13,46)" fg:x="18714080843" fg:w="16483055"/><text x="12.4019%" y="287.50"></text></g><g><title>getrandom::imp::getrandom_inner (23,337,227 samples, 0.02%)</title><rect x="12.1700%" y="277" width="0.0152%" height="15" fill="rgb(239,221,27)" fg:x="18741954855" fg:w="23337227"/><text x="12.4200%" y="287.50"></text></g><g><title>getrandom::util_libc::sys_fill_exact (19,618,239 samples, 0.01%)</title><rect x="12.1724%" y="261" width="0.0127%" height="15" fill="rgb(222,198,25)" fg:x="18745673843" fg:w="19618239"/><text x="12.4224%" y="271.50"></text></g><g><title>malloc (2,217,399,723 samples, 1.44%)</title><rect x="12.1851%" y="277" width="1.4399%" height="15" fill="rgb(211,99,13)" fg:x="18765292082" fg:w="2217399723"/><text x="12.4351%" y="287.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (20,588,108 samples, 0.01%)</title><rect x="13.6116%" y="261" width="0.0134%" height="15" fill="rgb(232,111,31)" fg:x="20962103697" fg:w="20588108"/><text x="13.8616%" y="271.50"></text></g><g><title>sysvec_apic_timer_interrupt (20,588,108 samples, 0.01%)</title><rect x="13.6116%" y="245" width="0.0134%" height="15" fill="rgb(245,82,37)" fg:x="20962103697" fg:w="20588108"/><text x="13.8616%" y="255.50"></text></g><g><title>rand::rng::Rng::gen_range (45,668,937 samples, 0.03%)</title><rect x="13.6250%" y="277" width="0.0297%" height="15" fill="rgb(227,149,46)" fg:x="20982691805" fg:w="45668937"/><text x="13.8750%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::sample_single (45,668,937 samples, 0.03%)</title><rect x="13.6250%" y="261" width="0.0297%" height="15" fill="rgb(218,36,50)" fg:x="20982691805" fg:w="45668937"/><text x="13.8750%" y="271.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u64&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (45,668,937 samples, 0.03%)</title><rect x="13.6250%" y="245" width="0.0297%" height="15" fill="rgb(226,80,48)" fg:x="20982691805" fg:w="45668937"/><text x="13.8750%" y="255.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u64&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single_inclusive (45,668,937 samples, 0.03%)</title><rect x="13.6250%" y="229" width="0.0297%" height="15" fill="rgb(238,224,15)" fg:x="20982691805" fg:w="45668937"/><text x="13.8750%" y="239.50"></text></g><g><title>rand::rng::Rng::gen (22,693,807 samples, 0.01%)</title><rect x="13.6399%" y="213" width="0.0147%" height="15" fill="rgb(241,136,10)" fg:x="21005666935" fg:w="22693807"/><text x="13.8899%" y="223.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u64&gt; for rand::distributions::Standard&gt;::sample (22,693,807 samples, 0.01%)</title><rect x="13.6399%" y="197" width="0.0147%" height="15" fill="rgb(208,32,45)" fg:x="21005666935" fg:w="22693807"/><text x="13.8899%" y="207.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (22,693,807 samples, 0.01%)</title><rect x="13.6399%" y="181" width="0.0147%" height="15" fill="rgb(207,135,9)" fg:x="21005666935" fg:w="22693807"/><text x="13.8899%" y="191.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (22,693,807 samples, 0.01%)</title><rect x="13.6399%" y="165" width="0.0147%" height="15" fill="rgb(206,86,44)" fg:x="21005666935" fg:w="22693807"/><text x="13.8899%" y="175.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (22,693,807 samples, 0.01%)</title><rect x="13.6399%" y="149" width="0.0147%" height="15" fill="rgb(245,177,15)" fg:x="21005666935" fg:w="22693807"/><text x="13.8899%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,549,031,381 samples, 1.66%)</title><rect x="12.0071%" y="293" width="1.6552%" height="15" fill="rgb(206,64,50)" fg:x="18491087630" fg:w="2549031381"/><text x="12.2571%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2,647,557,533 samples, 1.72%)</title><rect x="11.9624%" y="357" width="1.7192%" height="15" fill="rgb(234,36,40)" fg:x="18422377705" fg:w="2647557533"/><text x="12.2124%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2,647,557,533 samples, 1.72%)</title><rect x="11.9624%" y="341" width="1.7192%" height="15" fill="rgb(213,64,8)" fg:x="18422377705" fg:w="2647557533"/><text x="12.2124%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2,640,078,379 samples, 1.71%)</title><rect x="11.9673%" y="325" width="1.7143%" height="15" fill="rgb(210,75,36)" fg:x="18429856859" fg:w="2640078379"/><text x="12.2173%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2,633,067,916 samples, 1.71%)</title><rect x="11.9718%" y="309" width="1.7098%" height="15" fill="rgb(229,88,21)" fg:x="18436867322" fg:w="2633067916"/><text x="12.2218%" y="319.50"></text></g><g><title>[libc.so.6] (182,397,405 samples, 0.12%)</title><rect x="13.6816%" y="341" width="0.1184%" height="15" fill="rgb(252,204,47)" fg:x="21069935238" fg:w="182397405"/><text x="13.9316%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (192,904,254 samples, 0.13%)</title><rect x="13.6816%" y="357" width="0.1253%" height="15" fill="rgb(208,77,27)" fg:x="21069935238" fg:w="192904254"/><text x="13.9316%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2,902,005,460 samples, 1.88%)</title><rect x="11.9314%" y="437" width="1.8844%" height="15" fill="rgb(221,76,26)" fg:x="18374579942" fg:w="2902005460"/><text x="12.1814%" y="447.50">&lt;..</text></g><g><title>alloc::string::String::push_str (2,868,575,822 samples, 1.86%)</title><rect x="11.9531%" y="421" width="1.8627%" height="15" fill="rgb(225,139,18)" fg:x="18408009580" fg:w="2868575822"/><text x="12.2031%" y="431.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2,868,575,822 samples, 1.86%)</title><rect x="11.9531%" y="405" width="1.8627%" height="15" fill="rgb(230,137,11)" fg:x="18408009580" fg:w="2868575822"/><text x="12.2031%" y="415.50">a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2,868,575,822 samples, 1.86%)</title><rect x="11.9531%" y="389" width="1.8627%" height="15" fill="rgb(212,28,1)" fg:x="18408009580" fg:w="2868575822"/><text x="12.2031%" y="399.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2,868,575,822 samples, 1.86%)</title><rect x="11.9531%" y="373" width="1.8627%" height="15" fill="rgb(248,164,17)" fg:x="18408009580" fg:w="2868575822"/><text x="12.2031%" y="383.50">a..</text></g><g><title>core::fmt::Formatter::write_str (405,789,072 samples, 0.26%)</title><rect x="13.8185%" y="437" width="0.2635%" height="15" fill="rgb(222,171,42)" fg:x="21280750478" fg:w="405789072"/><text x="14.0685%" y="447.50"></text></g><g><title>syscall (23,166,824 samples, 0.02%)</title><rect x="14.0865%" y="405" width="0.0150%" height="15" fill="rgb(243,84,45)" fg:x="21693519656" fg:w="23166824"/><text x="14.3365%" y="415.50"></text></g><g><title>uuid::fmt::&lt;impl core::fmt::Display for uuid::Uuid&gt;::fmt (4,470,025,022 samples, 2.90%)</title><rect x="11.5016%" y="485" width="2.9026%" height="15" fill="rgb(252,49,23)" fg:x="17712652593" fg:w="4470025022"/><text x="11.7516%" y="495.50">uu..</text></g><g><title>uuid::fmt::&lt;impl core::fmt::LowerHex for uuid::Uuid&gt;::fmt (3,862,558,686 samples, 2.51%)</title><rect x="11.8960%" y="469" width="2.5081%" height="15" fill="rgb(215,19,7)" fg:x="18320118929" fg:w="3862558686"/><text x="12.1460%" y="479.50">uu..</text></g><g><title>&lt;uuid::fmt::Hyphenated as core::fmt::LowerHex&gt;::fmt (3,862,558,686 samples, 2.51%)</title><rect x="11.8960%" y="453" width="2.5081%" height="15" fill="rgb(238,81,41)" fg:x="18320118929" fg:w="3862558686"/><text x="12.1460%" y="463.50">&lt;u..</text></g><g><title>uuid::fmt::Hyphenated::encode_lower (489,157,959 samples, 0.32%)</title><rect x="14.0865%" y="437" width="0.3176%" height="15" fill="rgb(210,199,37)" fg:x="21693519656" fg:w="489157959"/><text x="14.3365%" y="447.50"></text></g><g><title>uuid::fmt::encode_hyphenated (489,157,959 samples, 0.32%)</title><rect x="14.0865%" y="421" width="0.3176%" height="15" fill="rgb(244,192,49)" fg:x="21693519656" fg:w="489157959"/><text x="14.3365%" y="431.50"></text></g><g><title>uuid::fmt::format_hyphenated (465,991,135 samples, 0.30%)</title><rect x="14.1016%" y="405" width="0.3026%" height="15" fill="rgb(226,211,11)" fg:x="21716686480" fg:w="465991135"/><text x="14.3516%" y="415.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (5,209,962,933 samples, 3.38%)</title><rect x="11.0212%" y="501" width="3.3831%" height="15" fill="rgb(236,162,54)" fg:x="16972819004" fg:w="5209962933"/><text x="11.2712%" y="511.50">&lt;T ..</text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_read (19,960,667 samples, 0.01%)</title><rect x="14.4580%" y="469" width="0.0130%" height="15" fill="rgb(220,229,9)" fg:x="22265654641" fg:w="19960667"/><text x="14.7080%" y="479.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_until (19,960,667 samples, 0.01%)</title><rect x="14.4580%" y="453" width="0.0130%" height="15" fill="rgb(250,87,22)" fg:x="22265654641" fg:w="19960667"/><text x="14.7080%" y="463.50"></text></g><g><title>cfree (135,018,393 samples, 0.09%)</title><rect x="14.4043%" y="501" width="0.0877%" height="15" fill="rgb(239,43,17)" fg:x="22182947250" fg:w="135018393"/><text x="14.6543%" y="511.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read_contended (135,018,393 samples, 0.09%)</title><rect x="14.4043%" y="485" width="0.0877%" height="15" fill="rgb(231,177,25)" fg:x="22182947250" fg:w="135018393"/><text x="14.6543%" y="495.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::is_read_lockable (32,350,335 samples, 0.02%)</title><rect x="14.4710%" y="469" width="0.0210%" height="15" fill="rgb(219,179,1)" fg:x="22285615308" fg:w="32350335"/><text x="14.7210%" y="479.50"></text></g><g><title>[libc.so.6] (70,440,981 samples, 0.05%)</title><rect x="14.4920%" y="357" width="0.0457%" height="15" fill="rgb(238,219,53)" fg:x="22317965643" fg:w="70440981"/><text x="14.7420%" y="367.50"></text></g><g><title>[libc.so.6] (36,643,203 samples, 0.02%)</title><rect x="14.5704%" y="341" width="0.0238%" height="15" fill="rgb(232,167,36)" fg:x="22438611813" fg:w="36643203"/><text x="14.8204%" y="351.50"></text></g><g><title>anon.b590f3ad01300cd439eeaa75ce265ed2.6.llvm.11078992251605162324 (16,653,418 samples, 0.01%)</title><rect x="14.5941%" y="341" width="0.0108%" height="15" fill="rgb(244,19,51)" fg:x="22475255016" fg:w="16653418"/><text x="14.8441%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;rpq::pq::Item&lt;i32&gt;&gt;&gt; (190,762,324 samples, 0.12%)</title><rect x="14.4920%" y="501" width="0.1239%" height="15" fill="rgb(224,6,22)" fg:x="22317965643" fg:w="190762324"/><text x="14.7420%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpq::pq::Item&lt;i32&gt;&gt; (190,762,324 samples, 0.12%)</title><rect x="14.4920%" y="485" width="0.1239%" height="15" fill="rgb(224,145,5)" fg:x="22317965643" fg:w="190762324"/><text x="14.7420%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (190,762,324 samples, 0.12%)</title><rect x="14.4920%" y="469" width="0.1239%" height="15" fill="rgb(234,130,49)" fg:x="22317965643" fg:w="190762324"/><text x="14.7420%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (190,762,324 samples, 0.12%)</title><rect x="14.4920%" y="453" width="0.1239%" height="15" fill="rgb(254,6,2)" fg:x="22317965643" fg:w="190762324"/><text x="14.7420%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (190,762,324 samples, 0.12%)</title><rect x="14.4920%" y="437" width="0.1239%" height="15" fill="rgb(208,96,46)" fg:x="22317965643" fg:w="190762324"/><text x="14.7420%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (190,762,324 samples, 0.12%)</title><rect x="14.4920%" y="421" width="0.1239%" height="15" fill="rgb(239,3,39)" fg:x="22317965643" fg:w="190762324"/><text x="14.7420%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (190,762,324 samples, 0.12%)</title><rect x="14.4920%" y="405" width="0.1239%" height="15" fill="rgb(233,210,1)" fg:x="22317965643" fg:w="190762324"/><text x="14.7420%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (190,762,324 samples, 0.12%)</title><rect x="14.4920%" y="389" width="0.1239%" height="15" fill="rgb(244,137,37)" fg:x="22317965643" fg:w="190762324"/><text x="14.7420%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (190,762,324 samples, 0.12%)</title><rect x="14.4920%" y="373" width="0.1239%" height="15" fill="rgb(240,136,2)" fg:x="22317965643" fg:w="190762324"/><text x="14.7420%" y="383.50"></text></g><g><title>cfree (120,321,343 samples, 0.08%)</title><rect x="14.5378%" y="357" width="0.0781%" height="15" fill="rgb(239,18,37)" fg:x="22388406624" fg:w="120321343"/><text x="14.7878%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;rand::rngs::thread::ThreadRng&gt; (43,735,856 samples, 0.03%)</title><rect x="14.6159%" y="501" width="0.0284%" height="15" fill="rgb(218,185,22)" fg:x="22508727967" fg:w="43735856"/><text x="14.8659%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::UnsafeCell&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;rand_chacha::chacha::ChaCha12Core,rand_core::os::OsRng&gt;&gt;&gt;&gt; (43,735,856 samples, 0.03%)</title><rect x="14.6159%" y="485" width="0.0284%" height="15" fill="rgb(225,218,4)" fg:x="22508727967" fg:w="43735856"/><text x="14.8659%" y="495.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (43,735,856 samples, 0.03%)</title><rect x="14.6159%" y="469" width="0.0284%" height="15" fill="rgb(230,182,32)" fg:x="22508727967" fg:w="43735856"/><text x="14.8659%" y="479.50"></text></g><g><title>alloc::rc::RcInnerPtr::dec_strong (18,374,702 samples, 0.01%)</title><rect x="14.6324%" y="453" width="0.0119%" height="15" fill="rgb(242,56,43)" fg:x="22534089121" fg:w="18374702"/><text x="14.8824%" y="463.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (18,374,702 samples, 0.01%)</title><rect x="14.6324%" y="437" width="0.0119%" height="15" fill="rgb(233,99,24)" fg:x="22534089121" fg:w="18374702"/><text x="14.8824%" y="447.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (18,374,702 samples, 0.01%)</title><rect x="14.6324%" y="421" width="0.0119%" height="15" fill="rgb(234,209,42)" fg:x="22534089121" fg:w="18374702"/><text x="14.8824%" y="431.50"></text></g><g><title>core::mem::replace (18,374,702 samples, 0.01%)</title><rect x="14.6324%" y="405" width="0.0119%" height="15" fill="rgb(227,7,12)" fg:x="22534089121" fg:w="18374702"/><text x="14.8824%" y="415.50"></text></g><g><title>core::ptr::write (18,374,702 samples, 0.01%)</title><rect x="14.6324%" y="389" width="0.0119%" height="15" fill="rgb(245,203,43)" fg:x="22534089121" fg:w="18374702"/><text x="14.8824%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_add (22,655,818 samples, 0.01%)</title><rect x="14.6443%" y="501" width="0.0147%" height="15" fill="rgb(238,205,33)" fg:x="22552463823" fg:w="22655818"/><text x="14.8943%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_add (22,655,818 samples, 0.01%)</title><rect x="14.6443%" y="485" width="0.0147%" height="15" fill="rgb(231,56,7)" fg:x="22552463823" fg:w="22655818"/><text x="14.8943%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (179,098,860 samples, 0.12%)</title><rect x="14.6590%" y="501" width="0.1163%" height="15" fill="rgb(244,186,29)" fg:x="22575119641" fg:w="179098860"/><text x="14.9090%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (179,098,860 samples, 0.12%)</title><rect x="14.6590%" y="485" width="0.1163%" height="15" fill="rgb(234,111,31)" fg:x="22575119641" fg:w="179098860"/><text x="14.9090%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::sample_single (33,717,665 samples, 0.02%)</title><rect x="14.7798%" y="485" width="0.0219%" height="15" fill="rgb(241,149,10)" fg:x="22761186089" fg:w="33717665"/><text x="15.0298%" y="495.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u64&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (33,717,665 samples, 0.02%)</title><rect x="14.7798%" y="469" width="0.0219%" height="15" fill="rgb(249,206,44)" fg:x="22761186089" fg:w="33717665"/><text x="15.0298%" y="479.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u64&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single_inclusive (33,717,665 samples, 0.02%)</title><rect x="14.7798%" y="453" width="0.0219%" height="15" fill="rgb(251,153,30)" fg:x="22761186089" fg:w="33717665"/><text x="15.0298%" y="463.50"></text></g><g><title>rand::rng::Rng::gen (29,839,460 samples, 0.02%)</title><rect x="14.7823%" y="437" width="0.0194%" height="15" fill="rgb(239,152,38)" fg:x="22765064294" fg:w="29839460"/><text x="15.0323%" y="447.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u64&gt; for rand::distributions::Standard&gt;::sample (29,839,460 samples, 0.02%)</title><rect x="14.7823%" y="421" width="0.0194%" height="15" fill="rgb(249,139,47)" fg:x="22765064294" fg:w="29839460"/><text x="15.0323%" y="431.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (29,839,460 samples, 0.02%)</title><rect x="14.7823%" y="405" width="0.0194%" height="15" fill="rgb(244,64,35)" fg:x="22765064294" fg:w="29839460"/><text x="15.0323%" y="415.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (29,839,460 samples, 0.02%)</title><rect x="14.7823%" y="389" width="0.0194%" height="15" fill="rgb(216,46,15)" fg:x="22765064294" fg:w="29839460"/><text x="15.0323%" y="399.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (29,839,460 samples, 0.02%)</title><rect x="14.7823%" y="373" width="0.0194%" height="15" fill="rgb(250,74,19)" fg:x="22765064294" fg:w="29839460"/><text x="15.0323%" y="383.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (26,359,196 samples, 0.02%)</title><rect x="14.7846%" y="357" width="0.0171%" height="15" fill="rgb(249,42,33)" fg:x="22768544558" fg:w="26359196"/><text x="15.0346%" y="367.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (26,359,196 samples, 0.02%)</title><rect x="14.7846%" y="341" width="0.0171%" height="15" fill="rgb(242,149,17)" fg:x="22768544558" fg:w="26359196"/><text x="15.0346%" y="351.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (26,359,196 samples, 0.02%)</title><rect x="14.7846%" y="325" width="0.0171%" height="15" fill="rgb(244,29,21)" fg:x="22768544558" fg:w="26359196"/><text x="15.0346%" y="335.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (26,359,196 samples, 0.02%)</title><rect x="14.7846%" y="309" width="0.0171%" height="15" fill="rgb(220,130,37)" fg:x="22768544558" fg:w="26359196"/><text x="15.0346%" y="319.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (19,878,419 samples, 0.01%)</title><rect x="14.7888%" y="293" width="0.0129%" height="15" fill="rgb(211,67,2)" fg:x="22775025335" fg:w="19878419"/><text x="15.0388%" y="303.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (19,878,419 samples, 0.01%)</title><rect x="14.7888%" y="277" width="0.0129%" height="15" fill="rgb(235,68,52)" fg:x="22775025335" fg:w="19878419"/><text x="15.0388%" y="287.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (19,878,419 samples, 0.01%)</title><rect x="14.7888%" y="261" width="0.0129%" height="15" fill="rgb(246,142,3)" fg:x="22775025335" fg:w="19878419"/><text x="15.0388%" y="271.50"></text></g><g><title>rand_chacha::guts::round (15,904,594 samples, 0.01%)</title><rect x="14.7914%" y="245" width="0.0103%" height="15" fill="rgb(241,25,7)" fg:x="22778999160" fg:w="15904594"/><text x="15.0414%" y="255.50"></text></g><g><title>rand::rng::Rng::gen_range (44,691,980 samples, 0.03%)</title><rect x="14.7753%" y="501" width="0.0290%" height="15" fill="rgb(242,119,39)" fg:x="22754218790" fg:w="44691980"/><text x="15.0253%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,rpq::pq::PriorityQueue&lt;i32&gt;&gt;&gt;&gt; (50,811,646 samples, 0.03%)</title><rect x="14.9732%" y="485" width="0.0330%" height="15" fill="rgb(241,98,45)" fg:x="23058969144" fg:w="50811646"/><text x="15.2232%" y="495.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (50,811,646 samples, 0.03%)</title><rect x="14.9732%" y="469" width="0.0330%" height="15" fill="rgb(254,28,30)" fg:x="23058969144" fg:w="50811646"/><text x="15.2232%" y="479.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read_unlock (50,811,646 samples, 0.03%)</title><rect x="14.9732%" y="453" width="0.0330%" height="15" fill="rgb(241,142,54)" fg:x="23058969144" fg:w="50811646"/><text x="15.2232%" y="463.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::first (38,871,416 samples, 0.03%)</title><rect x="15.0062%" y="469" width="0.0252%" height="15" fill="rgb(222,85,15)" fg:x="23109780790" fg:w="38871416"/><text x="15.2562%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::first_key_value (38,871,416 samples, 0.03%)</title><rect x="15.0062%" y="453" width="0.0252%" height="15" fill="rgb(210,85,47)" fg:x="23109780790" fg:w="38871416"/><text x="15.2562%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (20,295,717 samples, 0.01%)</title><rect x="15.0182%" y="437" width="0.0132%" height="15" fill="rgb(224,206,25)" fg:x="23128356489" fg:w="20295717"/><text x="15.2682%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::collections::btree::set::BTreeSet&lt;u64&gt;&gt;&gt; (94,337,495 samples, 0.06%)</title><rect x="15.0314%" y="469" width="0.0613%" height="15" fill="rgb(243,201,19)" fg:x="23148652206" fg:w="94337495"/><text x="15.2814%" y="479.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (94,337,495 samples, 0.06%)</title><rect x="15.0314%" y="453" width="0.0613%" height="15" fill="rgb(236,59,4)" fg:x="23148652206" fg:w="94337495"/><text x="15.2814%" y="463.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read_unlock (94,337,495 samples, 0.06%)</title><rect x="15.0314%" y="437" width="0.0613%" height="15" fill="rgb(254,179,45)" fg:x="23148652206" fg:w="94337495"/><text x="15.2814%" y="447.50"></text></g><g><title>std::sync::poison::Flag::borrow (25,908,358 samples, 0.02%)</title><rect x="15.0927%" y="437" width="0.0168%" height="15" fill="rgb(226,14,10)" fg:x="23242989701" fg:w="25908358"/><text x="15.3427%" y="447.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (39,321,356 samples, 0.03%)</title><rect x="15.0927%" y="453" width="0.0255%" height="15" fill="rgb(244,27,41)" fg:x="23242989701" fg:w="39321356"/><text x="15.3427%" y="463.50"></text></g><g><title>__perf_event_task_sched_out (16,034,299 samples, 0.01%)</title><rect x="15.2158%" y="245" width="0.0104%" height="15" fill="rgb(235,35,32)" fg:x="23432583591" fg:w="16034299"/><text x="15.4658%" y="255.50"></text></g><g><title>dequeue_task_fair (38,236,726 samples, 0.02%)</title><rect x="15.2262%" y="245" width="0.0248%" height="15" fill="rgb(218,68,31)" fg:x="23448617890" fg:w="38236726"/><text x="15.4762%" y="255.50"></text></g><g><title>dequeue_entity (30,633,738 samples, 0.02%)</title><rect x="15.2311%" y="229" width="0.0199%" height="15" fill="rgb(207,120,37)" fg:x="23456220878" fg:w="30633738"/><text x="15.4811%" y="239.50"></text></g><g><title>sched_balance_rq (36,112,746 samples, 0.02%)</title><rect x="15.2559%" y="213" width="0.0234%" height="15" fill="rgb(227,98,0)" fg:x="23494440680" fg:w="36112746"/><text x="15.5059%" y="223.50"></text></g><g><title>sched_balance_find_src_group (15,559,461 samples, 0.01%)</title><rect x="15.2693%" y="197" width="0.0101%" height="15" fill="rgb(207,7,3)" fg:x="23514993965" fg:w="15559461"/><text x="15.5193%" y="207.50"></text></g><g><title>sched_balance_newidle (51,028,071 samples, 0.03%)</title><rect x="15.2510%" y="229" width="0.0331%" height="15" fill="rgb(206,98,19)" fg:x="23486854616" fg:w="51028071"/><text x="15.5010%" y="239.50"></text></g><g><title>pick_next_task_fair (54,635,946 samples, 0.04%)</title><rect x="15.2510%" y="245" width="0.0355%" height="15" fill="rgb(217,5,26)" fg:x="23486854616" fg:w="54635946"/><text x="15.5010%" y="255.50"></text></g><g><title>futex_wait_queue (132,937,172 samples, 0.09%)</title><rect x="15.2136%" y="293" width="0.0863%" height="15" fill="rgb(235,190,38)" fg:x="23429298540" fg:w="132937172"/><text x="15.4636%" y="303.50"></text></g><g><title>schedule (132,937,172 samples, 0.09%)</title><rect x="15.2136%" y="277" width="0.0863%" height="15" fill="rgb(247,86,24)" fg:x="23429298540" fg:w="132937172"/><text x="15.4636%" y="287.50"></text></g><g><title>__schedule (132,937,172 samples, 0.09%)</title><rect x="15.2136%" y="261" width="0.0863%" height="15" fill="rgb(205,101,16)" fg:x="23429298540" fg:w="132937172"/><text x="15.4636%" y="271.50"></text></g><g><title>futex_get_value_locked (15,677,128 samples, 0.01%)</title><rect x="15.3098%" y="277" width="0.0102%" height="15" fill="rgb(246,168,33)" fg:x="23577350756" fg:w="15677128"/><text x="15.5598%" y="287.50"></text></g><g><title>__get_user_nocheck_4 (15,677,128 samples, 0.01%)</title><rect x="15.3098%" y="261" width="0.0102%" height="15" fill="rgb(231,114,1)" fg:x="23577350756" fg:w="15677128"/><text x="15.5598%" y="271.50"></text></g><g><title>futex_q_lock (147,624,255 samples, 0.10%)</title><rect x="15.3200%" y="277" width="0.0959%" height="15" fill="rgb(207,184,53)" fg:x="23593027884" fg:w="147624255"/><text x="15.5700%" y="287.50"></text></g><g><title>_raw_spin_lock (143,093,794 samples, 0.09%)</title><rect x="15.3229%" y="261" width="0.0929%" height="15" fill="rgb(224,95,51)" fg:x="23597558345" fg:w="143093794"/><text x="15.5729%" y="271.50"></text></g><g><title>native_queued_spin_lock_slowpath (139,414,011 samples, 0.09%)</title><rect x="15.3253%" y="245" width="0.0905%" height="15" fill="rgb(212,188,45)" fg:x="23601238128" fg:w="139414011"/><text x="15.5753%" y="255.50"></text></g><g><title>__x64_sys_futex (327,523,356 samples, 0.21%)</title><rect x="15.2110%" y="357" width="0.2127%" height="15" fill="rgb(223,154,38)" fg:x="23425293931" fg:w="327523356"/><text x="15.4610%" y="367.50"></text></g><g><title>do_futex (327,523,356 samples, 0.21%)</title><rect x="15.2110%" y="341" width="0.2127%" height="15" fill="rgb(251,22,52)" fg:x="23425293931" fg:w="327523356"/><text x="15.4610%" y="351.50"></text></g><g><title>futex_wait (327,523,356 samples, 0.21%)</title><rect x="15.2110%" y="325" width="0.2127%" height="15" fill="rgb(229,209,22)" fg:x="23425293931" fg:w="327523356"/><text x="15.4610%" y="335.50"></text></g><g><title>__futex_wait (327,523,356 samples, 0.21%)</title><rect x="15.2110%" y="309" width="0.2127%" height="15" fill="rgb(234,138,34)" fg:x="23425293931" fg:w="327523356"/><text x="15.4610%" y="319.50"></text></g><g><title>futex_wait_setup (190,581,575 samples, 0.12%)</title><rect x="15.3000%" y="293" width="0.1238%" height="15" fill="rgb(212,95,11)" fg:x="23562235712" fg:w="190581575"/><text x="15.5500%" y="303.50"></text></g><g><title>entry_SYSCALL_64 (340,303,042 samples, 0.22%)</title><rect x="15.2028%" y="389" width="0.2210%" height="15" fill="rgb(240,179,47)" fg:x="23412514373" fg:w="340303042"/><text x="15.4528%" y="399.50"></text></g><g><title>do_syscall_64 (333,127,607 samples, 0.22%)</title><rect x="15.2074%" y="373" width="0.2163%" height="15" fill="rgb(240,163,11)" fg:x="23419689808" fg:w="333127607"/><text x="15.4574%" y="383.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (366,688,746 samples, 0.24%)</title><rect x="15.1905%" y="421" width="0.2381%" height="15" fill="rgb(236,37,12)" fg:x="23393616890" fg:w="366688746"/><text x="15.4405%" y="431.50"></text></g><g><title>syscall (355,523,295 samples, 0.23%)</title><rect x="15.1977%" y="405" width="0.2309%" height="15" fill="rgb(232,164,16)" fg:x="23404782341" fg:w="355523295"/><text x="15.4477%" y="415.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_read (43,881,091 samples, 0.03%)</title><rect x="15.4286%" y="421" width="0.0285%" height="15" fill="rgb(244,205,15)" fg:x="23760305636" fg:w="43881091"/><text x="15.6786%" y="431.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_until (43,881,091 samples, 0.03%)</title><rect x="15.4286%" y="405" width="0.0285%" height="15" fill="rgb(223,117,47)" fg:x="23760305636" fg:w="43881091"/><text x="15.6786%" y="415.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_read::_{{closure}} (32,583,188 samples, 0.02%)</title><rect x="15.4359%" y="389" width="0.0212%" height="15" fill="rgb(244,107,35)" fg:x="23771603539" fg:w="32583188"/><text x="15.6859%" y="399.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read_contended (466,863,768 samples, 0.30%)</title><rect x="15.1649%" y="437" width="0.3032%" height="15" fill="rgb(205,140,8)" fg:x="23354154244" fg:w="466863768"/><text x="15.4149%" y="447.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::is_read_lockable (16,831,285 samples, 0.01%)</title><rect x="15.4571%" y="421" width="0.0109%" height="15" fill="rgb(228,84,46)" fg:x="23804186727" fg:w="16831285"/><text x="15.7071%" y="431.50"></text></g><g><title>rpq::bpq::BucketPriorityQueue::peek (779,360,064 samples, 0.51%)</title><rect x="15.0062%" y="485" width="0.5061%" height="15" fill="rgb(254,188,9)" fg:x="23109780790" fg:w="779360064"/><text x="15.2562%" y="495.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (646,151,153 samples, 0.42%)</title><rect x="15.0927%" y="469" width="0.4196%" height="15" fill="rgb(206,112,54)" fg:x="23242989701" fg:w="646151153"/><text x="15.3427%" y="479.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read (606,829,797 samples, 0.39%)</title><rect x="15.1182%" y="453" width="0.3940%" height="15" fill="rgb(216,84,49)" fg:x="23282311057" fg:w="606829797"/><text x="15.3682%" y="463.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::is_read_lockable (68,122,842 samples, 0.04%)</title><rect x="15.4680%" y="437" width="0.0442%" height="15" fill="rgb(214,194,35)" fg:x="23821018012" fg:w="68122842"/><text x="15.7180%" y="447.50"></text></g><g><title>_raw_spin_lock (83,565,156 samples, 0.05%)</title><rect x="15.5348%" y="325" width="0.0543%" height="15" fill="rgb(249,28,3)" fg:x="23923834844" fg:w="83565156"/><text x="15.7848%" y="335.50"></text></g><g><title>native_queued_spin_lock_slowpath (75,149,416 samples, 0.05%)</title><rect x="15.5402%" y="309" width="0.0488%" height="15" fill="rgb(222,56,52)" fg:x="23932250584" fg:w="75149416"/><text x="15.7902%" y="319.50"></text></g><g><title>wake_q_add_safe (23,861,853 samples, 0.02%)</title><rect x="15.6009%" y="325" width="0.0155%" height="15" fill="rgb(245,217,50)" fg:x="24025623878" fg:w="23861853"/><text x="15.8509%" y="335.50"></text></g><g><title>_raw_spin_lock_irqsave (29,041,274 samples, 0.02%)</title><rect x="15.6232%" y="293" width="0.0189%" height="15" fill="rgb(213,201,24)" fg:x="24060012479" fg:w="29041274"/><text x="15.8732%" y="303.50"></text></g><g><title>select_task_rq_fair (37,539,679 samples, 0.02%)</title><rect x="15.6501%" y="293" width="0.0244%" height="15" fill="rgb(248,116,28)" fg:x="24101440584" fg:w="37539679"/><text x="15.9001%" y="303.50"></text></g><g><title>__x64_sys_futex (297,858,845 samples, 0.19%)</title><rect x="15.5321%" y="373" width="0.1934%" height="15" fill="rgb(219,72,43)" fg:x="23919782351" fg:w="297858845"/><text x="15.7821%" y="383.50"></text></g><g><title>do_futex (297,858,845 samples, 0.19%)</title><rect x="15.5321%" y="357" width="0.1934%" height="15" fill="rgb(209,138,14)" fg:x="23919782351" fg:w="297858845"/><text x="15.7821%" y="367.50"></text></g><g><title>futex_wake (297,858,845 samples, 0.19%)</title><rect x="15.5321%" y="341" width="0.1934%" height="15" fill="rgb(222,18,33)" fg:x="23919782351" fg:w="297858845"/><text x="15.7821%" y="351.50"></text></g><g><title>wake_up_q (168,155,465 samples, 0.11%)</title><rect x="15.6164%" y="325" width="0.1092%" height="15" fill="rgb(213,199,7)" fg:x="24049485731" fg:w="168155465"/><text x="15.8664%" y="335.50"></text></g><g><title>try_to_wake_up (168,155,465 samples, 0.11%)</title><rect x="15.6164%" y="309" width="0.1092%" height="15" fill="rgb(250,110,10)" fg:x="24049485731" fg:w="168155465"/><text x="15.8664%" y="319.50"></text></g><g><title>ttwu_queue_wakelist (58,607,018 samples, 0.04%)</title><rect x="15.6875%" y="293" width="0.0381%" height="15" fill="rgb(248,123,6)" fg:x="24159034178" fg:w="58607018"/><text x="15.9375%" y="303.50"></text></g><g><title>default_send_IPI_single_phys (37,848,843 samples, 0.02%)</title><rect x="15.7010%" y="277" width="0.0246%" height="15" fill="rgb(206,91,31)" fg:x="24179792353" fg:w="37848843"/><text x="15.9510%" y="287.50"></text></g><g><title>entry_SYSCALL_64 (301,469,488 samples, 0.20%)</title><rect x="15.5321%" y="405" width="0.1958%" height="15" fill="rgb(211,154,13)" fg:x="23919782351" fg:w="301469488"/><text x="15.7821%" y="415.50"></text></g><g><title>do_syscall_64 (301,469,488 samples, 0.20%)</title><rect x="15.5321%" y="389" width="0.1958%" height="15" fill="rgb(225,148,7)" fg:x="23919782351" fg:w="301469488"/><text x="15.7821%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;alloc::collections::btree::set::BTreeSet&lt;u64&gt;&gt;&gt; (338,789,980 samples, 0.22%)</title><rect x="15.5170%" y="469" width="0.2200%" height="15" fill="rgb(220,160,43)" fg:x="23896449106" fg:w="338789980"/><text x="15.7670%" y="479.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (338,789,980 samples, 0.22%)</title><rect x="15.5170%" y="453" width="0.2200%" height="15" fill="rgb(213,52,39)" fg:x="23896449106" fg:w="338789980"/><text x="15.7670%" y="463.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::write_unlock (338,789,980 samples, 0.22%)</title><rect x="15.5170%" y="437" width="0.2200%" height="15" fill="rgb(243,137,7)" fg:x="23896449106" fg:w="338789980"/><text x="15.7670%" y="447.50"></text></g><g><title>syscall (318,475,726 samples, 0.21%)</title><rect x="15.5302%" y="421" width="0.2068%" height="15" fill="rgb(230,79,13)" fg:x="23916763360" fg:w="318475726"/><text x="15.7802%" y="431.50"></text></g><g><title>dequeue_task_fair (21,461,089 samples, 0.01%)</title><rect x="15.7518%" y="245" width="0.0139%" height="15" fill="rgb(247,105,23)" fg:x="24258132741" fg:w="21461089"/><text x="16.0018%" y="255.50"></text></g><g><title>dequeue_entity (16,021,091 samples, 0.01%)</title><rect x="15.7554%" y="229" width="0.0104%" height="15" fill="rgb(223,179,41)" fg:x="24263572739" fg:w="16021091"/><text x="16.0054%" y="239.50"></text></g><g><title>futex_wait_queue (33,380,198 samples, 0.02%)</title><rect x="15.7491%" y="293" width="0.0217%" height="15" fill="rgb(218,9,34)" fg:x="24253872049" fg:w="33380198"/><text x="15.9991%" y="303.50"></text></g><g><title>schedule (33,380,198 samples, 0.02%)</title><rect x="15.7491%" y="277" width="0.0217%" height="15" fill="rgb(222,106,8)" fg:x="24253872049" fg:w="33380198"/><text x="15.9991%" y="287.50"></text></g><g><title>__schedule (33,380,198 samples, 0.02%)</title><rect x="15.7491%" y="261" width="0.0217%" height="15" fill="rgb(211,220,0)" fg:x="24253872049" fg:w="33380198"/><text x="15.9991%" y="271.50"></text></g><g><title>__x64_sys_futex (36,790,974 samples, 0.02%)</title><rect x="15.7491%" y="357" width="0.0239%" height="15" fill="rgb(229,52,16)" fg:x="24253872049" fg:w="36790974"/><text x="15.9991%" y="367.50"></text></g><g><title>do_futex (36,790,974 samples, 0.02%)</title><rect x="15.7491%" y="341" width="0.0239%" height="15" fill="rgb(212,155,18)" fg:x="24253872049" fg:w="36790974"/><text x="15.9991%" y="351.50"></text></g><g><title>futex_wait (36,790,974 samples, 0.02%)</title><rect x="15.7491%" y="325" width="0.0239%" height="15" fill="rgb(242,21,14)" fg:x="24253872049" fg:w="36790974"/><text x="15.9991%" y="335.50"></text></g><g><title>__futex_wait (36,790,974 samples, 0.02%)</title><rect x="15.7491%" y="309" width="0.0239%" height="15" fill="rgb(222,19,48)" fg:x="24253872049" fg:w="36790974"/><text x="15.9991%" y="319.50"></text></g><g><title>entry_SYSCALL_64 (36,790,990 samples, 0.02%)</title><rect x="15.7491%" y="389" width="0.0239%" height="15" fill="rgb(232,45,27)" fg:x="24253872049" fg:w="36790990"/><text x="15.9991%" y="399.50"></text></g><g><title>do_syscall_64 (36,790,990 samples, 0.02%)</title><rect x="15.7491%" y="373" width="0.0239%" height="15" fill="rgb(249,103,42)" fg:x="24253872049" fg:w="36790990"/><text x="15.9991%" y="383.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (53,929,593 samples, 0.04%)</title><rect x="15.7395%" y="421" width="0.0350%" height="15" fill="rgb(246,81,33)" fg:x="24239165938" fg:w="53929593"/><text x="15.9895%" y="431.50"></text></g><g><title>syscall (46,627,333 samples, 0.03%)</title><rect x="15.7443%" y="405" width="0.0303%" height="15" fill="rgb(252,33,42)" fg:x="24246468198" fg:w="46627333"/><text x="15.9943%" y="415.50"></text></g><g><title>core::hint::spin_loop (18,598,838 samples, 0.01%)</title><rect x="15.7868%" y="389" width="0.0121%" height="15" fill="rgb(209,212,41)" fg:x="24311937935" fg:w="18598838"/><text x="16.0368%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (18,598,838 samples, 0.01%)</title><rect x="15.7868%" y="373" width="0.0121%" height="15" fill="rgb(207,154,6)" fg:x="24311937935" fg:w="18598838"/><text x="16.0368%" y="383.50"></text></g><g><title>rpq::bpq::BucketPriorityQueue::remove_bucket (482,659,205 samples, 0.31%)</title><rect x="15.5122%" y="485" width="0.3134%" height="15" fill="rgb(223,64,47)" fg:x="23889140854" fg:w="482659205"/><text x="15.7622%" y="495.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (136,560,973 samples, 0.09%)</title><rect x="15.7370%" y="469" width="0.0887%" height="15" fill="rgb(211,161,38)" fg:x="24235239086" fg:w="136560973"/><text x="15.9870%" y="479.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::write (136,560,973 samples, 0.09%)</title><rect x="15.7370%" y="453" width="0.0887%" height="15" fill="rgb(219,138,40)" fg:x="24235239086" fg:w="136560973"/><text x="15.9870%" y="463.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::write_contended (136,560,973 samples, 0.09%)</title><rect x="15.7370%" y="437" width="0.0887%" height="15" fill="rgb(241,228,46)" fg:x="24235239086" fg:w="136560973"/><text x="15.9870%" y="447.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_write (78,704,528 samples, 0.05%)</title><rect x="15.7746%" y="421" width="0.0511%" height="15" fill="rgb(223,209,38)" fg:x="24293095531" fg:w="78704528"/><text x="16.0246%" y="431.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_until (78,704,528 samples, 0.05%)</title><rect x="15.7746%" y="405" width="0.0511%" height="15" fill="rgb(236,164,45)" fg:x="24293095531" fg:w="78704528"/><text x="16.0246%" y="415.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_write::_{{closure}} (32,976,332 samples, 0.02%)</title><rect x="15.8042%" y="389" width="0.0214%" height="15" fill="rgb(231,15,5)" fg:x="24338823727" fg:w="32976332"/><text x="16.0542%" y="399.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::is_unlocked (24,297,140 samples, 0.02%)</title><rect x="15.8099%" y="373" width="0.0158%" height="15" fill="rgb(252,35,15)" fg:x="24347502919" fg:w="24297140"/><text x="16.0599%" y="383.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (29,381,366 samples, 0.02%)</title><rect x="15.8764%" y="469" width="0.0191%" height="15" fill="rgb(248,181,18)" fg:x="24449885032" fg:w="29381366"/><text x="16.1264%" y="479.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (25,734,729 samples, 0.02%)</title><rect x="15.8787%" y="453" width="0.0167%" height="15" fill="rgb(233,39,42)" fg:x="24453531669" fg:w="25734729"/><text x="16.1287%" y="463.50"></text></g><g><title>core::ptr::read (25,734,729 samples, 0.02%)</title><rect x="15.8787%" y="437" width="0.0167%" height="15" fill="rgb(238,110,33)" fg:x="24453531669" fg:w="25734729"/><text x="16.1287%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;alloc::collections::vec_deque::VecDeque&lt;rpq::pq::Item&lt;i32&gt;&gt;&gt;&gt; (19,555,829 samples, 0.01%)</title><rect x="15.8954%" y="469" width="0.0127%" height="15" fill="rgb(233,195,10)" fg:x="24479266398" fg:w="19555829"/><text x="16.1454%" y="479.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19,555,829 samples, 0.01%)</title><rect x="15.8954%" y="453" width="0.0127%" height="15" fill="rgb(254,105,3)" fg:x="24479266398" fg:w="19555829"/><text x="16.1454%" y="463.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::write_unlock (15,730,240 samples, 0.01%)</title><rect x="15.8979%" y="437" width="0.0102%" height="15" fill="rgb(221,225,9)" fg:x="24483091987" fg:w="15730240"/><text x="16.1479%" y="447.50"></text></g><g><title>rpq::pq::PriorityQueue&lt;T&gt;::dequeue (159,503,353 samples, 0.10%)</title><rect x="15.8257%" y="485" width="0.1036%" height="15" fill="rgb(224,227,45)" fg:x="24371800059" fg:w="159503353"/><text x="16.0757%" y="495.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (32,481,185 samples, 0.02%)</title><rect x="15.9081%" y="469" width="0.0211%" height="15" fill="rgb(229,198,43)" fg:x="24498822227" fg:w="32481185"/><text x="16.1581%" y="479.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::write (28,195,163 samples, 0.02%)</title><rect x="15.9109%" y="453" width="0.0183%" height="15" fill="rgb(206,209,35)" fg:x="24503108249" fg:w="28195163"/><text x="16.1609%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (28,595,635 samples, 0.02%)</title><rect x="15.9455%" y="437" width="0.0186%" height="15" fill="rgb(245,195,53)" fg:x="24556291018" fg:w="28595635"/><text x="16.1955%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (28,595,635 samples, 0.02%)</title><rect x="15.9455%" y="421" width="0.0186%" height="15" fill="rgb(240,92,26)" fg:x="24556291018" fg:w="28595635"/><text x="16.1955%" y="431.50"></text></g><g><title>rpq::pq::PriorityQueue&lt;T&gt;::len (73,235,404 samples, 0.05%)</title><rect x="15.9292%" y="485" width="0.0476%" height="15" fill="rgb(207,40,23)" fg:x="24531303412" fg:w="73235404"/><text x="16.1792%" y="495.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (51,820,572 samples, 0.03%)</title><rect x="15.9431%" y="469" width="0.0336%" height="15" fill="rgb(223,111,35)" fg:x="24552718244" fg:w="51820572"/><text x="16.1931%" y="479.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read (51,820,572 samples, 0.03%)</title><rect x="15.9431%" y="453" width="0.0336%" height="15" fill="rgb(229,147,28)" fg:x="24552718244" fg:w="51820572"/><text x="16.1931%" y="463.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read_contended (19,652,163 samples, 0.01%)</title><rect x="15.9640%" y="437" width="0.0128%" height="15" fill="rgb(211,29,28)" fg:x="24584886653" fg:w="19652163"/><text x="16.2140%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (31,911,943 samples, 0.02%)</title><rect x="15.9965%" y="357" width="0.0207%" height="15" fill="rgb(228,72,33)" fg:x="24634926865" fg:w="31911943"/><text x="16.2465%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (16,319,344 samples, 0.01%)</title><rect x="16.0066%" y="341" width="0.0106%" height="15" fill="rgb(205,214,31)" fg:x="24650519464" fg:w="16319344"/><text x="16.2566%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (174,745,765 samples, 0.11%)</title><rect x="16.0729%" y="341" width="0.1135%" height="15" fill="rgb(224,111,15)" fg:x="24752535281" fg:w="174745765"/><text x="16.3229%" y="351.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (419,202,346 samples, 0.27%)</title><rect x="15.9940%" y="405" width="0.2722%" height="15" fill="rgb(253,21,26)" fg:x="24631063506" fg:w="419202346"/><text x="16.2440%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (419,202,346 samples, 0.27%)</title><rect x="15.9940%" y="389" width="0.2722%" height="15" fill="rgb(245,139,43)" fg:x="24631063506" fg:w="419202346"/><text x="16.2440%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (419,202,346 samples, 0.27%)</title><rect x="15.9940%" y="373" width="0.2722%" height="15" fill="rgb(252,170,7)" fg:x="24631063506" fg:w="419202346"/><text x="16.2440%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (383,427,044 samples, 0.25%)</title><rect x="16.0172%" y="357" width="0.2490%" height="15" fill="rgb(231,118,14)" fg:x="24666838808" fg:w="383427044"/><text x="16.2672%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (122,984,806 samples, 0.08%)</title><rect x="16.1864%" y="341" width="0.0799%" height="15" fill="rgb(238,83,0)" fg:x="24927281046" fg:w="122984806"/><text x="16.4364%" y="351.50"></text></g><g><title>hashbrown::map::make_hash (444,248,675 samples, 0.29%)</title><rect x="15.9940%" y="437" width="0.2885%" height="15" fill="rgb(221,39,39)" fg:x="24631063506" fg:w="444248675"/><text x="16.2440%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (444,248,675 samples, 0.29%)</title><rect x="15.9940%" y="421" width="0.2885%" height="15" fill="rgb(222,119,46)" fg:x="24631063506" fg:w="444248675"/><text x="16.2440%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (19,629,821 samples, 0.01%)</title><rect x="16.2697%" y="405" width="0.0127%" height="15" fill="rgb(222,165,49)" fg:x="25055682360" fg:w="19629821"/><text x="16.5197%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (19,629,821 samples, 0.01%)</title><rect x="16.2697%" y="389" width="0.0127%" height="15" fill="rgb(219,113,52)" fg:x="25055682360" fg:w="19629821"/><text x="16.5197%" y="399.50"></text></g><g><title>core::hash::Hasher::write_u64 (19,629,821 samples, 0.01%)</title><rect x="16.2697%" y="373" width="0.0127%" height="15" fill="rgb(214,7,15)" fg:x="25055682360" fg:w="19629821"/><text x="16.5197%" y="383.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (19,629,821 samples, 0.01%)</title><rect x="16.2697%" y="357" width="0.0127%" height="15" fill="rgb(235,32,4)" fg:x="25055682360" fg:w="19629821"/><text x="16.5197%" y="367.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (19,629,821 samples, 0.01%)</title><rect x="16.2697%" y="341" width="0.0127%" height="15" fill="rgb(238,90,54)" fg:x="25055682360" fg:w="19629821"/><text x="16.5197%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (19,629,821 samples, 0.01%)</title><rect x="16.2697%" y="325" width="0.0127%" height="15" fill="rgb(213,208,19)" fg:x="25055682360" fg:w="19629821"/><text x="16.5197%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (43,303,143 samples, 0.03%)</title><rect x="16.3085%" y="389" width="0.0281%" height="15" fill="rgb(233,156,4)" fg:x="25115408026" fg:w="43303143"/><text x="16.5585%" y="399.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (39,038,368 samples, 0.03%)</title><rect x="16.3113%" y="373" width="0.0253%" height="15" fill="rgb(207,194,5)" fg:x="25119672801" fg:w="39038368"/><text x="16.5613%" y="383.50"></text></g><g><title>hashbrown::raw::h2 (20,396,728 samples, 0.01%)</title><rect x="16.3471%" y="389" width="0.0132%" height="15" fill="rgb(206,111,30)" fg:x="25174849171" fg:w="20396728"/><text x="16.5971%" y="399.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (594,932,974 samples, 0.39%)</title><rect x="15.9768%" y="485" width="0.3863%" height="15" fill="rgb(243,70,54)" fg:x="24604538816" fg:w="594932974"/><text x="16.2268%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (594,932,974 samples, 0.39%)</title><rect x="15.9768%" y="469" width="0.3863%" height="15" fill="rgb(242,28,8)" fg:x="24604538816" fg:w="594932974"/><text x="16.2268%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (591,390,961 samples, 0.38%)</title><rect x="15.9791%" y="453" width="0.3840%" height="15" fill="rgb(219,106,18)" fg:x="24608080829" fg:w="591390961"/><text x="16.2291%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (124,159,609 samples, 0.08%)</title><rect x="16.2825%" y="437" width="0.0806%" height="15" fill="rgb(244,222,10)" fg:x="25075312181" fg:w="124159609"/><text x="16.5325%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (124,159,609 samples, 0.08%)</title><rect x="16.2825%" y="421" width="0.0806%" height="15" fill="rgb(236,179,52)" fg:x="25075312181" fg:w="124159609"/><text x="16.5325%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (124,159,609 samples, 0.08%)</title><rect x="16.2825%" y="405" width="0.0806%" height="15" fill="rgb(213,23,39)" fg:x="25075312181" fg:w="124159609"/><text x="16.5325%" y="415.50"></text></g><g><title>std::sync::poison::Flag::borrow (54,331,779 samples, 0.04%)</title><rect x="16.3631%" y="453" width="0.0353%" height="15" fill="rgb(238,48,10)" fg:x="25199471790" fg:w="54331779"/><text x="16.6131%" y="463.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (79,985,238 samples, 0.05%)</title><rect x="16.3631%" y="469" width="0.0519%" height="15" fill="rgb(251,196,23)" fg:x="25199471790" fg:w="79985238"/><text x="16.6131%" y="479.50"></text></g><g><title>std::sync::poison::map_result (25,653,459 samples, 0.02%)</title><rect x="16.3984%" y="453" width="0.0167%" height="15" fill="rgb(250,152,24)" fg:x="25253803569" fg:w="25653459"/><text x="16.6484%" y="463.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read_contended (23,162,679 samples, 0.02%)</title><rect x="16.5128%" y="453" width="0.0150%" height="15" fill="rgb(209,150,17)" fg:x="25430059314" fg:w="23162679"/><text x="16.7628%" y="463.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_read (23,162,679 samples, 0.02%)</title><rect x="16.5128%" y="437" width="0.0150%" height="15" fill="rgb(234,202,34)" fg:x="25430059314" fg:w="23162679"/><text x="16.7628%" y="447.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_until (23,162,679 samples, 0.02%)</title><rect x="16.5128%" y="421" width="0.0150%" height="15" fill="rgb(253,148,53)" fg:x="25430059314" fg:w="23162679"/><text x="16.7628%" y="431.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_read::_{{closure}} (23,162,679 samples, 0.02%)</title><rect x="16.5128%" y="405" width="0.0150%" height="15" fill="rgb(218,129,16)" fg:x="25430059314" fg:w="23162679"/><text x="16.7628%" y="415.50"></text></g><g><title>rpq::RPQ&lt;T&gt;::dequeue (2,838,107,973 samples, 1.84%)</title><rect x="14.8071%" y="501" width="1.8429%" height="15" fill="rgb(216,85,19)" fg:x="22803138625" fg:w="2838107973"/><text x="15.0571%" y="511.50">r..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (441,774,808 samples, 0.29%)</title><rect x="16.3631%" y="485" width="0.2869%" height="15" fill="rgb(235,228,7)" fg:x="25199471790" fg:w="441774808"/><text x="16.6131%" y="495.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read (361,789,570 samples, 0.23%)</title><rect x="16.4150%" y="469" width="0.2349%" height="15" fill="rgb(245,175,0)" fg:x="25279457028" fg:w="361789570"/><text x="16.6650%" y="479.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::is_read_lockable (188,024,605 samples, 0.12%)</title><rect x="16.5279%" y="453" width="0.1221%" height="15" fill="rgb(208,168,36)" fg:x="25453221993" fg:w="188024605"/><text x="16.7779%" y="463.50"></text></g><g><title>__vdso_clock_gettime (21,745,532 samples, 0.01%)</title><rect x="21.7951%" y="277" width="0.0141%" height="15" fill="rgb(246,171,24)" fg:x="33564927376" fg:w="21745532"/><text x="22.0451%" y="287.50"></text></g><g><title>__irqentry_text_end (34,838,604 samples, 0.02%)</title><rect x="22.4776%" y="229" width="0.0226%" height="15" fill="rgb(215,142,24)" fg:x="34615901668" fg:w="34838604"/><text x="22.7276%" y="239.50"></text></g><g><title>stackleak_erase (25,710,068 samples, 0.02%)</title><rect x="22.4835%" y="213" width="0.0167%" height="15" fill="rgb(250,187,7)" fg:x="34625030204" fg:w="25710068"/><text x="22.7335%" y="223.50"></text></g><g><title>asm_exc_page_fault (64,038,148 samples, 0.04%)</title><rect x="22.5171%" y="213" width="0.0416%" height="15" fill="rgb(228,66,33)" fg:x="34676712259" fg:w="64038148"/><text x="22.7671%" y="223.50"></text></g><g><title>sync_regs (21,780,865 samples, 0.01%)</title><rect x="22.5445%" y="197" width="0.0141%" height="15" fill="rgb(234,215,21)" fg:x="34718969542" fg:w="21780865"/><text x="22.7945%" y="207.50"></text></g><g><title>osq_lock (42,620,582 samples, 0.03%)</title><rect x="22.6057%" y="117" width="0.0277%" height="15" fill="rgb(222,191,20)" fg:x="34813217289" fg:w="42620582"/><text x="22.8557%" y="127.50"></text></g><g><title>down_write_killable (257,376,702 samples, 0.17%)</title><rect x="22.5943%" y="149" width="0.1671%" height="15" fill="rgb(245,79,54)" fg:x="34795667158" fg:w="257376702"/><text x="22.8443%" y="159.50"></text></g><g><title>rwsem_down_write_slowpath (249,477,962 samples, 0.16%)</title><rect x="22.5994%" y="133" width="0.1620%" height="15" fill="rgb(240,10,37)" fg:x="34803565898" fg:w="249477962"/><text x="22.8494%" y="143.50"></text></g><g><title>rwsem_spin_on_owner (197,205,989 samples, 0.13%)</title><rect x="22.6334%" y="117" width="0.1281%" height="15" fill="rgb(214,192,32)" fg:x="34855837871" fg:w="197205989"/><text x="22.8834%" y="127.50"></text></g><g><title>__vm_enough_memory (23,626,847 samples, 0.02%)</title><rect x="22.7888%" y="133" width="0.0153%" height="15" fill="rgb(209,36,54)" fg:x="35095142129" fg:w="23626847"/><text x="23.0388%" y="143.50"></text></g><g><title>__pte_offset_map_lock (17,726,883 samples, 0.01%)</title><rect x="22.8519%" y="117" width="0.0115%" height="15" fill="rgb(220,10,11)" fg:x="35192350647" fg:w="17726883"/><text x="23.1019%" y="127.50"></text></g><g><title>change_protection (85,033,888 samples, 0.06%)</title><rect x="22.8129%" y="133" width="0.0552%" height="15" fill="rgb(221,106,17)" fg:x="35132337250" fg:w="85033888"/><text x="23.0629%" y="143.50"></text></g><g><title>may_expand_vm (41,043,369 samples, 0.03%)</title><rect x="22.8682%" y="133" width="0.0267%" height="15" fill="rgb(251,142,44)" fg:x="35217371138" fg:w="41043369"/><text x="23.1182%" y="143.50"></text></g><g><title>perf_event_mmap_output (24,703,596 samples, 0.02%)</title><rect x="22.9668%" y="101" width="0.0160%" height="15" fill="rgb(238,13,15)" fg:x="35369292679" fg:w="24703596"/><text x="23.2168%" y="111.50"></text></g><g><title>__perf_event__output_id_sample (23,124,367 samples, 0.02%)</title><rect x="23.0992%" y="69" width="0.0150%" height="15" fill="rgb(208,107,27)" fg:x="35573245401" fg:w="23124367"/><text x="23.3492%" y="79.50"></text></g><g><title>perf_output_copy (19,273,373 samples, 0.01%)</title><rect x="23.1017%" y="53" width="0.0125%" height="15" fill="rgb(205,136,37)" fg:x="35577096395" fg:w="19273373"/><text x="23.3517%" y="63.50"></text></g><g><title>__perf_event_header__init_id (48,210,459 samples, 0.03%)</title><rect x="23.1143%" y="69" width="0.0313%" height="15" fill="rgb(250,205,27)" fg:x="35596369768" fg:w="48210459"/><text x="23.3643%" y="79.50"></text></g><g><title>local_clock (15,591,607 samples, 0.01%)</title><rect x="23.1354%" y="53" width="0.0101%" height="15" fill="rgb(210,80,43)" fg:x="35628988620" fg:w="15591607"/><text x="23.3854%" y="63.50"></text></g><g><title>local_clock_noinstr (15,591,607 samples, 0.01%)</title><rect x="23.1354%" y="37" width="0.0101%" height="15" fill="rgb(247,160,36)" fg:x="35628988620" fg:w="15591607"/><text x="23.3854%" y="47.50"></text></g><g><title>perf_output_begin (41,768,248 samples, 0.03%)</title><rect x="23.1550%" y="69" width="0.0271%" height="15" fill="rgb(234,13,49)" fg:x="35659195017" fg:w="41768248"/><text x="23.4050%" y="79.50"></text></g><g><title>__output_copy (109,583,721 samples, 0.07%)</title><rect x="23.1869%" y="53" width="0.0712%" height="15" fill="rgb(234,122,0)" fg:x="35708230401" fg:w="109583721"/><text x="23.4369%" y="63.50"></text></g><g><title>memcpy (73,250,526 samples, 0.05%)</title><rect x="23.2105%" y="37" width="0.0476%" height="15" fill="rgb(207,146,38)" fg:x="35744563596" fg:w="73250526"/><text x="23.4605%" y="47.50"></text></g><g><title>perf_output_copy (120,538,893 samples, 0.08%)</title><rect x="23.1822%" y="69" width="0.0783%" height="15" fill="rgb(207,177,25)" fg:x="35700963265" fg:w="120538893"/><text x="23.4322%" y="79.50"></text></g><g><title>perf_iterate_ctx (431,654,976 samples, 0.28%)</title><rect x="22.9828%" y="101" width="0.2803%" height="15" fill="rgb(211,178,42)" fg:x="35393996275" fg:w="431654976"/><text x="23.2328%" y="111.50"></text></g><g><title>perf_event_mmap_output (301,477,869 samples, 0.20%)</title><rect x="23.0674%" y="85" width="0.1958%" height="15" fill="rgb(230,69,54)" fg:x="35524173382" fg:w="301477869"/><text x="23.3174%" y="95.50"></text></g><g><title>perf_iterate_sb.constprop.0 (504,595,900 samples, 0.33%)</title><rect x="22.9387%" y="117" width="0.3277%" height="15" fill="rgb(214,135,41)" fg:x="35325996768" fg:w="504595900"/><text x="23.1887%" y="127.50"></text></g><g><title>perf_event_mmap (608,977,981 samples, 0.40%)</title><rect x="22.8948%" y="133" width="0.3954%" height="15" fill="rgb(237,67,25)" fg:x="35258414507" fg:w="608977981"/><text x="23.1448%" y="143.50"></text></g><g><title>strnlen (24,697,017 samples, 0.02%)</title><rect x="23.2742%" y="117" width="0.0160%" height="15" fill="rgb(222,189,50)" fg:x="35842695471" fg:w="24697017"/><text x="23.5242%" y="127.50"></text></g><g><title>down_write (33,341,287 samples, 0.02%)</title><rect x="23.3463%" y="101" width="0.0216%" height="15" fill="rgb(245,148,34)" fg:x="35953701470" fg:w="33341287"/><text x="23.5963%" y="111.50"></text></g><g><title>mas_alloc_nodes (29,837,835 samples, 0.02%)</title><rect x="23.3938%" y="85" width="0.0194%" height="15" fill="rgb(222,29,6)" fg:x="36026807490" fg:w="29837835"/><text x="23.6438%" y="95.50"></text></g><g><title>kmem_cache_alloc_bulk_noprof (26,008,905 samples, 0.02%)</title><rect x="23.3962%" y="69" width="0.0169%" height="15" fill="rgb(221,189,43)" fg:x="36030636420" fg:w="26008905"/><text x="23.6462%" y="79.50"></text></g><g><title>mas_preallocate (80,969,903 samples, 0.05%)</title><rect x="23.3738%" y="101" width="0.0526%" height="15" fill="rgb(207,36,27)" fg:x="35996145667" fg:w="80969903"/><text x="23.6238%" y="111.50"></text></g><g><title>mas_destroy (24,714,150 samples, 0.02%)</title><rect x="23.4388%" y="85" width="0.0160%" height="15" fill="rgb(217,90,24)" fg:x="36096232348" fg:w="24714150"/><text x="23.6888%" y="95.50"></text></g><g><title>mas_topiary_replace (26,229,683 samples, 0.02%)</title><rect x="23.4705%" y="53" width="0.0170%" height="15" fill="rgb(224,66,35)" fg:x="36145053454" fg:w="26229683"/><text x="23.7205%" y="63.50"></text></g><g><title>mas_spanning_rebalance.isra.0 (54,668,136 samples, 0.04%)</title><rect x="23.4573%" y="69" width="0.0355%" height="15" fill="rgb(221,13,50)" fg:x="36124672128" fg:w="54668136"/><text x="23.7073%" y="79.50"></text></g><g><title>mas_wr_spanning_store.isra.0 (61,727,267 samples, 0.04%)</title><rect x="23.4549%" y="85" width="0.0401%" height="15" fill="rgb(236,68,49)" fg:x="36120946498" fg:w="61727267"/><text x="23.7049%" y="95.50"></text></g><g><title>mas_wr_slot_store (22,751,523 samples, 0.01%)</title><rect x="23.5137%" y="69" width="0.0148%" height="15" fill="rgb(229,146,28)" fg:x="36211563742" fg:w="22751523"/><text x="23.7637%" y="79.50"></text></g><g><title>mas_store_prealloc (156,381,614 samples, 0.10%)</title><rect x="23.4315%" y="101" width="0.1015%" height="15" fill="rgb(225,31,38)" fg:x="36084959355" fg:w="156381614"/><text x="23.6815%" y="111.50"></text></g><g><title>mas_wr_store_entry.isra.0 (58,667,204 samples, 0.04%)</title><rect x="23.4950%" y="85" width="0.0381%" height="15" fill="rgb(250,208,3)" fg:x="36182673765" fg:w="58667204"/><text x="23.7450%" y="95.50"></text></g><g><title>mt_find (42,357,277 samples, 0.03%)</title><rect x="23.5331%" y="101" width="0.0275%" height="15" fill="rgb(246,54,23)" fg:x="36241340969" fg:w="42357277"/><text x="23.7831%" y="111.50"></text></g><g><title>vma_adjust_trans_huge (50,541,795 samples, 0.03%)</title><rect x="23.5747%" y="101" width="0.0328%" height="15" fill="rgb(243,76,11)" fg:x="36305427918" fg:w="50541795"/><text x="23.8247%" y="111.50"></text></g><g><title>find_vma (41,865,896 samples, 0.03%)</title><rect x="23.5803%" y="85" width="0.0272%" height="15" fill="rgb(245,21,50)" fg:x="36314103817" fg:w="41865896"/><text x="23.8303%" y="95.50"></text></g><g><title>mt_find (30,415,774 samples, 0.02%)</title><rect x="23.5877%" y="69" width="0.0198%" height="15" fill="rgb(228,9,43)" fg:x="36325553939" fg:w="30415774"/><text x="23.8377%" y="79.50"></text></g><g><title>vma_complete (37,603,605 samples, 0.02%)</title><rect x="23.6075%" y="101" width="0.0244%" height="15" fill="rgb(208,100,47)" fg:x="36355969713" fg:w="37603605"/><text x="23.8575%" y="111.50"></text></g><g><title>vma_modify (588,425,893 samples, 0.38%)</title><rect x="23.2957%" y="133" width="0.3821%" height="15" fill="rgb(232,26,8)" fg:x="35875819656" fg:w="588425893"/><text x="23.5457%" y="143.50"></text></g><g><title>vma_merge (579,823,982 samples, 0.38%)</title><rect x="23.3013%" y="117" width="0.3765%" height="15" fill="rgb(216,166,38)" fg:x="35884421567" fg:w="579823982"/><text x="23.5513%" y="127.50"></text></g><g><title>vma_prepare (70,672,231 samples, 0.05%)</title><rect x="23.6319%" y="101" width="0.0459%" height="15" fill="rgb(251,202,51)" fg:x="36393573318" fg:w="70672231"/><text x="23.8819%" y="111.50"></text></g><g><title>mprotect_fixup (1,405,647,730 samples, 0.91%)</title><rect x="22.7690%" y="149" width="0.9127%" height="15" fill="rgb(254,216,34)" fg:x="35064723190" fg:w="1405647730"/><text x="23.0190%" y="159.50"></text></g><g><title>security_file_mprotect (16,410,921 samples, 0.01%)</title><rect x="23.6818%" y="149" width="0.0107%" height="15" fill="rgb(251,32,27)" fg:x="36470370920" fg:w="16410921"/><text x="23.9318%" y="159.50"></text></g><g><title>__x64_sys_mprotect (1,801,767,860 samples, 1.17%)</title><rect x="22.5651%" y="181" width="1.1700%" height="15" fill="rgb(208,127,28)" fg:x="34750616100" fg:w="1801767860"/><text x="22.8151%" y="191.50"></text></g><g><title>do_mprotect_pkey (1,801,767,860 samples, 1.17%)</title><rect x="22.5651%" y="165" width="1.1700%" height="15" fill="rgb(224,137,22)" fg:x="34750616100" fg:w="1801767860"/><text x="22.8151%" y="175.50"></text></g><g><title>up_write (46,608,229 samples, 0.03%)</title><rect x="23.7048%" y="149" width="0.0303%" height="15" fill="rgb(254,70,32)" fg:x="36505775731" fg:w="46608229"/><text x="23.9548%" y="159.50"></text></g><g><title>entry_SYSCALL_64 (1,836,161,416 samples, 1.19%)</title><rect x="22.5587%" y="213" width="1.1923%" height="15" fill="rgb(229,75,37)" fg:x="34740750407" fg:w="1836161416"/><text x="22.8087%" y="223.50"></text></g><g><title>do_syscall_64 (1,828,994,284 samples, 1.19%)</title><rect x="22.5633%" y="197" width="1.1876%" height="15" fill="rgb(252,64,23)" fg:x="34747917539" fg:w="1828994284"/><text x="22.8133%" y="207.50"></text></g><g><title>syscall_exit_to_user_mode (24,527,863 samples, 0.02%)</title><rect x="23.7350%" y="181" width="0.0159%" height="15" fill="rgb(232,162,48)" fg:x="36552383960" fg:w="24527863"/><text x="23.9850%" y="191.50"></text></g><g><title>error_entry (24,919,307 samples, 0.02%)</title><rect x="23.7510%" y="213" width="0.0162%" height="15" fill="rgb(246,160,12)" fg:x="36576911823" fg:w="24919307"/><text x="24.0010%" y="223.50"></text></g><g><title>__mprotect (2,055,033,203 samples, 1.33%)</title><rect x="22.5002%" y="229" width="1.3344%" height="15" fill="rgb(247,166,0)" fg:x="34650740272" fg:w="2055033203"/><text x="22.7502%" y="239.50"></text></g><g><title>syscall_return_via_sysret (103,942,345 samples, 0.07%)</title><rect x="23.7671%" y="213" width="0.0675%" height="15" fill="rgb(249,219,21)" fg:x="36601831130" fg:w="103942345"/><text x="24.0171%" y="223.50"></text></g><g><title>stackleak_erase (74,584,882 samples, 0.05%)</title><rect x="23.7862%" y="197" width="0.0484%" height="15" fill="rgb(205,209,3)" fg:x="36631188593" fg:w="74584882"/><text x="24.0362%" y="207.50"></text></g><g><title>__folio_throttle_swaprate (31,636,367 samples, 0.02%)</title><rect x="23.9167%" y="149" width="0.0205%" height="15" fill="rgb(243,44,1)" fg:x="36832163682" fg:w="31636367"/><text x="24.1667%" y="159.50"></text></g><g><title>blk_cgroup_congested (31,636,367 samples, 0.02%)</title><rect x="23.9167%" y="133" width="0.0205%" height="15" fill="rgb(206,159,16)" fg:x="36832163682" fg:w="31636367"/><text x="24.1667%" y="143.50"></text></g><g><title>__mod_lruvec_state (21,514,538 samples, 0.01%)</title><rect x="23.9507%" y="133" width="0.0140%" height="15" fill="rgb(244,77,30)" fg:x="36884550845" fg:w="21514538"/><text x="24.2007%" y="143.50"></text></g><g><title>__mod_node_page_state (21,514,538 samples, 0.01%)</title><rect x="23.9507%" y="117" width="0.0140%" height="15" fill="rgb(218,69,12)" fg:x="36884550845" fg:w="21514538"/><text x="24.2007%" y="127.50"></text></g><g><title>__lruvec_stat_mod_folio (68,772,720 samples, 0.04%)</title><rect x="23.9372%" y="149" width="0.0447%" height="15" fill="rgb(212,87,7)" fg:x="36863800049" fg:w="68772720"/><text x="24.1872%" y="159.50"></text></g><g><title>__mod_memcg_lruvec_state (26,507,386 samples, 0.02%)</title><rect x="23.9647%" y="133" width="0.0172%" height="15" fill="rgb(245,114,25)" fg:x="36906065383" fg:w="26507386"/><text x="24.2147%" y="143.50"></text></g><g><title>get_mem_cgroup_from_mm (29,912,254 samples, 0.02%)</title><rect x="23.9840%" y="133" width="0.0194%" height="15" fill="rgb(210,61,42)" fg:x="36935873712" fg:w="29912254"/><text x="24.2340%" y="143.50"></text></g><g><title>__count_memcg_events (25,473,498 samples, 0.02%)</title><rect x="24.0061%" y="101" width="0.0165%" height="15" fill="rgb(211,52,33)" fg:x="36969823011" fg:w="25473498"/><text x="24.2561%" y="111.50"></text></g><g><title>mem_cgroup_charge_statistics (29,904,617 samples, 0.02%)</title><rect x="24.0061%" y="117" width="0.0194%" height="15" fill="rgb(234,58,33)" fg:x="36969823011" fg:w="29904617"/><text x="24.2561%" y="127.50"></text></g><g><title>mem_cgroup_commit_charge (42,545,592 samples, 0.03%)</title><rect x="24.0035%" y="133" width="0.0276%" height="15" fill="rgb(220,115,36)" fg:x="36965785966" fg:w="42545592"/><text x="24.2535%" y="143.50"></text></g><g><title>__mem_cgroup_charge (92,333,942 samples, 0.06%)</title><rect x="23.9819%" y="149" width="0.0600%" height="15" fill="rgb(243,153,54)" fg:x="36932572769" fg:w="92333942"/><text x="24.2319%" y="159.50"></text></g><g><title>__pte_offset_map_lock (18,280,467 samples, 0.01%)</title><rect x="24.0419%" y="149" width="0.0119%" height="15" fill="rgb(251,47,18)" fg:x="37024906711" fg:w="18280467"/><text x="24.2919%" y="159.50"></text></g><g><title>folio_add_lru (70,459,401 samples, 0.05%)</title><rect x="24.0633%" y="149" width="0.0458%" height="15" fill="rgb(242,102,42)" fg:x="37057965827" fg:w="70459401"/><text x="24.3133%" y="159.50"></text></g><g><title>folio_batch_move_lru (63,248,790 samples, 0.04%)</title><rect x="24.0680%" y="133" width="0.0411%" height="15" fill="rgb(234,31,38)" fg:x="37065176438" fg:w="63248790"/><text x="24.3180%" y="143.50"></text></g><g><title>lru_add_fn (51,414,185 samples, 0.03%)</title><rect x="24.0757%" y="117" width="0.0334%" height="15" fill="rgb(221,117,51)" fg:x="37077011043" fg:w="51414185"/><text x="24.3257%" y="127.50"></text></g><g><title>lru_gen_add_folio (51,414,185 samples, 0.03%)</title><rect x="24.0757%" y="101" width="0.0334%" height="15" fill="rgb(212,20,18)" fg:x="37077011043" fg:w="51414185"/><text x="24.3257%" y="111.50"></text></g><g><title>percpu_counter_add_batch (26,358,330 samples, 0.02%)</title><rect x="24.1091%" y="149" width="0.0171%" height="15" fill="rgb(245,133,36)" fg:x="37128425228" fg:w="26358330"/><text x="24.3591%" y="159.50"></text></g><g><title>__list_del_entry_valid_or_report (15,598,717 samples, 0.01%)</title><rect x="24.1715%" y="69" width="0.0101%" height="15" fill="rgb(212,6,19)" fg:x="37224520197" fg:w="15598717"/><text x="24.4215%" y="79.50"></text></g><g><title>__rmqueue_pcplist (49,885,565 samples, 0.03%)</title><rect x="24.1639%" y="85" width="0.0324%" height="15" fill="rgb(218,1,36)" fg:x="37212913352" fg:w="49885565"/><text x="24.4139%" y="95.50"></text></g><g><title>memchr_inv (128,240,801 samples, 0.08%)</title><rect x="24.2072%" y="69" width="0.0833%" height="15" fill="rgb(246,84,54)" fg:x="37279588995" fg:w="128240801"/><text x="24.4572%" y="79.50"></text></g><g><title>post_alloc_hook (146,495,510 samples, 0.10%)</title><rect x="24.2016%" y="85" width="0.0951%" height="15" fill="rgb(242,110,6)" fg:x="37270951753" fg:w="146495510"/><text x="24.4516%" y="95.50"></text></g><g><title>__alloc_pages_noprof (258,731,132 samples, 0.17%)</title><rect x="24.1401%" y="117" width="0.1680%" height="15" fill="rgb(214,47,5)" fg:x="37176232854" fg:w="258731132"/><text x="24.3901%" y="127.50"></text></g><g><title>get_page_from_freelist (233,213,013 samples, 0.15%)</title><rect x="24.1567%" y="101" width="0.1514%" height="15" fill="rgb(218,159,25)" fg:x="37201750973" fg:w="233213013"/><text x="24.4067%" y="111.50"></text></g><g><title>alloc_pages_mpol_noprof (262,638,534 samples, 0.17%)</title><rect x="24.1401%" y="133" width="0.1705%" height="15" fill="rgb(215,211,28)" fg:x="37176232854" fg:w="262638534"/><text x="24.3901%" y="143.50"></text></g><g><title>__handle_mm_fault (655,338,271 samples, 0.43%)</title><rect x="23.8874%" y="165" width="0.4255%" height="15" fill="rgb(238,59,32)" fg:x="36787049179" fg:w="655338271"/><text x="24.1374%" y="175.50"></text></g><g><title>vma_alloc_folio_noprof (266,154,596 samples, 0.17%)</title><rect x="24.1401%" y="149" width="0.1728%" height="15" fill="rgb(226,82,3)" fg:x="37176232854" fg:w="266154596"/><text x="24.3901%" y="159.50"></text></g><g><title>count_memcg_events.constprop.0 (20,923,779 samples, 0.01%)</title><rect x="24.3129%" y="165" width="0.0136%" height="15" fill="rgb(240,164,32)" fg:x="37442387450" fg:w="20923779"/><text x="24.5629%" y="175.50"></text></g><g><title>__count_memcg_events (17,514,730 samples, 0.01%)</title><rect x="24.3152%" y="149" width="0.0114%" height="15" fill="rgb(232,46,7)" fg:x="37445796499" fg:w="17514730"/><text x="24.5652%" y="159.50"></text></g><g><title>handle_mm_fault (697,623,810 samples, 0.45%)</title><rect x="23.8760%" y="181" width="0.4530%" height="15" fill="rgb(229,129,53)" fg:x="36769484162" fg:w="697623810"/><text x="24.1260%" y="191.50"></text></g><g><title>exc_page_fault (780,423,643 samples, 0.51%)</title><rect x="23.8367%" y="213" width="0.5068%" height="15" fill="rgb(234,188,29)" fg:x="36708955589" fg:w="780423643"/><text x="24.0867%" y="223.50"></text></g><g><title>do_user_addr_fault (753,645,219 samples, 0.49%)</title><rect x="23.8541%" y="197" width="0.4894%" height="15" fill="rgb(246,141,4)" fg:x="36735734013" fg:w="753645219"/><text x="24.1041%" y="207.50"></text></g><g><title>lock_vma_under_rcu (22,271,260 samples, 0.01%)</title><rect x="24.3290%" y="181" width="0.0145%" height="15" fill="rgb(229,23,39)" fg:x="37467107972" fg:w="22271260"/><text x="24.5790%" y="191.50"></text></g><g><title>asm_exc_page_fault (787,091,365 samples, 0.51%)</title><rect x="23.8346%" y="229" width="0.5111%" height="15" fill="rgb(206,12,3)" fg:x="36705773475" fg:w="787091365"/><text x="24.0846%" y="239.50"></text></g><g><title>[libc.so.6] (3,022,857,878 samples, 1.96%)</title><rect x="22.3889%" y="245" width="1.9629%" height="15" fill="rgb(252,226,20)" fg:x="34479245535" fg:w="3022857878"/><text x="22.6389%" y="255.50">[..</text></g><g><title>__irqentry_text_end (29,189,148 samples, 0.02%)</title><rect x="24.3517%" y="245" width="0.0190%" height="15" fill="rgb(216,123,35)" fg:x="37502103413" fg:w="29189148"/><text x="24.6017%" y="255.50"></text></g><g><title>stackleak_erase (18,063,537 samples, 0.01%)</title><rect x="24.3590%" y="229" width="0.0117%" height="15" fill="rgb(212,68,40)" fg:x="37513229024" fg:w="18063537"/><text x="24.6090%" y="239.50"></text></g><g><title>__folio_throttle_swaprate (26,110,989 samples, 0.02%)</title><rect x="24.3876%" y="165" width="0.0170%" height="15" fill="rgb(254,125,32)" fg:x="37557334334" fg:w="26110989"/><text x="24.6376%" y="175.50"></text></g><g><title>blk_cgroup_congested (26,110,989 samples, 0.02%)</title><rect x="24.3876%" y="149" width="0.0170%" height="15" fill="rgb(253,97,22)" fg:x="37557334334" fg:w="26110989"/><text x="24.6376%" y="159.50"></text></g><g><title>mem_cgroup_charge_statistics (17,958,409 samples, 0.01%)</title><rect x="24.4237%" y="133" width="0.0117%" height="15" fill="rgb(241,101,14)" fg:x="37613011195" fg:w="17958409"/><text x="24.6737%" y="143.50"></text></g><g><title>__count_memcg_events (17,958,409 samples, 0.01%)</title><rect x="24.4237%" y="117" width="0.0117%" height="15" fill="rgb(238,103,29)" fg:x="37613011195" fg:w="17958409"/><text x="24.6737%" y="127.50"></text></g><g><title>mem_cgroup_commit_charge (21,341,105 samples, 0.01%)</title><rect x="24.4237%" y="149" width="0.0139%" height="15" fill="rgb(233,195,47)" fg:x="37613011195" fg:w="21341105"/><text x="24.6737%" y="159.50"></text></g><g><title>__mem_cgroup_charge (47,859,966 samples, 0.03%)</title><rect x="24.4144%" y="165" width="0.0311%" height="15" fill="rgb(246,218,30)" fg:x="37598616107" fg:w="47859966"/><text x="24.6644%" y="175.50"></text></g><g><title>__pte_offset_map_lock (21,903,770 samples, 0.01%)</title><rect x="24.4455%" y="165" width="0.0142%" height="15" fill="rgb(219,145,47)" fg:x="37646476073" fg:w="21903770"/><text x="24.6955%" y="175.50"></text></g><g><title>lru_add_fn (32,812,477 samples, 0.02%)</title><rect x="24.4780%" y="133" width="0.0213%" height="15" fill="rgb(243,12,26)" fg:x="37696637016" fg:w="32812477"/><text x="24.7280%" y="143.50"></text></g><g><title>lru_gen_add_folio (27,980,814 samples, 0.02%)</title><rect x="24.4812%" y="117" width="0.0182%" height="15" fill="rgb(214,87,16)" fg:x="37701468679" fg:w="27980814"/><text x="24.7312%" y="127.50"></text></g><g><title>folio_add_lru (61,367,347 samples, 0.04%)</title><rect x="24.4620%" y="165" width="0.0398%" height="15" fill="rgb(208,99,42)" fg:x="37671924105" fg:w="61367347"/><text x="24.7120%" y="175.50"></text></g><g><title>folio_batch_move_lru (54,659,418 samples, 0.04%)</title><rect x="24.4664%" y="149" width="0.0355%" height="15" fill="rgb(253,99,2)" fg:x="37678632034" fg:w="54659418"/><text x="24.7164%" y="159.50"></text></g><g><title>__next_zones_zonelist (15,619,175 samples, 0.01%)</title><rect x="24.5148%" y="117" width="0.0101%" height="15" fill="rgb(220,168,23)" fg:x="37753200312" fg:w="15619175"/><text x="24.7648%" y="127.50"></text></g><g><title>__list_del_entry_valid_or_report (23,946,943 samples, 0.02%)</title><rect x="24.5441%" y="85" width="0.0155%" height="15" fill="rgb(242,38,24)" fg:x="37798338819" fg:w="23946943"/><text x="24.7941%" y="95.50"></text></g><g><title>__rmqueue_pcplist (38,846,436 samples, 0.03%)</title><rect x="24.5366%" y="101" width="0.0252%" height="15" fill="rgb(225,182,9)" fg:x="37786857030" fg:w="38846436"/><text x="24.7866%" y="111.50"></text></g><g><title>memchr_inv (60,982,516 samples, 0.04%)</title><rect x="24.5643%" y="85" width="0.0396%" height="15" fill="rgb(243,178,37)" fg:x="37829445818" fg:w="60982516"/><text x="24.8143%" y="95.50"></text></g><g><title>__handle_mm_fault (340,706,870 samples, 0.22%)</title><rect x="24.3876%" y="181" width="0.2212%" height="15" fill="rgb(232,139,19)" fg:x="37557334334" fg:w="340706870"/><text x="24.6376%" y="191.50"></text></g><g><title>vma_alloc_folio_noprof (160,702,118 samples, 0.10%)</title><rect x="24.5045%" y="165" width="0.1044%" height="15" fill="rgb(225,201,24)" fg:x="37737339086" fg:w="160702118"/><text x="24.7545%" y="175.50"></text></g><g><title>alloc_pages_mpol_noprof (156,408,563 samples, 0.10%)</title><rect x="24.5073%" y="149" width="0.1016%" height="15" fill="rgb(221,47,46)" fg:x="37741632641" fg:w="156408563"/><text x="24.7573%" y="159.50"></text></g><g><title>__alloc_pages_noprof (148,718,161 samples, 0.10%)</title><rect x="24.5123%" y="133" width="0.0966%" height="15" fill="rgb(249,23,13)" fg:x="37749323043" fg:w="148718161"/><text x="24.7623%" y="143.50"></text></g><g><title>get_page_from_freelist (129,221,717 samples, 0.08%)</title><rect x="24.5249%" y="117" width="0.0839%" height="15" fill="rgb(219,9,5)" fg:x="37768819487" fg:w="129221717"/><text x="24.7749%" y="127.50"></text></g><g><title>post_alloc_hook (68,595,386 samples, 0.04%)</title><rect x="24.5643%" y="101" width="0.0445%" height="15" fill="rgb(254,171,16)" fg:x="37829445818" fg:w="68595386"/><text x="24.8143%" y="111.50"></text></g><g><title>handle_mm_fault (381,020,460 samples, 0.25%)</title><rect x="24.3783%" y="197" width="0.2474%" height="15" fill="rgb(230,171,20)" fg:x="37543021900" fg:w="381020460"/><text x="24.6283%" y="207.50"></text></g><g><title>count_memcg_events.constprop.0 (26,001,156 samples, 0.02%)</title><rect x="24.6088%" y="181" width="0.0169%" height="15" fill="rgb(210,71,41)" fg:x="37898041204" fg:w="26001156"/><text x="24.8588%" y="191.50"></text></g><g><title>__count_memcg_events (22,135,408 samples, 0.01%)</title><rect x="24.6113%" y="165" width="0.0144%" height="15" fill="rgb(206,173,20)" fg:x="37901906952" fg:w="22135408"/><text x="24.8613%" y="175.50"></text></g><g><title>exc_page_fault (387,530,492 samples, 0.25%)</title><rect x="24.3783%" y="229" width="0.2516%" height="15" fill="rgb(233,88,34)" fg:x="37543021900" fg:w="387530492"/><text x="24.6283%" y="239.50"></text></g><g><title>do_user_addr_fault (387,530,492 samples, 0.25%)</title><rect x="24.3783%" y="213" width="0.2516%" height="15" fill="rgb(223,209,46)" fg:x="37543021900" fg:w="387530492"/><text x="24.6283%" y="223.50"></text></g><g><title>[libc.so.6] (3,992,743,099 samples, 2.59%)</title><rect x="22.0423%" y="261" width="2.5927%" height="15" fill="rgb(250,43,18)" fg:x="33945613145" fg:w="3992743099"/><text x="22.2923%" y="271.50">[l..</text></g><g><title>asm_exc_page_fault (395,334,344 samples, 0.26%)</title><rect x="24.3783%" y="245" width="0.2567%" height="15" fill="rgb(208,13,10)" fg:x="37543021900" fg:w="395334344"/><text x="24.6283%" y="255.50"></text></g><g><title>__vdso_clock_gettime (56,273,768 samples, 0.04%)</title><rect x="24.6350%" y="261" width="0.0365%" height="15" fill="rgb(212,200,36)" fg:x="37938362967" fg:w="56273768"/><text x="24.8850%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,479,302,929 samples, 2.91%)</title><rect x="21.7745%" y="373" width="2.9086%" height="15" fill="rgb(225,90,30)" fg:x="33533105754" fg:w="4479302929"/><text x="22.0245%" y="383.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,479,302,929 samples, 2.91%)</title><rect x="21.7745%" y="357" width="2.9086%" height="15" fill="rgb(236,182,39)" fg:x="33533105754" fg:w="4479302929"/><text x="22.0245%" y="367.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4,479,302,929 samples, 2.91%)</title><rect x="21.7745%" y="341" width="2.9086%" height="15" fill="rgb(212,144,35)" fg:x="33533105754" fg:w="4479302929"/><text x="22.0245%" y="351.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,459,741,619 samples, 2.90%)</title><rect x="21.7872%" y="325" width="2.8959%" height="15" fill="rgb(228,63,44)" fg:x="33552667064" fg:w="4459741619"/><text x="22.0372%" y="335.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (4,459,741,619 samples, 2.90%)</title><rect x="21.7872%" y="309" width="2.8959%" height="15" fill="rgb(228,109,6)" fg:x="33552667064" fg:w="4459741619"/><text x="22.0372%" y="319.50">al..</text></g><g><title>alloc::alloc::alloc (4,459,741,619 samples, 2.90%)</title><rect x="21.7872%" y="293" width="2.8959%" height="15" fill="rgb(238,117,24)" fg:x="33552667064" fg:w="4459741619"/><text x="22.0372%" y="303.50">al..</text></g><g><title>malloc (4,414,323,105 samples, 2.87%)</title><rect x="21.8167%" y="277" width="2.8664%" height="15" fill="rgb(242,26,26)" fg:x="33598085578" fg:w="4414323105"/><text x="22.0667%" y="287.50">ma..</text></g><g><title>[libc.so.6] (114,458,846 samples, 0.07%)</title><rect x="24.6831%" y="341" width="0.0743%" height="15" fill="rgb(221,92,48)" fg:x="38012408683" fg:w="114458846"/><text x="24.9331%" y="351.50"></text></g><g><title>syscall (15,509,166 samples, 0.01%)</title><rect x="24.7574%" y="341" width="0.0101%" height="15" fill="rgb(209,209,32)" fg:x="38126867529" fg:w="15509166"/><text x="25.0074%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4,634,085,599 samples, 3.01%)</title><rect x="21.7610%" y="453" width="3.0091%" height="15" fill="rgb(221,70,22)" fg:x="33512376841" fg:w="4634085599"/><text x="22.0110%" y="463.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,613,356,686 samples, 3.00%)</title><rect x="21.7745%" y="437" width="2.9957%" height="15" fill="rgb(248,145,5)" fg:x="33533105754" fg:w="4613356686"/><text x="22.0245%" y="447.50">&lt;al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4,613,356,686 samples, 3.00%)</title><rect x="21.7745%" y="421" width="2.9957%" height="15" fill="rgb(226,116,26)" fg:x="33533105754" fg:w="4613356686"/><text x="22.0245%" y="431.50">all..</text></g><g><title>alloc::slice::hack::to_vec (4,613,356,686 samples, 3.00%)</title><rect x="21.7745%" y="405" width="2.9957%" height="15" fill="rgb(244,5,17)" fg:x="33533105754" fg:w="4613356686"/><text x="22.0245%" y="415.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4,613,356,686 samples, 3.00%)</title><rect x="21.7745%" y="389" width="2.9957%" height="15" fill="rgb(252,159,33)" fg:x="33533105754" fg:w="4613356686"/><text x="22.0245%" y="399.50">&lt;T ..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (134,053,757 samples, 0.09%)</title><rect x="24.6831%" y="373" width="0.0870%" height="15" fill="rgb(206,71,0)" fg:x="38012408683" fg:w="134053757"/><text x="24.9331%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (134,053,757 samples, 0.09%)</title><rect x="24.6831%" y="357" width="0.0870%" height="15" fill="rgb(233,118,54)" fg:x="38012408683" fg:w="134053757"/><text x="24.9331%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (15,418,706 samples, 0.01%)</title><rect x="24.7727%" y="389" width="0.0100%" height="15" fill="rgb(234,83,48)" fg:x="38150417009" fg:w="15418706"/><text x="25.0227%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (15,418,706 samples, 0.01%)</title><rect x="24.7727%" y="373" width="0.0100%" height="15" fill="rgb(228,3,54)" fg:x="38150417009" fg:w="15418706"/><text x="25.0227%" y="383.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (15,418,706 samples, 0.01%)</title><rect x="24.7727%" y="357" width="0.0100%" height="15" fill="rgb(226,155,13)" fg:x="38150417009" fg:w="15418706"/><text x="25.0227%" y="367.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (15,418,706 samples, 0.01%)</title><rect x="24.7727%" y="341" width="0.0100%" height="15" fill="rgb(241,28,37)" fg:x="38150417009" fg:w="15418706"/><text x="25.0227%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (15,418,706 samples, 0.01%)</title><rect x="24.7727%" y="325" width="0.0100%" height="15" fill="rgb(233,93,10)" fg:x="38150417009" fg:w="15418706"/><text x="25.0227%" y="335.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (19,294,758 samples, 0.01%)</title><rect x="24.7727%" y="437" width="0.0125%" height="15" fill="rgb(225,113,19)" fg:x="38150417009" fg:w="19294758"/><text x="25.0227%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (19,294,758 samples, 0.01%)</title><rect x="24.7727%" y="421" width="0.0125%" height="15" fill="rgb(241,2,18)" fg:x="38150417009" fg:w="19294758"/><text x="25.0227%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (19,294,758 samples, 0.01%)</title><rect x="24.7727%" y="405" width="0.0125%" height="15" fill="rgb(228,207,21)" fg:x="38150417009" fg:w="19294758"/><text x="25.0227%" y="415.50"></text></g><g><title>rpq::RPQ&lt;T&gt;::enqueue (116,779,578 samples, 0.08%)</title><rect x="24.7701%" y="453" width="0.0758%" height="15" fill="rgb(213,211,35)" fg:x="38146462440" fg:w="116779578"/><text x="25.0201%" y="463.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (93,530,251 samples, 0.06%)</title><rect x="24.7852%" y="437" width="0.0607%" height="15" fill="rgb(209,83,10)" fg:x="38169711767" fg:w="93530251"/><text x="25.0352%" y="447.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read (85,336,473 samples, 0.06%)</title><rect x="24.7906%" y="421" width="0.0554%" height="15" fill="rgb(209,164,1)" fg:x="38177905545" fg:w="85336473"/><text x="25.0406%" y="431.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (5,153,183,785 samples, 3.35%)</title><rect x="21.5154%" y="469" width="3.3462%" height="15" fill="rgb(213,184,43)" fg:x="33134126240" fg:w="5153183785"/><text x="21.7654%" y="479.50">&lt;co..</text></g><g><title>&lt;std::time::Instant as core::clone::Clone&gt;::clone (16,685,746 samples, 0.01%)</title><rect x="24.8616%" y="469" width="0.0108%" height="15" fill="rgb(231,61,34)" fg:x="38287310025" fg:w="16685746"/><text x="25.1116%" y="479.50"></text></g><g><title>&lt;rpq::pq::Item&lt;T&gt; as core::clone::Clone&gt;::clone (5,354,223,193 samples, 3.48%)</title><rect x="21.4054%" y="485" width="3.4767%" height="15" fill="rgb(235,75,3)" fg:x="32964661336" fg:w="5354223193"/><text x="21.6554%" y="495.50">&lt;rp..</text></g><g><title>[libc.so.6] (26,675,626 samples, 0.02%)</title><rect x="24.9289%" y="341" width="0.0173%" height="15" fill="rgb(220,106,47)" fg:x="38391005083" fg:w="26675626"/><text x="25.1789%" y="351.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (24,557,642 samples, 0.02%)</title><rect x="24.9481%" y="309" width="0.0159%" height="15" fill="rgb(210,196,33)" fg:x="38420514263" fg:w="24557642"/><text x="25.1981%" y="319.50"></text></g><g><title>core::ops::function::FnOnce::call_once (24,557,642 samples, 0.02%)</title><rect x="24.9481%" y="293" width="0.0159%" height="15" fill="rgb(229,154,42)" fg:x="38420514263" fg:w="24557642"/><text x="25.1981%" y="303.50"></text></g><g><title>std::sys::pal::unix::os::errno (24,557,642 samples, 0.02%)</title><rect x="24.9481%" y="277" width="0.0159%" height="15" fill="rgb(228,114,26)" fg:x="38420514263" fg:w="24557642"/><text x="25.1981%" y="287.50"></text></g><g><title>syscall (24,557,642 samples, 0.02%)</title><rect x="24.9481%" y="261" width="0.0159%" height="15" fill="rgb(208,144,1)" fg:x="38420514263" fg:w="24557642"/><text x="25.1981%" y="271.50"></text></g><g><title>entry_SYSCALL_64 (24,557,642 samples, 0.02%)</title><rect x="24.9481%" y="245" width="0.0159%" height="15" fill="rgb(239,112,37)" fg:x="38420514263" fg:w="24557642"/><text x="25.1981%" y="255.50"></text></g><g><title>cfree (107,170,290 samples, 0.07%)</title><rect x="24.9137%" y="357" width="0.0696%" height="15" fill="rgb(210,96,50)" fg:x="38367565480" fg:w="107170290"/><text x="25.1637%" y="367.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read_contended (54,221,507 samples, 0.04%)</title><rect x="24.9481%" y="341" width="0.0352%" height="15" fill="rgb(222,178,2)" fg:x="38420514263" fg:w="54221507"/><text x="25.1981%" y="351.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (54,221,507 samples, 0.04%)</title><rect x="24.9481%" y="325" width="0.0352%" height="15" fill="rgb(226,74,18)" fg:x="38420514263" fg:w="54221507"/><text x="25.1981%" y="335.50"></text></g><g><title>syscall (29,663,865 samples, 0.02%)</title><rect x="24.9640%" y="309" width="0.0193%" height="15" fill="rgb(225,67,54)" fg:x="38445071905" fg:w="29663865"/><text x="25.2140%" y="319.50"></text></g><g><title>entry_SYSCALL_64 (29,663,865 samples, 0.02%)</title><rect x="24.9640%" y="293" width="0.0193%" height="15" fill="rgb(251,92,32)" fg:x="38445071905" fg:w="29663865"/><text x="25.2140%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpq::pq::Item&lt;i32&gt;&gt; (194,734,233 samples, 0.13%)</title><rect x="24.9059%" y="485" width="0.1264%" height="15" fill="rgb(228,149,22)" fg:x="38355568257" fg:w="194734233"/><text x="25.1559%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (194,734,233 samples, 0.13%)</title><rect x="24.9059%" y="469" width="0.1264%" height="15" fill="rgb(243,54,13)" fg:x="38355568257" fg:w="194734233"/><text x="25.1559%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (190,006,939 samples, 0.12%)</title><rect x="24.9090%" y="453" width="0.1234%" height="15" fill="rgb(243,180,28)" fg:x="38360295551" fg:w="190006939"/><text x="25.1590%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (190,006,939 samples, 0.12%)</title><rect x="24.9090%" y="437" width="0.1234%" height="15" fill="rgb(208,167,24)" fg:x="38360295551" fg:w="190006939"/><text x="25.1590%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (190,006,939 samples, 0.12%)</title><rect x="24.9090%" y="421" width="0.1234%" height="15" fill="rgb(245,73,45)" fg:x="38360295551" fg:w="190006939"/><text x="25.1590%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (190,006,939 samples, 0.12%)</title><rect x="24.9090%" y="405" width="0.1234%" height="15" fill="rgb(237,203,48)" fg:x="38360295551" fg:w="190006939"/><text x="25.1590%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (190,006,939 samples, 0.12%)</title><rect x="24.9090%" y="389" width="0.1234%" height="15" fill="rgb(211,197,16)" fg:x="38360295551" fg:w="190006939"/><text x="25.1590%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (190,006,939 samples, 0.12%)</title><rect x="24.9090%" y="373" width="0.1234%" height="15" fill="rgb(243,99,51)" fg:x="38360295551" fg:w="190006939"/><text x="25.1590%" y="383.50"></text></g><g><title>syscall (58,994,846 samples, 0.04%)</title><rect x="24.9941%" y="357" width="0.0383%" height="15" fill="rgb(215,123,29)" fg:x="38491307644" fg:w="58994846"/><text x="25.2441%" y="367.50"></text></g><g><title>entry_SYSCALL_64 (58,994,846 samples, 0.04%)</title><rect x="24.9941%" y="341" width="0.0383%" height="15" fill="rgb(239,186,37)" fg:x="38491307644" fg:w="58994846"/><text x="25.2441%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,rpq::pq::PriorityQueue&lt;i32&gt;&gt;&gt;&gt; (278,172,384 samples, 0.18%)</title><rect x="25.0324%" y="485" width="0.1806%" height="15" fill="rgb(252,136,39)" fg:x="38550302490" fg:w="278172384"/><text x="25.2824%" y="495.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (278,172,384 samples, 0.18%)</title><rect x="25.0324%" y="469" width="0.1806%" height="15" fill="rgb(223,213,32)" fg:x="38550302490" fg:w="278172384"/><text x="25.2824%" y="479.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read_unlock (278,172,384 samples, 0.18%)</title><rect x="25.0324%" y="453" width="0.1806%" height="15" fill="rgb(233,115,5)" fg:x="38550302490" fg:w="278172384"/><text x="25.2824%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_add (317,018,568 samples, 0.21%)</title><rect x="25.2130%" y="485" width="0.2059%" height="15" fill="rgb(207,226,44)" fg:x="38828474874" fg:w="317018568"/><text x="25.4630%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (317,018,568 samples, 0.21%)</title><rect x="25.2130%" y="469" width="0.2059%" height="15" fill="rgb(208,126,0)" fg:x="38828474874" fg:w="317018568"/><text x="25.4630%" y="479.50"></text></g><g><title>getrandom::imp::getrandom_inner (316,805,399 samples, 0.21%)</title><rect x="25.4188%" y="485" width="0.2057%" height="15" fill="rgb(244,66,21)" fg:x="39145493442" fg:w="316805399"/><text x="25.6688%" y="495.50"></text></g><g><title>getrandom::util_libc::sys_fill_exact (307,395,339 samples, 0.20%)</title><rect x="25.4250%" y="469" width="0.1996%" height="15" fill="rgb(222,97,12)" fg:x="39154903502" fg:w="307395339"/><text x="25.6750%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_mut (45,594,279 samples, 0.03%)</title><rect x="25.5950%" y="453" width="0.0296%" height="15" fill="rgb(219,213,19)" fg:x="39416704562" fg:w="45594279"/><text x="25.8450%" y="463.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_mut (45,594,279 samples, 0.03%)</title><rect x="25.5950%" y="437" width="0.0296%" height="15" fill="rgb(252,169,30)" fg:x="39416704562" fg:w="45594279"/><text x="25.8450%" y="447.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_mut (45,594,279 samples, 0.03%)</title><rect x="25.5950%" y="421" width="0.0296%" height="15" fill="rgb(206,32,51)" fg:x="39416704562" fg:w="45594279"/><text x="25.8450%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (23,693,959 samples, 0.02%)</title><rect x="25.7164%" y="373" width="0.0154%" height="15" fill="rgb(250,172,42)" fg:x="39603705051" fg:w="23693959"/><text x="25.9664%" y="383.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (101,085,763 samples, 0.07%)</title><rect x="25.6661%" y="421" width="0.0656%" height="15" fill="rgb(209,34,43)" fg:x="39526313584" fg:w="101085763"/><text x="25.9161%" y="431.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (101,085,763 samples, 0.07%)</title><rect x="25.6661%" y="405" width="0.0656%" height="15" fill="rgb(223,11,35)" fg:x="39526313584" fg:w="101085763"/><text x="25.9161%" y="415.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (101,085,763 samples, 0.07%)</title><rect x="25.6661%" y="389" width="0.0656%" height="15" fill="rgb(251,219,26)" fg:x="39526313584" fg:w="101085763"/><text x="25.9161%" y="399.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::contains (392,076,101 samples, 0.25%)</title><rect x="25.6567%" y="469" width="0.2546%" height="15" fill="rgb(231,119,3)" fg:x="39511727878" fg:w="392076101"/><text x="25.9067%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (392,076,101 samples, 0.25%)</title><rect x="25.6567%" y="453" width="0.2546%" height="15" fill="rgb(216,97,11)" fg:x="39511727878" fg:w="392076101"/><text x="25.9067%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (392,076,101 samples, 0.25%)</title><rect x="25.6567%" y="437" width="0.2546%" height="15" fill="rgb(223,59,9)" fg:x="39511727878" fg:w="392076101"/><text x="25.9067%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (276,404,632 samples, 0.18%)</title><rect x="25.7318%" y="421" width="0.1795%" height="15" fill="rgb(233,93,31)" fg:x="39627399347" fg:w="276404632"/><text x="25.9818%" y="431.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::insert (17,087,511 samples, 0.01%)</title><rect x="25.9113%" y="469" width="0.0111%" height="15" fill="rgb(239,81,33)" fg:x="39903803979" fg:w="17087511"/><text x="26.1613%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (17,087,511 samples, 0.01%)</title><rect x="25.9113%" y="453" width="0.0111%" height="15" fill="rgb(213,120,34)" fg:x="39903803979" fg:w="17087511"/><text x="26.1613%" y="463.50"></text></g><g><title>entry_SYSCALL_64 (62,695,586 samples, 0.04%)</title><rect x="26.3071%" y="357" width="0.0407%" height="15" fill="rgb(243,49,53)" fg:x="40513473172" fg:w="62695586"/><text x="26.5571%" y="367.50"></text></g><g><title>do_syscall_64 (62,695,586 samples, 0.04%)</title><rect x="26.3071%" y="341" width="0.0407%" height="15" fill="rgb(247,216,33)" fg:x="40513473172" fg:w="62695586"/><text x="26.5571%" y="351.50"></text></g><g><title>__x64_sys_futex (62,695,586 samples, 0.04%)</title><rect x="26.3071%" y="325" width="0.0407%" height="15" fill="rgb(226,26,14)" fg:x="40513473172" fg:w="62695586"/><text x="26.5571%" y="335.50"></text></g><g><title>do_futex (62,695,586 samples, 0.04%)</title><rect x="26.3071%" y="309" width="0.0407%" height="15" fill="rgb(215,49,53)" fg:x="40513473172" fg:w="62695586"/><text x="26.5571%" y="319.50"></text></g><g><title>futex_wake (62,695,586 samples, 0.04%)</title><rect x="26.3071%" y="293" width="0.0407%" height="15" fill="rgb(245,162,40)" fg:x="40513473172" fg:w="62695586"/><text x="26.5571%" y="303.50"></text></g><g><title>wake_up_q (62,695,586 samples, 0.04%)</title><rect x="26.3071%" y="277" width="0.0407%" height="15" fill="rgb(229,68,17)" fg:x="40513473172" fg:w="62695586"/><text x="26.5571%" y="287.50"></text></g><g><title>try_to_wake_up (62,695,586 samples, 0.04%)</title><rect x="26.3071%" y="261" width="0.0407%" height="15" fill="rgb(213,182,10)" fg:x="40513473172" fg:w="62695586"/><text x="26.5571%" y="271.50"></text></g><g><title>ttwu_queue_wakelist (21,836,265 samples, 0.01%)</title><rect x="26.3337%" y="245" width="0.0142%" height="15" fill="rgb(245,125,30)" fg:x="40554332493" fg:w="21836265"/><text x="26.5837%" y="255.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::wake_writer_or_readers (90,706,863 samples, 0.06%)</title><rect x="26.2937%" y="421" width="0.0589%" height="15" fill="rgb(232,202,2)" fg:x="40492786067" fg:w="90706863"/><text x="26.5437%" y="431.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::wake_writer (70,027,254 samples, 0.05%)</title><rect x="26.3071%" y="405" width="0.0455%" height="15" fill="rgb(237,140,51)" fg:x="40513465676" fg:w="70027254"/><text x="26.5571%" y="415.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wake (70,027,254 samples, 0.05%)</title><rect x="26.3071%" y="389" width="0.0455%" height="15" fill="rgb(236,157,25)" fg:x="40513465676" fg:w="70027254"/><text x="26.5571%" y="399.50"></text></g><g><title>syscall (70,027,254 samples, 0.05%)</title><rect x="26.3071%" y="373" width="0.0455%" height="15" fill="rgb(219,209,0)" fg:x="40513465676" fg:w="70027254"/><text x="26.5571%" y="383.50"></text></g><g><title>_raw_spin_lock (37,832,519 samples, 0.02%)</title><rect x="26.3572%" y="325" width="0.0246%" height="15" fill="rgb(240,116,54)" fg:x="40590611979" fg:w="37832519"/><text x="26.6072%" y="335.50"></text></g><g><title>native_queued_spin_lock_slowpath (33,129,625 samples, 0.02%)</title><rect x="26.3603%" y="309" width="0.0215%" height="15" fill="rgb(216,10,36)" fg:x="40595314873" fg:w="33129625"/><text x="26.6103%" y="319.50"></text></g><g><title>__x64_sys_futex (109,310,627 samples, 0.07%)</title><rect x="26.3526%" y="373" width="0.0710%" height="15" fill="rgb(222,72,44)" fg:x="40583492930" fg:w="109310627"/><text x="26.6026%" y="383.50"></text></g><g><title>do_futex (105,849,702 samples, 0.07%)</title><rect x="26.3549%" y="357" width="0.0687%" height="15" fill="rgb(232,159,9)" fg:x="40586953855" fg:w="105849702"/><text x="26.6049%" y="367.50"></text></g><g><title>futex_wake (105,849,702 samples, 0.07%)</title><rect x="26.3549%" y="341" width="0.0687%" height="15" fill="rgb(210,39,32)" fg:x="40586953855" fg:w="105849702"/><text x="26.6049%" y="351.50"></text></g><g><title>wake_up_q (64,359,059 samples, 0.04%)</title><rect x="26.3818%" y="325" width="0.0418%" height="15" fill="rgb(216,194,45)" fg:x="40628444498" fg:w="64359059"/><text x="26.6318%" y="335.50"></text></g><g><title>try_to_wake_up (64,359,059 samples, 0.04%)</title><rect x="26.3818%" y="309" width="0.0418%" height="15" fill="rgb(218,18,35)" fg:x="40628444498" fg:w="64359059"/><text x="26.6318%" y="319.50"></text></g><g><title>ttwu_queue_wakelist (21,484,742 samples, 0.01%)</title><rect x="26.4096%" y="293" width="0.0140%" height="15" fill="rgb(207,83,51)" fg:x="40671318815" fg:w="21484742"/><text x="26.6596%" y="303.50"></text></g><g><title>entry_SYSCALL_64 (112,776,556 samples, 0.07%)</title><rect x="26.3526%" y="405" width="0.0732%" height="15" fill="rgb(225,63,43)" fg:x="40583492930" fg:w="112776556"/><text x="26.6026%" y="415.50"></text></g><g><title>do_syscall_64 (112,776,556 samples, 0.07%)</title><rect x="26.3526%" y="389" width="0.0732%" height="15" fill="rgb(207,57,36)" fg:x="40583492930" fg:w="112776556"/><text x="26.6026%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::collections::btree::set::BTreeSet&lt;u64&gt;&gt;&gt; (779,764,255 samples, 0.51%)</title><rect x="25.9223%" y="469" width="0.5063%" height="15" fill="rgb(216,99,33)" fg:x="39920891490" fg:w="779764255"/><text x="26.1723%" y="479.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (779,764,255 samples, 0.51%)</title><rect x="25.9223%" y="453" width="0.5063%" height="15" fill="rgb(225,42,16)" fg:x="39920891490" fg:w="779764255"/><text x="26.1723%" y="463.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read_unlock (779,764,255 samples, 0.51%)</title><rect x="25.9223%" y="437" width="0.5063%" height="15" fill="rgb(220,201,45)" fg:x="39920891490" fg:w="779764255"/><text x="26.1723%" y="447.50"></text></g><g><title>syscall (117,162,815 samples, 0.08%)</title><rect x="26.3526%" y="421" width="0.0761%" height="15" fill="rgb(225,33,4)" fg:x="40583492930" fg:w="117162815"/><text x="26.6026%" y="431.50"></text></g><g><title>__x64_sys_futex (44,027,556 samples, 0.03%)</title><rect x="26.4499%" y="325" width="0.0286%" height="15" fill="rgb(224,33,50)" fg:x="40733393141" fg:w="44027556"/><text x="26.6999%" y="335.50"></text></g><g><title>do_futex (44,027,556 samples, 0.03%)</title><rect x="26.4499%" y="309" width="0.0286%" height="15" fill="rgb(246,198,51)" fg:x="40733393141" fg:w="44027556"/><text x="26.6999%" y="319.50"></text></g><g><title>futex_wake (44,027,556 samples, 0.03%)</title><rect x="26.4499%" y="293" width="0.0286%" height="15" fill="rgb(205,22,4)" fg:x="40733393141" fg:w="44027556"/><text x="26.6999%" y="303.50"></text></g><g><title>wake_up_q (36,803,933 samples, 0.02%)</title><rect x="26.4546%" y="277" width="0.0239%" height="15" fill="rgb(206,3,8)" fg:x="40740616764" fg:w="36803933"/><text x="26.7046%" y="287.50"></text></g><g><title>try_to_wake_up (36,803,933 samples, 0.02%)</title><rect x="26.4546%" y="261" width="0.0239%" height="15" fill="rgb(251,23,15)" fg:x="40740616764" fg:w="36803933"/><text x="26.7046%" y="271.50"></text></g><g><title>do_syscall_64 (45,208,559 samples, 0.03%)</title><rect x="26.4499%" y="341" width="0.0294%" height="15" fill="rgb(252,88,28)" fg:x="40733393125" fg:w="45208559"/><text x="26.6999%" y="351.50"></text></g><g><title>entry_SYSCALL_64 (62,064,134 samples, 0.04%)</title><rect x="26.4441%" y="357" width="0.0403%" height="15" fill="rgb(212,127,14)" fg:x="40724434855" fg:w="62064134"/><text x="26.6941%" y="367.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::wake_writer_or_readers (89,771,583 samples, 0.06%)</title><rect x="26.4311%" y="421" width="0.0583%" height="15" fill="rgb(247,145,37)" fg:x="40704382832" fg:w="89771583"/><text x="26.6811%" y="431.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::wake_writer (69,719,560 samples, 0.05%)</title><rect x="26.4441%" y="405" width="0.0453%" height="15" fill="rgb(209,117,53)" fg:x="40724434855" fg:w="69719560"/><text x="26.6941%" y="415.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wake (69,719,560 samples, 0.05%)</title><rect x="26.4441%" y="389" width="0.0453%" height="15" fill="rgb(212,90,42)" fg:x="40724434855" fg:w="69719560"/><text x="26.6941%" y="399.50"></text></g><g><title>syscall (69,719,560 samples, 0.05%)</title><rect x="26.4441%" y="373" width="0.0453%" height="15" fill="rgb(218,164,37)" fg:x="40724434855" fg:w="69719560"/><text x="26.6941%" y="383.50"></text></g><g><title>_raw_spin_lock (140,318,299 samples, 0.09%)</title><rect x="26.5074%" y="325" width="0.0911%" height="15" fill="rgb(246,65,34)" fg:x="40821933543" fg:w="140318299"/><text x="26.7574%" y="335.50"></text></g><g><title>native_queued_spin_lock_slowpath (140,318,299 samples, 0.09%)</title><rect x="26.5074%" y="309" width="0.0911%" height="15" fill="rgb(231,100,33)" fg:x="40821933543" fg:w="140318299"/><text x="26.7574%" y="319.50"></text></g><g><title>futex_wake_mark (31,759,042 samples, 0.02%)</title><rect x="26.5985%" y="325" width="0.0206%" height="15" fill="rgb(228,126,14)" fg:x="40962251842" fg:w="31759042"/><text x="26.8485%" y="335.50"></text></g><g><title>_raw_spin_lock_irqsave (40,532,927 samples, 0.03%)</title><rect x="26.6432%" y="293" width="0.0263%" height="15" fill="rgb(215,173,21)" fg:x="41031021498" fg:w="40532927"/><text x="26.8932%" y="303.50"></text></g><g><title>preempt_count_add (37,431,120 samples, 0.02%)</title><rect x="26.6718%" y="293" width="0.0243%" height="15" fill="rgb(210,6,40)" fg:x="41075027542" fg:w="37431120"/><text x="26.9218%" y="303.50"></text></g><g><title>select_task_rq_fair (78,872,222 samples, 0.05%)</title><rect x="26.7007%" y="293" width="0.0512%" height="15" fill="rgb(212,48,18)" fg:x="41119540118" fg:w="78872222"/><text x="26.9507%" y="303.50"></text></g><g><title>ttwu_do_activate (18,524,415 samples, 0.01%)</title><rect x="26.7545%" y="293" width="0.0120%" height="15" fill="rgb(230,214,11)" fg:x="41202348274" fg:w="18524415"/><text x="27.0045%" y="303.50"></text></g><g><title>enqueue_task (18,524,415 samples, 0.01%)</title><rect x="26.7545%" y="277" width="0.0120%" height="15" fill="rgb(254,105,39)" fg:x="41202348274" fg:w="18524415"/><text x="27.0045%" y="287.50"></text></g><g><title>__smp_call_single_queue (36,222,456 samples, 0.02%)</title><rect x="26.7912%" y="277" width="0.0235%" height="15" fill="rgb(245,158,5)" fg:x="41258872228" fg:w="36222456"/><text x="27.0412%" y="287.50"></text></g><g><title>default_send_IPI_single_phys (56,552,649 samples, 0.04%)</title><rect x="26.8147%" y="277" width="0.0367%" height="15" fill="rgb(249,208,11)" fg:x="41295094684" fg:w="56552649"/><text x="27.0647%" y="287.50"></text></g><g><title>__x64_sys_futex (558,174,449 samples, 0.36%)</title><rect x="26.4916%" y="373" width="0.3624%" height="15" fill="rgb(210,39,28)" fg:x="40797568946" fg:w="558174449"/><text x="26.7416%" y="383.50"></text></g><g><title>do_futex (554,808,127 samples, 0.36%)</title><rect x="26.4938%" y="357" width="0.3603%" height="15" fill="rgb(211,56,53)" fg:x="40800935268" fg:w="554808127"/><text x="26.7438%" y="367.50"></text></g><g><title>futex_wake (551,074,503 samples, 0.36%)</title><rect x="26.4962%" y="341" width="0.3578%" height="15" fill="rgb(226,201,30)" fg:x="40804668892" fg:w="551074503"/><text x="26.7462%" y="351.50"></text></g><g><title>wake_up_q (357,960,449 samples, 0.23%)</title><rect x="26.6216%" y="325" width="0.2324%" height="15" fill="rgb(239,101,34)" fg:x="40997782946" fg:w="357960449"/><text x="26.8716%" y="335.50"></text></g><g><title>try_to_wake_up (353,593,106 samples, 0.23%)</title><rect x="26.6245%" y="309" width="0.2296%" height="15" fill="rgb(226,209,5)" fg:x="41002150289" fg:w="353593106"/><text x="26.8745%" y="319.50"></text></g><g><title>ttwu_queue_wakelist (134,870,706 samples, 0.09%)</title><rect x="26.7665%" y="293" width="0.0876%" height="15" fill="rgb(250,105,47)" fg:x="41220872689" fg:w="134870706"/><text x="27.0165%" y="303.50"></text></g><g><title>entry_SYSCALL_64 (561,743,086 samples, 0.36%)</title><rect x="26.4916%" y="405" width="0.3648%" height="15" fill="rgb(230,72,3)" fg:x="40797568946" fg:w="561743086"/><text x="26.7416%" y="415.50"></text></g><g><title>do_syscall_64 (561,743,086 samples, 0.36%)</title><rect x="26.4916%" y="389" width="0.3648%" height="15" fill="rgb(232,218,39)" fg:x="40797568946" fg:w="561743086"/><text x="26.7416%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;alloc::collections::btree::set::BTreeSet&lt;u64&gt;&gt;&gt; (673,854,354 samples, 0.44%)</title><rect x="26.4287%" y="469" width="0.4376%" height="15" fill="rgb(248,166,6)" fg:x="40700655745" fg:w="673854354"/><text x="26.6787%" y="479.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (673,854,354 samples, 0.44%)</title><rect x="26.4287%" y="453" width="0.4376%" height="15" fill="rgb(247,89,20)" fg:x="40700655745" fg:w="673854354"/><text x="26.6787%" y="463.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::write_unlock (673,854,354 samples, 0.44%)</title><rect x="26.4287%" y="437" width="0.4376%" height="15" fill="rgb(248,130,54)" fg:x="40700655745" fg:w="673854354"/><text x="26.6787%" y="447.50"></text></g><g><title>syscall (576,941,153 samples, 0.37%)</title><rect x="26.4916%" y="421" width="0.3746%" height="15" fill="rgb(234,196,4)" fg:x="40797568946" fg:w="576941153"/><text x="26.7416%" y="431.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (188,279,981 samples, 0.12%)</title><rect x="26.8662%" y="453" width="0.1223%" height="15" fill="rgb(250,143,31)" fg:x="41374510099" fg:w="188279981"/><text x="27.1162%" y="463.50"></text></g><g><title>std::sync::poison::map_result (175,525,268 samples, 0.11%)</title><rect x="26.8745%" y="437" width="0.1140%" height="15" fill="rgb(211,110,34)" fg:x="41387264812" fg:w="175525268"/><text x="27.1245%" y="447.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new::_{{closure}} (175,525,268 samples, 0.11%)</title><rect x="26.8745%" y="421" width="0.1140%" height="15" fill="rgb(215,124,48)" fg:x="41387264812" fg:w="175525268"/><text x="27.1245%" y="431.50"></text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::get (175,525,268 samples, 0.11%)</title><rect x="26.8745%" y="405" width="0.1140%" height="15" fill="rgb(216,46,13)" fg:x="41387264812" fg:w="175525268"/><text x="27.1245%" y="415.50"></text></g><g><title>asm_common_interrupt (18,430,328 samples, 0.01%)</title><rect x="27.8825%" y="421" width="0.0120%" height="15" fill="rgb(205,184,25)" fg:x="42939512372" fg:w="18430328"/><text x="28.1325%" y="431.50"></text></g><g><title>common_interrupt (18,430,328 samples, 0.01%)</title><rect x="27.8825%" y="405" width="0.0120%" height="15" fill="rgb(228,1,10)" fg:x="42939512372" fg:w="18430328"/><text x="28.1325%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (21,559,450 samples, 0.01%)</title><rect x="27.9019%" y="421" width="0.0140%" height="15" fill="rgb(213,116,27)" fg:x="42969419461" fg:w="21559450"/><text x="28.1519%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (21,559,450 samples, 0.01%)</title><rect x="27.9019%" y="405" width="0.0140%" height="15" fill="rgb(241,95,50)" fg:x="42969419461" fg:w="21559450"/><text x="28.1519%" y="415.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (42,978,539 samples, 0.03%)</title><rect x="27.9227%" y="405" width="0.0279%" height="15" fill="rgb(238,48,32)" fg:x="43001544947" fg:w="42978539"/><text x="28.1727%" y="415.50"></text></g><g><title>__futex_queue (48,412,513 samples, 0.03%)</title><rect x="28.0516%" y="277" width="0.0314%" height="15" fill="rgb(235,113,49)" fg:x="43200039585" fg:w="48412513"/><text x="28.3016%" y="287.50"></text></g><g><title>plist_add (48,412,513 samples, 0.03%)</title><rect x="28.0516%" y="261" width="0.0314%" height="15" fill="rgb(205,127,43)" fg:x="43200039585" fg:w="48412513"/><text x="28.3016%" y="271.50"></text></g><g><title>__list_add_valid_or_report (20,691,694 samples, 0.01%)</title><rect x="28.0696%" y="245" width="0.0134%" height="15" fill="rgb(250,162,2)" fg:x="43227760404" fg:w="20691694"/><text x="28.3196%" y="255.50"></text></g><g><title>_raw_spin_lock (20,771,661 samples, 0.01%)</title><rect x="28.1472%" y="229" width="0.0135%" height="15" fill="rgb(220,13,41)" fg:x="43347235950" fg:w="20771661"/><text x="28.3972%" y="239.50"></text></g><g><title>__pmu_ctx_sched_out (128,922,097 samples, 0.08%)</title><rect x="28.1679%" y="213" width="0.0837%" height="15" fill="rgb(249,221,25)" fg:x="43379086256" fg:w="128922097"/><text x="28.4179%" y="223.50"></text></g><g><title>group_sched_out (113,498,779 samples, 0.07%)</title><rect x="28.1779%" y="197" width="0.0737%" height="15" fill="rgb(215,208,19)" fg:x="43394509574" fg:w="113498779"/><text x="28.4279%" y="207.50"></text></g><g><title>event_sched_out (109,792,395 samples, 0.07%)</title><rect x="28.1803%" y="181" width="0.0713%" height="15" fill="rgb(236,175,2)" fg:x="43398215958" fg:w="109792395"/><text x="28.4303%" y="191.50"></text></g><g><title>perf_ibs_del (109,792,395 samples, 0.07%)</title><rect x="28.1803%" y="165" width="0.0713%" height="15" fill="rgb(241,52,2)" fg:x="43398215958" fg:w="109792395"/><text x="28.4303%" y="175.50"></text></g><g><title>perf_ibs_stop (83,517,678 samples, 0.05%)</title><rect x="28.1974%" y="149" width="0.0542%" height="15" fill="rgb(248,140,14)" fg:x="43424490675" fg:w="83517678"/><text x="28.4474%" y="159.50"></text></g><g><title>native_read_msr (56,500,029 samples, 0.04%)</title><rect x="28.2149%" y="133" width="0.0367%" height="15" fill="rgb(253,22,42)" fg:x="43451508324" fg:w="56500029"/><text x="28.4649%" y="143.50"></text></g><g><title>ctx_sched_out (175,987,177 samples, 0.11%)</title><rect x="28.1607%" y="229" width="0.1143%" height="15" fill="rgb(234,61,47)" fg:x="43368007611" fg:w="175987177"/><text x="28.4107%" y="239.50"></text></g><g><title>local_clock (35,986,435 samples, 0.02%)</title><rect x="28.2516%" y="213" width="0.0234%" height="15" fill="rgb(208,226,15)" fg:x="43508008353" fg:w="35986435"/><text x="28.5016%" y="223.50"></text></g><g><title>local_clock_noinstr (23,284,896 samples, 0.02%)</title><rect x="28.2599%" y="197" width="0.0151%" height="15" fill="rgb(217,221,4)" fg:x="43520709892" fg:w="23284896"/><text x="28.5099%" y="207.50"></text></g><g><title>native_sched_clock (23,284,896 samples, 0.02%)</title><rect x="28.2599%" y="181" width="0.0151%" height="15" fill="rgb(212,174,34)" fg:x="43520709892" fg:w="23284896"/><text x="28.5099%" y="191.50"></text></g><g><title>__perf_event_task_sched_out (248,269,670 samples, 0.16%)</title><rect x="28.1311%" y="245" width="0.1612%" height="15" fill="rgb(253,83,4)" fg:x="43322382907" fg:w="248269670"/><text x="28.3811%" y="255.50"></text></g><g><title>update_cfs_group (83,207,351 samples, 0.05%)</title><rect x="28.4540%" y="213" width="0.0540%" height="15" fill="rgb(250,195,49)" fg:x="43819606657" fg:w="83207351"/><text x="28.7040%" y="223.50"></text></g><g><title>update_curr (140,460,047 samples, 0.09%)</title><rect x="28.5080%" y="213" width="0.0912%" height="15" fill="rgb(241,192,25)" fg:x="43902814008" fg:w="140460047"/><text x="28.7580%" y="223.50"></text></g><g><title>__update_load_avg_cfs_rq (49,082,672 samples, 0.03%)</title><rect x="28.6454%" y="197" width="0.0319%" height="15" fill="rgb(208,124,10)" fg:x="44114390081" fg:w="49082672"/><text x="28.8954%" y="207.50"></text></g><g><title>dequeue_entity (506,589,260 samples, 0.33%)</title><rect x="28.3625%" y="229" width="0.3290%" height="15" fill="rgb(222,33,0)" fg:x="43678761884" fg:w="506589260"/><text x="28.6125%" y="239.50"></text></g><g><title>update_load_avg (142,077,089 samples, 0.09%)</title><rect x="28.5992%" y="213" width="0.0923%" height="15" fill="rgb(234,209,28)" fg:x="44043274055" fg:w="142077089"/><text x="28.8492%" y="223.50"></text></g><g><title>dequeue_task_fair (622,924,536 samples, 0.40%)</title><rect x="28.2923%" y="245" width="0.4045%" height="15" fill="rgb(224,11,23)" fg:x="43570652577" fg:w="622924536"/><text x="28.5423%" y="255.50"></text></g><g><title>finish_task_switch.isra.0 (28,904,202 samples, 0.02%)</title><rect x="28.6968%" y="245" width="0.0188%" height="15" fill="rgb(232,99,1)" fg:x="44193577113" fg:w="28904202"/><text x="28.9468%" y="255.50"></text></g><g><title>raw_spin_rq_lock_nested (19,634,300 samples, 0.01%)</title><rect x="28.7837%" y="213" width="0.0127%" height="15" fill="rgb(237,95,45)" fg:x="44327398468" fg:w="19634300"/><text x="29.0337%" y="223.50"></text></g><g><title>_raw_spin_lock (19,634,300 samples, 0.01%)</title><rect x="28.7837%" y="197" width="0.0127%" height="15" fill="rgb(208,109,11)" fg:x="44327398468" fg:w="19634300"/><text x="29.0337%" y="207.50"></text></g><g><title>_raw_spin_rq_lock_irqsave (35,852,532 samples, 0.02%)</title><rect x="28.8316%" y="197" width="0.0233%" height="15" fill="rgb(216,190,48)" fg:x="44401183120" fg:w="35852532"/><text x="29.0816%" y="207.50"></text></g><g><title>raw_spin_rq_lock_nested (35,852,532 samples, 0.02%)</title><rect x="28.8316%" y="181" width="0.0233%" height="15" fill="rgb(251,171,36)" fg:x="44401183120" fg:w="35852532"/><text x="29.0816%" y="191.50"></text></g><g><title>_raw_spin_lock (35,852,532 samples, 0.02%)</title><rect x="28.8316%" y="165" width="0.0233%" height="15" fill="rgb(230,62,22)" fg:x="44401183120" fg:w="35852532"/><text x="29.0816%" y="175.50"></text></g><g><title>native_queued_spin_lock_slowpath (35,852,532 samples, 0.02%)</title><rect x="28.8316%" y="149" width="0.0233%" height="15" fill="rgb(225,114,35)" fg:x="44401183120" fg:w="35852532"/><text x="29.0816%" y="159.50"></text></g><g><title>activate_task (17,461,473 samples, 0.01%)</title><rect x="28.8549%" y="197" width="0.0113%" height="15" fill="rgb(215,118,42)" fg:x="44437035652" fg:w="17461473"/><text x="29.1049%" y="207.50"></text></g><g><title>_find_next_and_bit (19,259,251 samples, 0.01%)</title><rect x="29.0006%" y="165" width="0.0125%" height="15" fill="rgb(243,119,21)" fg:x="44661405189" fg:w="19259251"/><text x="29.2506%" y="175.50"></text></g><g><title>idle_cpu (46,844,814 samples, 0.03%)</title><rect x="29.0146%" y="165" width="0.0304%" height="15" fill="rgb(252,177,53)" fg:x="44683003045" fg:w="46844814"/><text x="29.2646%" y="175.50"></text></g><g><title>sched_balance_find_src_group (254,637,420 samples, 0.17%)</title><rect x="28.8817%" y="197" width="0.1653%" height="15" fill="rgb(237,209,29)" fg:x="44478396466" fg:w="254637420"/><text x="29.1317%" y="207.50"></text></g><g><title>update_sd_lb_stats.constprop.0 (247,205,442 samples, 0.16%)</title><rect x="28.8866%" y="181" width="0.1605%" height="15" fill="rgb(212,65,23)" fg:x="44485828444" fg:w="247205442"/><text x="29.1366%" y="191.50"></text></g><g><title>sched_balance_rq (389,838,290 samples, 0.25%)</title><rect x="28.7964%" y="213" width="0.2531%" height="15" fill="rgb(230,222,46)" fg:x="44347032768" fg:w="389838290"/><text x="29.0464%" y="223.50"></text></g><g><title>update_load_avg (31,427,925 samples, 0.02%)</title><rect x="29.1342%" y="197" width="0.0204%" height="15" fill="rgb(215,135,32)" fg:x="44867237245" fg:w="31427925"/><text x="29.3842%" y="207.50"></text></g><g><title>update_rq_clock (16,316,564 samples, 0.01%)</title><rect x="29.1546%" y="197" width="0.0106%" height="15" fill="rgb(246,101,22)" fg:x="44898665170" fg:w="16316564"/><text x="29.4046%" y="207.50"></text></g><g><title>sched_balance_update_blocked_averages (185,748,305 samples, 0.12%)</title><rect x="29.0496%" y="213" width="0.1206%" height="15" fill="rgb(206,107,13)" fg:x="44736871058" fg:w="185748305"/><text x="29.2996%" y="223.50"></text></g><g><title>sched_balance_newidle (683,715,120 samples, 0.44%)</title><rect x="28.7343%" y="229" width="0.4440%" height="15" fill="rgb(250,100,44)" fg:x="44251377188" fg:w="683715120"/><text x="28.9843%" y="239.50"></text></g><g><title>pick_next_task_fair (728,389,935 samples, 0.47%)</title><rect x="28.7156%" y="245" width="0.4730%" height="15" fill="rgb(231,147,38)" fg:x="44222481315" fg:w="728389935"/><text x="28.9656%" y="255.50"></text></g><g><title>pick_next_task_idle (27,188,534 samples, 0.02%)</title><rect x="29.1885%" y="245" width="0.0177%" height="15" fill="rgb(229,8,40)" fg:x="44950871250" fg:w="27188534"/><text x="29.4385%" y="255.50"></text></g><g><title>__update_idle_core (27,188,534 samples, 0.02%)</title><rect x="29.1885%" y="229" width="0.0177%" height="15" fill="rgb(221,135,30)" fg:x="44950871250" fg:w="27188534"/><text x="29.4385%" y="239.50"></text></g><g><title>psi_account_irqtime (89,037,710 samples, 0.06%)</title><rect x="29.2062%" y="245" width="0.0578%" height="15" fill="rgb(249,193,18)" fg:x="44978059784" fg:w="89037710"/><text x="29.4562%" y="255.50"></text></g><g><title>psi_group_change (132,266,395 samples, 0.09%)</title><rect x="29.2802%" y="229" width="0.0859%" height="15" fill="rgb(209,133,39)" fg:x="45092029621" fg:w="132266395"/><text x="29.5302%" y="239.50"></text></g><g><title>psi_task_switch (171,107,984 samples, 0.11%)</title><rect x="29.2640%" y="245" width="0.1111%" height="15" fill="rgb(232,100,14)" fg:x="45067097494" fg:w="171107984"/><text x="29.5140%" y="255.50"></text></g><g><title>put_prev_entity (20,642,089 samples, 0.01%)</title><rect x="29.3938%" y="229" width="0.0134%" height="15" fill="rgb(224,185,1)" fg:x="45266975048" fg:w="20642089"/><text x="29.6438%" y="239.50"></text></g><g><title>put_prev_task_fair (53,679,402 samples, 0.03%)</title><rect x="29.3751%" y="245" width="0.0349%" height="15" fill="rgb(223,139,8)" fg:x="45238205478" fg:w="53679402"/><text x="29.6251%" y="255.50"></text></g><g><title>raw_spin_rq_lock_nested (45,454,334 samples, 0.03%)</title><rect x="29.4100%" y="245" width="0.0295%" height="15" fill="rgb(232,213,38)" fg:x="45291884880" fg:w="45454334"/><text x="29.6600%" y="255.50"></text></g><g><title>_raw_spin_lock (38,586,767 samples, 0.03%)</title><rect x="29.4144%" y="229" width="0.0251%" height="15" fill="rgb(207,94,22)" fg:x="45298752447" fg:w="38586767"/><text x="29.6644%" y="239.50"></text></g><g><title>__schedule (2,110,199,332 samples, 1.37%)</title><rect x="28.0908%" y="261" width="1.3702%" height="15" fill="rgb(219,183,54)" fg:x="43260304835" fg:w="2110199332"/><text x="28.3408%" y="271.50"></text></g><g><title>update_rq_clock (25,986,986 samples, 0.02%)</title><rect x="29.4441%" y="245" width="0.0169%" height="15" fill="rgb(216,185,54)" fg:x="45344517181" fg:w="25986986"/><text x="29.6941%" y="255.50"></text></g><g><title>futex_wait_queue (2,190,399,158 samples, 1.42%)</title><rect x="28.0494%" y="293" width="1.4223%" height="15" fill="rgb(254,217,39)" fg:x="43196532672" fg:w="2190399158"/><text x="28.2994%" y="303.50"></text></g><g><title>schedule (2,138,479,732 samples, 1.39%)</title><rect x="28.0831%" y="277" width="1.3886%" height="15" fill="rgb(240,178,23)" fg:x="43248452098" fg:w="2138479732"/><text x="28.3331%" y="287.50"></text></g><g><title>futex_get_value_locked (189,011,431 samples, 0.12%)</title><rect x="29.4873%" y="277" width="0.1227%" height="15" fill="rgb(218,11,47)" fg:x="45410992455" fg:w="189011431"/><text x="29.7373%" y="287.50"></text></g><g><title>__get_user_nocheck_4 (177,284,796 samples, 0.12%)</title><rect x="29.4949%" y="261" width="0.1151%" height="15" fill="rgb(218,51,51)" fg:x="45422719090" fg:w="177284796"/><text x="29.7449%" y="271.50"></text></g><g><title>_raw_spin_lock (2,714,017,581 samples, 1.76%)</title><rect x="29.6535%" y="261" width="1.7623%" height="15" fill="rgb(238,126,27)" fg:x="45666902509" fg:w="2714017581"/><text x="29.9035%" y="271.50"></text></g><g><title>native_queued_spin_lock_slowpath (2,703,943,507 samples, 1.76%)</title><rect x="29.6600%" y="245" width="1.7558%" height="15" fill="rgb(249,202,22)" fg:x="45676976583" fg:w="2703943507"/><text x="29.9100%" y="255.50"></text></g><g><title>futex_q_lock (2,793,138,311 samples, 1.81%)</title><rect x="29.6100%" y="277" width="1.8137%" height="15" fill="rgb(254,195,49)" fg:x="45600003886" fg:w="2793138311"/><text x="29.8600%" y="287.50">f..</text></g><g><title>futex_q_unlock (51,030,883 samples, 0.03%)</title><rect x="31.4237%" y="277" width="0.0331%" height="15" fill="rgb(208,123,14)" fg:x="48393142197" fg:w="51030883"/><text x="31.6737%" y="287.50"></text></g><g><title>do_futex (5,266,184,549 samples, 3.42%)</title><rect x="28.0389%" y="341" width="3.4196%" height="15" fill="rgb(224,200,8)" fg:x="43180476380" fg:w="5266184549"/><text x="28.2889%" y="351.50">do_..</text></g><g><title>futex_wait (5,266,184,549 samples, 3.42%)</title><rect x="28.0389%" y="325" width="3.4196%" height="15" fill="rgb(217,61,36)" fg:x="43180476380" fg:w="5266184549"/><text x="28.2889%" y="335.50">fut..</text></g><g><title>__futex_wait (5,261,840,712 samples, 3.42%)</title><rect x="28.0418%" y="309" width="3.4167%" height="15" fill="rgb(206,35,45)" fg:x="43184820217" fg:w="5261840712"/><text x="28.2918%" y="319.50">__f..</text></g><g><title>futex_wait_setup (3,059,729,099 samples, 1.99%)</title><rect x="29.4717%" y="293" width="1.9868%" height="15" fill="rgb(217,65,33)" fg:x="45386931830" fg:w="3059729099"/><text x="29.7217%" y="303.50">f..</text></g><g><title>__x64_sys_futex (5,277,612,158 samples, 3.43%)</title><rect x="28.0364%" y="357" width="3.4270%" height="15" fill="rgb(222,158,48)" fg:x="43176562947" fg:w="5277612158"/><text x="28.2864%" y="367.50">__x..</text></g><g><title>restore_fpregs_from_fpstate (16,852,588 samples, 0.01%)</title><rect x="31.4948%" y="325" width="0.0109%" height="15" fill="rgb(254,2,54)" fg:x="48502546567" fg:w="16852588"/><text x="31.7448%" y="335.50"></text></g><g><title>do_syscall_64 (5,369,496,891 samples, 3.49%)</title><rect x="28.0191%" y="373" width="3.4866%" height="15" fill="rgb(250,143,38)" fg:x="43149902280" fg:w="5369496891"/><text x="28.2691%" y="383.50">do_..</text></g><g><title>syscall_exit_to_user_mode (65,224,066 samples, 0.04%)</title><rect x="31.4634%" y="357" width="0.0424%" height="15" fill="rgb(248,25,0)" fg:x="48454175105" fg:w="65224066"/><text x="31.7134%" y="367.50"></text></g><g><title>switch_fpu_return (32,812,477 samples, 0.02%)</title><rect x="31.4844%" y="341" width="0.0213%" height="15" fill="rgb(206,152,27)" fg:x="48486586694" fg:w="32812477"/><text x="31.7344%" y="351.50"></text></g><g><title>entry_SYSCALL_64 (5,402,835,124 samples, 3.51%)</title><rect x="27.9995%" y="389" width="3.5083%" height="15" fill="rgb(240,77,30)" fg:x="43119790693" fg:w="5402835124"/><text x="28.2495%" y="399.50">ent..</text></g><g><title>std::sys::pal::unix::futex::futex_wait (5,749,297,464 samples, 3.73%)</title><rect x="27.9159%" y="421" width="3.7333%" height="15" fill="rgb(231,5,3)" fg:x="42990978911" fg:w="5749297464"/><text x="28.1659%" y="431.50">std:..</text></g><g><title>syscall (5,695,752,889 samples, 3.70%)</title><rect x="27.9507%" y="405" width="3.6985%" height="15" fill="rgb(207,226,32)" fg:x="43044523486" fg:w="5695752889"/><text x="28.2007%" y="415.50">sysc..</text></g><g><title>syscall_return_via_sysret (213,816,050 samples, 0.14%)</title><rect x="31.5103%" y="389" width="0.1388%" height="15" fill="rgb(222,207,47)" fg:x="48526460325" fg:w="213816050"/><text x="31.7603%" y="399.50"></text></g><g><title>stackleak_erase (124,645,080 samples, 0.08%)</title><rect x="31.5682%" y="373" width="0.0809%" height="15" fill="rgb(229,115,45)" fg:x="48615631295" fg:w="124645080"/><text x="31.8182%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (40,189,818 samples, 0.03%)</title><rect x="31.6814%" y="389" width="0.0261%" height="15" fill="rgb(224,191,6)" fg:x="48789909888" fg:w="40189818"/><text x="31.9314%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_load (40,189,818 samples, 0.03%)</title><rect x="31.6814%" y="373" width="0.0261%" height="15" fill="rgb(230,227,24)" fg:x="48789909888" fg:w="40189818"/><text x="31.9314%" y="383.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_read (524,068,952 samples, 0.34%)</title><rect x="31.6492%" y="421" width="0.3403%" height="15" fill="rgb(228,80,19)" fg:x="48740276375" fg:w="524068952"/><text x="31.8992%" y="431.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_until (524,068,952 samples, 0.34%)</title><rect x="31.6492%" y="405" width="0.3403%" height="15" fill="rgb(247,229,0)" fg:x="48740276375" fg:w="524068952"/><text x="31.8992%" y="415.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_read::_{{closure}} (434,245,621 samples, 0.28%)</title><rect x="31.7075%" y="389" width="0.2820%" height="15" fill="rgb(237,194,15)" fg:x="48830099706" fg:w="434245621"/><text x="31.9575%" y="399.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read_contended (7,005,460,060 samples, 4.55%)</title><rect x="27.4828%" y="437" width="4.5489%" height="15" fill="rgb(219,203,20)" fg:x="42323993610" fg:w="7005460060"/><text x="27.7328%" y="447.50">std::..</text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::is_read_lockable (65,108,343 samples, 0.04%)</title><rect x="31.9895%" y="421" width="0.0423%" height="15" fill="rgb(234,128,8)" fg:x="49264345327" fg:w="65108343"/><text x="32.2395%" y="431.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::is_read_lockable (1,293,186,007 samples, 0.84%)</title><rect x="32.0317%" y="437" width="0.8397%" height="15" fill="rgb(248,202,8)" fg:x="49329453670" fg:w="1293186007"/><text x="32.2817%" y="447.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (9,255,122,392 samples, 6.01%)</title><rect x="26.8662%" y="469" width="6.0097%" height="15" fill="rgb(206,104,37)" fg:x="41374510099" fg:w="9255122392"/><text x="27.1162%" y="479.50">std::syn..</text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read (9,066,842,411 samples, 5.89%)</title><rect x="26.9885%" y="453" width="5.8875%" height="15" fill="rgb(223,8,27)" fg:x="41562790080" fg:w="9066842411"/><text x="27.2385%" y="463.50">std::sy..</text></g><g><title>__perf_event_task_sched_out (19,089,383 samples, 0.01%)</title><rect x="32.8922%" y="245" width="0.0124%" height="15" fill="rgb(216,217,28)" fg:x="50654643037" fg:w="19089383"/><text x="33.1422%" y="255.50"></text></g><g><title>dequeue_task_fair (25,015,701 samples, 0.02%)</title><rect x="32.9046%" y="245" width="0.0162%" height="15" fill="rgb(249,199,1)" fg:x="50673732420" fg:w="25015701"/><text x="33.1546%" y="255.50"></text></g><g><title>dequeue_entity (25,015,701 samples, 0.02%)</title><rect x="32.9046%" y="229" width="0.0162%" height="15" fill="rgb(240,85,17)" fg:x="50673732420" fg:w="25015701"/><text x="33.1546%" y="239.50"></text></g><g><title>sched_balance_rq (27,681,378 samples, 0.02%)</title><rect x="32.9210%" y="213" width="0.0180%" height="15" fill="rgb(206,108,45)" fg:x="50698893041" fg:w="27681378"/><text x="33.1710%" y="223.50"></text></g><g><title>sched_balance_find_src_group (20,857,990 samples, 0.01%)</title><rect x="32.9254%" y="197" width="0.0135%" height="15" fill="rgb(245,210,41)" fg:x="50705716429" fg:w="20857990"/><text x="33.1754%" y="207.50"></text></g><g><title>update_sd_lb_stats.constprop.0 (20,857,990 samples, 0.01%)</title><rect x="32.9254%" y="181" width="0.0135%" height="15" fill="rgb(206,13,37)" fg:x="50705716429" fg:w="20857990"/><text x="33.1754%" y="191.50"></text></g><g><title>pick_next_task_fair (44,258,597 samples, 0.03%)</title><rect x="32.9209%" y="245" width="0.0287%" height="15" fill="rgb(250,61,18)" fg:x="50698748121" fg:w="44258597"/><text x="33.1709%" y="255.50"></text></g><g><title>sched_balance_newidle (44,113,677 samples, 0.03%)</title><rect x="32.9210%" y="229" width="0.0286%" height="15" fill="rgb(235,172,48)" fg:x="50698893041" fg:w="44113677"/><text x="33.1710%" y="239.50"></text></g><g><title>sched_balance_update_blocked_averages (16,432,299 samples, 0.01%)</title><rect x="32.9389%" y="213" width="0.0107%" height="15" fill="rgb(249,201,17)" fg:x="50726574419" fg:w="16432299"/><text x="33.1889%" y="223.50"></text></g><g><title>futex_wait_queue (119,634,418 samples, 0.08%)</title><rect x="32.8913%" y="293" width="0.0777%" height="15" fill="rgb(219,208,6)" fg:x="50653232224" fg:w="119634418"/><text x="33.1413%" y="303.50"></text></g><g><title>schedule (119,634,418 samples, 0.08%)</title><rect x="32.8913%" y="277" width="0.0777%" height="15" fill="rgb(248,31,23)" fg:x="50653232224" fg:w="119634418"/><text x="33.1413%" y="287.50"></text></g><g><title>__schedule (119,634,418 samples, 0.08%)</title><rect x="32.8913%" y="261" width="0.0777%" height="15" fill="rgb(245,15,42)" fg:x="50653232224" fg:w="119634418"/><text x="33.1413%" y="271.50"></text></g><g><title>__x64_sys_futex (130,887,758 samples, 0.08%)</title><rect x="32.8913%" y="357" width="0.0850%" height="15" fill="rgb(222,217,39)" fg:x="50653232224" fg:w="130887758"/><text x="33.1413%" y="367.50"></text></g><g><title>do_futex (130,887,758 samples, 0.08%)</title><rect x="32.8913%" y="341" width="0.0850%" height="15" fill="rgb(210,219,27)" fg:x="50653232224" fg:w="130887758"/><text x="33.1413%" y="351.50"></text></g><g><title>futex_wait (130,887,758 samples, 0.08%)</title><rect x="32.8913%" y="325" width="0.0850%" height="15" fill="rgb(252,166,36)" fg:x="50653232224" fg:w="130887758"/><text x="33.1413%" y="335.50"></text></g><g><title>__futex_wait (130,887,758 samples, 0.08%)</title><rect x="32.8913%" y="309" width="0.0850%" height="15" fill="rgb(245,132,34)" fg:x="50653232224" fg:w="130887758"/><text x="33.1413%" y="319.50"></text></g><g><title>entry_SYSCALL_64 (136,675,861 samples, 0.09%)</title><rect x="32.8913%" y="389" width="0.0887%" height="15" fill="rgb(236,54,3)" fg:x="50653232208" fg:w="136675861"/><text x="33.1413%" y="399.50"></text></g><g><title>do_syscall_64 (136,675,845 samples, 0.09%)</title><rect x="32.8913%" y="373" width="0.0887%" height="15" fill="rgb(241,173,43)" fg:x="50653232224" fg:w="136675845"/><text x="33.1413%" y="383.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (170,351,967 samples, 0.11%)</title><rect x="32.8844%" y="421" width="0.1106%" height="15" fill="rgb(215,190,9)" fg:x="50642554414" fg:w="170351967"/><text x="33.1344%" y="431.50"></text></g><g><title>syscall (163,073,221 samples, 0.11%)</title><rect x="32.8891%" y="405" width="0.1059%" height="15" fill="rgb(242,101,16)" fg:x="50649833160" fg:w="163073221"/><text x="33.1391%" y="415.50"></text></g><g><title>syscall_return_via_sysret (22,998,312 samples, 0.01%)</title><rect x="32.9801%" y="389" width="0.0149%" height="15" fill="rgb(223,190,21)" fg:x="50789908069" fg:w="22998312"/><text x="33.2301%" y="399.50"></text></g><g><title>core::hint::spin_loop (57,704,922 samples, 0.04%)</title><rect x="33.0391%" y="389" width="0.0375%" height="15" fill="rgb(215,228,25)" fg:x="50880816576" fg:w="57704922"/><text x="33.2891%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (57,704,922 samples, 0.04%)</title><rect x="33.0391%" y="373" width="0.0375%" height="15" fill="rgb(225,36,22)" fg:x="50880816576" fg:w="57704922"/><text x="33.2891%" y="383.50"></text></g><g><title>rpq::bpq::BucketPriorityQueue::add_bucket (11,543,766,375 samples, 7.50%)</title><rect x="25.6267%" y="485" width="7.4959%" height="15" fill="rgb(251,106,46)" fg:x="39465636006" fg:w="11543766375"/><text x="25.8767%" y="495.50">rpq::bpq::..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (379,769,890 samples, 0.25%)</title><rect x="32.8760%" y="469" width="0.2466%" height="15" fill="rgb(208,90,1)" fg:x="50629632491" fg:w="379769890"/><text x="33.1260%" y="479.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::write (379,769,890 samples, 0.25%)</title><rect x="32.8760%" y="453" width="0.2466%" height="15" fill="rgb(243,10,4)" fg:x="50629632491" fg:w="379769890"/><text x="33.1260%" y="463.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::write_contended (374,848,550 samples, 0.24%)</title><rect x="32.8792%" y="437" width="0.2434%" height="15" fill="rgb(212,137,27)" fg:x="50634553831" fg:w="374848550"/><text x="33.1292%" y="447.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_write (196,496,000 samples, 0.13%)</title><rect x="32.9950%" y="421" width="0.1276%" height="15" fill="rgb(231,220,49)" fg:x="50812906381" fg:w="196496000"/><text x="33.2450%" y="431.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_until (196,496,000 samples, 0.13%)</title><rect x="32.9950%" y="405" width="0.1276%" height="15" fill="rgb(237,96,20)" fg:x="50812906381" fg:w="196496000"/><text x="33.2450%" y="415.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_write::_{{closure}} (60,759,520 samples, 0.04%)</title><rect x="33.0831%" y="389" width="0.0395%" height="15" fill="rgb(239,229,30)" fg:x="50948642861" fg:w="60759520"/><text x="33.3331%" y="399.50"></text></g><g><title>[libc.so.6] (23,382,749 samples, 0.02%)</title><rect x="33.3612%" y="453" width="0.0152%" height="15" fill="rgb(219,65,33)" fg:x="51376790297" fg:w="23382749"/><text x="33.6112%" y="463.50"></text></g><g><title>asm_exc_page_fault (19,419,369 samples, 0.01%)</title><rect x="33.3637%" y="437" width="0.0126%" height="15" fill="rgb(243,134,7)" fg:x="51380753677" fg:w="19419369"/><text x="33.6137%" y="447.50"></text></g><g><title>exc_page_fault (15,496,208 samples, 0.01%)</title><rect x="33.3663%" y="421" width="0.0101%" height="15" fill="rgb(216,177,54)" fg:x="51384676838" fg:w="15496208"/><text x="33.6163%" y="431.50"></text></g><g><title>do_user_addr_fault (15,496,208 samples, 0.01%)</title><rect x="33.3663%" y="405" width="0.0101%" height="15" fill="rgb(211,160,20)" fg:x="51384676838" fg:w="15496208"/><text x="33.6163%" y="415.50"></text></g><g><title>handle_mm_fault (15,496,208 samples, 0.01%)</title><rect x="33.3663%" y="389" width="0.0101%" height="15" fill="rgb(239,85,39)" fg:x="51384676838" fg:w="15496208"/><text x="33.6163%" y="399.50"></text></g><g><title>__handle_mm_fault (15,496,208 samples, 0.01%)</title><rect x="33.3663%" y="373" width="0.0101%" height="15" fill="rgb(232,125,22)" fg:x="51384676838" fg:w="15496208"/><text x="33.6163%" y="383.50"></text></g><g><title>__irqentry_text_end (186,051,049 samples, 0.12%)</title><rect x="33.7436%" y="421" width="0.1208%" height="15" fill="rgb(244,57,34)" fg:x="51965766168" fg:w="186051049"/><text x="33.9936%" y="431.50"></text></g><g><title>stackleak_erase (50,203,603 samples, 0.03%)</title><rect x="33.8318%" y="405" width="0.0326%" height="15" fill="rgb(214,203,32)" fg:x="52101613614" fg:w="50203603"/><text x="34.0818%" y="415.50"></text></g><g><title>__folio_throttle_swaprate (110,893,659 samples, 0.07%)</title><rect x="34.0410%" y="341" width="0.0720%" height="15" fill="rgb(207,58,43)" fg:x="52423799761" fg:w="110893659"/><text x="34.2910%" y="351.50"></text></g><g><title>blk_cgroup_congested (81,653,767 samples, 0.05%)</title><rect x="34.0600%" y="325" width="0.0530%" height="15" fill="rgb(215,193,15)" fg:x="52453039653" fg:w="81653767"/><text x="34.3100%" y="335.50"></text></g><g><title>__mod_lruvec_state (20,390,089 samples, 0.01%)</title><rect x="34.1447%" y="325" width="0.0132%" height="15" fill="rgb(232,15,44)" fg:x="52583529421" fg:w="20390089"/><text x="34.3947%" y="335.50"></text></g><g><title>__lruvec_stat_mod_folio (133,139,168 samples, 0.09%)</title><rect x="34.1130%" y="341" width="0.0865%" height="15" fill="rgb(212,3,48)" fg:x="52534693420" fg:w="133139168"/><text x="34.3630%" y="351.50"></text></g><g><title>__mod_memcg_lruvec_state (63,913,078 samples, 0.04%)</title><rect x="34.1580%" y="325" width="0.0415%" height="15" fill="rgb(218,128,7)" fg:x="52603919510" fg:w="63913078"/><text x="34.4080%" y="335.50"></text></g><g><title>get_mem_cgroup_from_mm (124,710,403 samples, 0.08%)</title><rect x="34.2215%" y="325" width="0.0810%" height="15" fill="rgb(226,216,39)" fg:x="52701703223" fg:w="124710403"/><text x="34.4715%" y="335.50"></text></g><g><title>cgroup_rstat_updated (34,506,912 samples, 0.02%)</title><rect x="34.3734%" y="277" width="0.0224%" height="15" fill="rgb(243,47,51)" fg:x="52935672214" fg:w="34506912"/><text x="34.6234%" y="287.50"></text></g><g><title>__count_memcg_events (111,878,506 samples, 0.07%)</title><rect x="34.3334%" y="293" width="0.0726%" height="15" fill="rgb(241,183,40)" fg:x="52874024016" fg:w="111878506"/><text x="34.5834%" y="303.50"></text></g><g><title>mem_cgroup_charge_statistics (132,604,420 samples, 0.09%)</title><rect x="34.3263%" y="309" width="0.0861%" height="15" fill="rgb(231,217,32)" fg:x="52863056586" fg:w="132604420"/><text x="34.5763%" y="319.50"></text></g><g><title>mem_cgroup_commit_charge (206,625,313 samples, 0.13%)</title><rect x="34.3025%" y="325" width="0.1342%" height="15" fill="rgb(229,61,38)" fg:x="52826413626" fg:w="206625313"/><text x="34.5525%" y="335.50"></text></g><g><title>memcg_check_events (37,377,933 samples, 0.02%)</title><rect x="34.4124%" y="309" width="0.0243%" height="15" fill="rgb(225,210,5)" fg:x="52995661006" fg:w="37377933"/><text x="34.6624%" y="319.50"></text></g><g><title>check_preemption_disabled (25,905,736 samples, 0.02%)</title><rect x="34.4198%" y="293" width="0.0168%" height="15" fill="rgb(231,79,45)" fg:x="53007133203" fg:w="25905736"/><text x="34.6698%" y="303.50"></text></g><g><title>__mem_cgroup_charge (409,754,335 samples, 0.27%)</title><rect x="34.1995%" y="341" width="0.2661%" height="15" fill="rgb(224,100,7)" fg:x="52667832588" fg:w="409754335"/><text x="34.4495%" y="351.50"></text></g><g><title>try_charge_memcg (44,547,984 samples, 0.03%)</title><rect x="34.4366%" y="325" width="0.0289%" height="15" fill="rgb(241,198,18)" fg:x="53033038939" fg:w="44547984"/><text x="34.6866%" y="335.50"></text></g><g><title>page_counter_try_charge (23,930,146 samples, 0.02%)</title><rect x="34.4500%" y="309" width="0.0155%" height="15" fill="rgb(252,97,53)" fg:x="53053656777" fg:w="23930146"/><text x="34.7000%" y="319.50"></text></g><g><title>__pte_offset_map_lock (139,277,811 samples, 0.09%)</title><rect x="34.4656%" y="341" width="0.0904%" height="15" fill="rgb(220,88,7)" fg:x="53077586923" fg:w="139277811"/><text x="34.7156%" y="351.50"></text></g><g><title>_raw_spin_lock (114,118,004 samples, 0.07%)</title><rect x="34.4819%" y="325" width="0.0741%" height="15" fill="rgb(213,176,14)" fg:x="53102746730" fg:w="114118004"/><text x="34.7319%" y="335.50"></text></g><g><title>_raw_spin_unlock (20,707,941 samples, 0.01%)</title><rect x="34.5560%" y="341" width="0.0134%" height="15" fill="rgb(246,73,7)" fg:x="53216864734" fg:w="20707941"/><text x="34.8060%" y="351.50"></text></g><g><title>check_preemption_disabled (15,622,156 samples, 0.01%)</title><rect x="34.6022%" y="325" width="0.0101%" height="15" fill="rgb(245,64,36)" fg:x="53288061551" fg:w="15622156"/><text x="34.8522%" y="335.50"></text></g><g><title>__mod_lruvec_state (24,979,457 samples, 0.02%)</title><rect x="34.6721%" y="277" width="0.0162%" height="15" fill="rgb(245,80,10)" fg:x="53395723891" fg:w="24979457"/><text x="34.9221%" y="287.50"></text></g><g><title>__mod_node_page_state (17,365,879 samples, 0.01%)</title><rect x="34.6771%" y="261" width="0.0113%" height="15" fill="rgb(232,107,50)" fg:x="53403337469" fg:w="17365879"/><text x="34.9271%" y="271.50"></text></g><g><title>__mod_memcg_lruvec_state (59,812,463 samples, 0.04%)</title><rect x="34.6884%" y="277" width="0.0388%" height="15" fill="rgb(253,3,0)" fg:x="53420703348" fg:w="59812463"/><text x="34.9384%" y="287.50"></text></g><g><title>folio_batch_move_lru (216,577,771 samples, 0.14%)</title><rect x="34.6150%" y="325" width="0.1406%" height="15" fill="rgb(212,99,53)" fg:x="53307700241" fg:w="216577771"/><text x="34.8650%" y="335.50"></text></g><g><title>lru_add_fn (190,016,316 samples, 0.12%)</title><rect x="34.6322%" y="309" width="0.1234%" height="15" fill="rgb(249,111,54)" fg:x="53334261696" fg:w="190016316"/><text x="34.8822%" y="319.50"></text></g><g><title>lru_gen_add_folio (157,740,757 samples, 0.10%)</title><rect x="34.6532%" y="293" width="0.1024%" height="15" fill="rgb(249,55,30)" fg:x="53366537255" fg:w="157740757"/><text x="34.9032%" y="303.50"></text></g><g><title>__mod_zone_page_state (43,762,201 samples, 0.03%)</title><rect x="34.7272%" y="277" width="0.0284%" height="15" fill="rgb(237,47,42)" fg:x="53480515811" fg:w="43762201"/><text x="34.9772%" y="287.50"></text></g><g><title>folio_add_lru (293,752,470 samples, 0.19%)</title><rect x="34.5694%" y="341" width="0.1907%" height="15" fill="rgb(211,20,18)" fg:x="53237572675" fg:w="293752470"/><text x="34.8194%" y="351.50"></text></g><g><title>percpu_counter_add_batch (59,560,871 samples, 0.04%)</title><rect x="34.7749%" y="341" width="0.0387%" height="15" fill="rgb(231,203,46)" fg:x="53553916120" fg:w="59560871"/><text x="35.0249%" y="351.50"></text></g><g><title>set_ptes.isra.0 (25,009,255 samples, 0.02%)</title><rect x="34.8275%" y="341" width="0.0162%" height="15" fill="rgb(237,142,3)" fg:x="53634910483" fg:w="25009255"/><text x="35.0775%" y="351.50"></text></g><g><title>__next_zones_zonelist (47,619,392 samples, 0.03%)</title><rect x="34.8935%" y="293" width="0.0309%" height="15" fill="rgb(241,107,1)" fg:x="53736604873" fg:w="47619392"/><text x="35.1435%" y="303.50"></text></g><g><title>__list_del_entry_valid_or_report (127,617,901 samples, 0.08%)</title><rect x="35.0044%" y="261" width="0.0829%" height="15" fill="rgb(229,83,13)" fg:x="53907487366" fg:w="127617901"/><text x="35.2544%" y="271.50"></text></g><g><title>__mod_zone_page_state (21,912,607 samples, 0.01%)</title><rect x="35.0873%" y="261" width="0.0142%" height="15" fill="rgb(241,91,40)" fg:x="54035105267" fg:w="21912607"/><text x="35.3373%" y="271.50"></text></g><g><title>__mod_zone_page_state (32,820,432 samples, 0.02%)</title><rect x="35.1216%" y="245" width="0.0213%" height="15" fill="rgb(225,3,45)" fg:x="54087928799" fg:w="32820432"/><text x="35.3716%" y="255.50"></text></g><g><title>expand (79,586,519 samples, 0.05%)</title><rect x="35.1057%" y="261" width="0.0517%" height="15" fill="rgb(244,223,14)" fg:x="54063383276" fg:w="79586519"/><text x="35.3557%" y="271.50"></text></g><g><title>get_pfnblock_flags_mask.constprop.0 (38,855,760 samples, 0.03%)</title><rect x="35.1574%" y="261" width="0.0252%" height="15" fill="rgb(224,124,37)" fg:x="54142969795" fg:w="38855760"/><text x="35.4074%" y="271.50"></text></g><g><title>__rmqueue_pcplist (338,368,378 samples, 0.22%)</title><rect x="34.9650%" y="277" width="0.2197%" height="15" fill="rgb(251,171,30)" fg:x="53846680647" fg:w="338368378"/><text x="35.2150%" y="287.50"></text></g><g><title>_raw_spin_trylock (16,561,893 samples, 0.01%)</title><rect x="35.1847%" y="277" width="0.0108%" height="15" fill="rgb(236,46,54)" fg:x="54185049025" fg:w="16561893"/><text x="35.4347%" y="287.50"></text></g><g><title>bad_range (23,188,585 samples, 0.02%)</title><rect x="35.1978%" y="277" width="0.0151%" height="15" fill="rgb(245,213,5)" fg:x="54205246828" fg:w="23188585"/><text x="35.4478%" y="287.50"></text></g><g><title>memchr_inv (520,070,866 samples, 0.34%)</title><rect x="35.2367%" y="261" width="0.3377%" height="15" fill="rgb(230,144,27)" fg:x="54265191402" fg:w="520070866"/><text x="35.4867%" y="271.50"></text></g><g><title>post_alloc_hook (569,363,019 samples, 0.37%)</title><rect x="35.2129%" y="277" width="0.3697%" height="15" fill="rgb(220,86,6)" fg:x="54228435413" fg:w="569363019"/><text x="35.4629%" y="287.50"></text></g><g><title>__alloc_pages_noprof (1,118,309,735 samples, 0.73%)</title><rect x="34.8708%" y="309" width="0.7262%" height="15" fill="rgb(240,20,13)" fg:x="53701667389" fg:w="1118309735"/><text x="35.1208%" y="319.50"></text></g><g><title>get_page_from_freelist (1,035,752,859 samples, 0.67%)</title><rect x="34.9244%" y="293" width="0.6726%" height="15" fill="rgb(217,89,34)" fg:x="53784224265" fg:w="1035752859"/><text x="35.1744%" y="303.50"></text></g><g><title>alloc_pages_mpol_noprof (1,159,087,589 samples, 0.75%)</title><rect x="34.8582%" y="325" width="0.7526%" height="15" fill="rgb(229,13,5)" fg:x="53682204593" fg:w="1159087589"/><text x="35.1082%" y="335.50"></text></g><g><title>policy_nodemask (21,315,058 samples, 0.01%)</title><rect x="35.5970%" y="309" width="0.0138%" height="15" fill="rgb(244,67,35)" fg:x="54819977124" fg:w="21315058"/><text x="35.8470%" y="319.50"></text></g><g><title>__handle_mm_fault (2,583,896,420 samples, 1.68%)</title><rect x="33.9424%" y="357" width="1.6778%" height="15" fill="rgb(221,40,2)" fg:x="52271890580" fg:w="2583896420"/><text x="34.1924%" y="367.50"></text></g><g><title>vma_alloc_folio_noprof (1,186,383,376 samples, 0.77%)</title><rect x="34.8498%" y="341" width="0.7704%" height="15" fill="rgb(237,157,21)" fg:x="53669403624" fg:w="1186383376"/><text x="35.0998%" y="351.50"></text></g><g><title>count_memcg_events.constprop.0 (86,166,552 samples, 0.06%)</title><rect x="35.6202%" y="357" width="0.0560%" height="15" fill="rgb(222,94,11)" fg:x="54855787000" fg:w="86166552"/><text x="35.8702%" y="367.50"></text></g><g><title>__count_memcg_events (67,002,173 samples, 0.04%)</title><rect x="35.6327%" y="341" width="0.0435%" height="15" fill="rgb(249,113,6)" fg:x="54874951379" fg:w="67002173"/><text x="35.8827%" y="351.50"></text></g><g><title>handle_mm_fault (2,707,354,379 samples, 1.76%)</title><rect x="33.9224%" y="373" width="1.7580%" height="15" fill="rgb(238,137,36)" fg:x="52241051838" fg:w="2707354379"/><text x="34.1724%" y="383.50"></text></g><g><title>exc_page_fault (2,827,376,017 samples, 1.84%)</title><rect x="33.8668%" y="405" width="1.8359%" height="15" fill="rgb(210,102,26)" fg:x="52155515876" fg:w="2827376017"/><text x="34.1168%" y="415.50">e..</text></g><g><title>do_user_addr_fault (2,797,300,989 samples, 1.82%)</title><rect x="33.8863%" y="389" width="1.8164%" height="15" fill="rgb(218,30,30)" fg:x="52185590904" fg:w="2797300989"/><text x="34.1363%" y="399.50">d..</text></g><g><title>up_read (27,087,394 samples, 0.02%)</title><rect x="35.6852%" y="373" width="0.0176%" height="15" fill="rgb(214,67,26)" fg:x="54955804499" fg:w="27087394"/><text x="35.9352%" y="383.50"></text></g><g><title>asm_exc_page_fault (2,843,960,583 samples, 1.85%)</title><rect x="33.8668%" y="421" width="1.8467%" height="15" fill="rgb(251,9,53)" fg:x="52155515876" fg:w="2843960583"/><text x="34.1168%" y="431.50">a..</text></g><g><title>entry_SYSCALL_64 (48,803,467 samples, 0.03%)</title><rect x="35.7135%" y="421" width="0.0317%" height="15" fill="rgb(228,204,25)" fg:x="54999476459" fg:w="48803467"/><text x="35.9635%" y="431.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_write (3,663,094,784 samples, 2.38%)</title><rect x="33.3763%" y="453" width="2.3786%" height="15" fill="rgb(207,153,8)" fg:x="51400173046" fg:w="3663094784"/><text x="33.6263%" y="463.50">al..</text></g><g><title>core::ptr::write (3,660,462,519 samples, 2.38%)</title><rect x="33.3780%" y="437" width="2.3769%" height="15" fill="rgb(242,9,16)" fg:x="51402805311" fg:w="3660462519"/><text x="33.6280%" y="447.50">co..</text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::handle_capacity_increase (19,455,917 samples, 0.01%)</title><rect x="35.7549%" y="437" width="0.0126%" height="15" fill="rgb(217,211,10)" fg:x="55063267830" fg:w="19455917"/><text x="36.0049%" y="447.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::copy (19,455,917 samples, 0.01%)</title><rect x="35.7549%" y="421" width="0.0126%" height="15" fill="rgb(219,228,52)" fg:x="55063267830" fg:w="19455917"/><text x="36.0049%" y="431.50"></text></g><g><title>core::intrinsics::copy (19,455,917 samples, 0.01%)</title><rect x="35.7549%" y="405" width="0.0126%" height="15" fill="rgb(231,92,29)" fg:x="55063267830" fg:w="19455917"/><text x="36.0049%" y="415.50"></text></g><g><title>[libc.so.6] (19,455,917 samples, 0.01%)</title><rect x="35.7549%" y="389" width="0.0126%" height="15" fill="rgb(232,8,23)" fg:x="55063267830" fg:w="19455917"/><text x="36.0049%" y="399.50"></text></g><g><title>asm_exc_page_fault (19,455,917 samples, 0.01%)</title><rect x="35.7549%" y="373" width="0.0126%" height="15" fill="rgb(216,211,34)" fg:x="55063267830" fg:w="19455917"/><text x="36.0049%" y="383.50"></text></g><g><title>exc_page_fault (15,422,854 samples, 0.01%)</title><rect x="35.7576%" y="357" width="0.0100%" height="15" fill="rgb(236,151,0)" fg:x="55067300893" fg:w="15422854"/><text x="36.0076%" y="367.50"></text></g><g><title>do_user_addr_fault (15,422,854 samples, 0.01%)</title><rect x="35.7576%" y="341" width="0.0100%" height="15" fill="rgb(209,168,3)" fg:x="55067300893" fg:w="15422854"/><text x="36.0076%" y="351.50"></text></g><g><title>handle_mm_fault (15,422,854 samples, 0.01%)</title><rect x="35.7576%" y="325" width="0.0100%" height="15" fill="rgb(208,129,28)" fg:x="55067300893" fg:w="15422854"/><text x="36.0076%" y="335.50"></text></g><g><title>__handle_mm_fault (15,422,854 samples, 0.01%)</title><rect x="35.7576%" y="309" width="0.0100%" height="15" fill="rgb(229,78,22)" fg:x="55067300893" fg:w="15422854"/><text x="36.0076%" y="319.50"></text></g><g><title>[libc.so.6] (16,438,642 samples, 0.01%)</title><rect x="35.7676%" y="325" width="0.0107%" height="15" fill="rgb(228,187,13)" fg:x="55082723747" fg:w="16438642"/><text x="36.0176%" y="335.50"></text></g><g><title>[libc.so.6] (16,438,642 samples, 0.01%)</title><rect x="35.7676%" y="309" width="0.0107%" height="15" fill="rgb(240,119,24)" fg:x="55082723747" fg:w="16438642"/><text x="36.0176%" y="319.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::grow (36,007,904 samples, 0.02%)</title><rect x="35.7549%" y="453" width="0.0234%" height="15" fill="rgb(209,194,42)" fg:x="55063267830" fg:w="36007904"/><text x="36.0049%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (16,551,987 samples, 0.01%)</title><rect x="35.7676%" y="437" width="0.0107%" height="15" fill="rgb(247,200,46)" fg:x="55082723747" fg:w="16551987"/><text x="36.0176%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (16,551,987 samples, 0.01%)</title><rect x="35.7676%" y="421" width="0.0107%" height="15" fill="rgb(218,76,16)" fg:x="55082723747" fg:w="16551987"/><text x="36.0176%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (16,551,987 samples, 0.01%)</title><rect x="35.7676%" y="405" width="0.0107%" height="15" fill="rgb(225,21,48)" fg:x="55082723747" fg:w="16551987"/><text x="36.0176%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (16,551,987 samples, 0.01%)</title><rect x="35.7676%" y="389" width="0.0107%" height="15" fill="rgb(239,223,50)" fg:x="55082723747" fg:w="16551987"/><text x="36.0176%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (16,551,987 samples, 0.01%)</title><rect x="35.7676%" y="373" width="0.0107%" height="15" fill="rgb(244,45,21)" fg:x="55082723747" fg:w="16551987"/><text x="36.0176%" y="383.50"></text></g><g><title>alloc::alloc::realloc (16,551,987 samples, 0.01%)</title><rect x="35.7676%" y="357" width="0.0107%" height="15" fill="rgb(232,33,43)" fg:x="55082723747" fg:w="16551987"/><text x="36.0176%" y="367.50"></text></g><g><title>realloc (16,551,987 samples, 0.01%)</title><rect x="35.7676%" y="341" width="0.0107%" height="15" fill="rgb(209,8,3)" fg:x="55082723747" fg:w="16551987"/><text x="36.0176%" y="351.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::is_full (192,396,426 samples, 0.12%)</title><rect x="35.7783%" y="453" width="0.1249%" height="15" fill="rgb(214,25,53)" fg:x="55099275734" fg:w="192396426"/><text x="36.0283%" y="463.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back (3,959,048,727 samples, 2.57%)</title><rect x="33.3474%" y="469" width="2.5708%" height="15" fill="rgb(254,186,54)" fg:x="51355544158" fg:w="3959048727"/><text x="33.5974%" y="479.50">al..</text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::to_physical_idx (22,920,725 samples, 0.01%)</title><rect x="35.9033%" y="453" width="0.0149%" height="15" fill="rgb(208,174,49)" fg:x="55291672160" fg:w="22920725"/><text x="36.1533%" y="463.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::wrap_add (22,920,725 samples, 0.01%)</title><rect x="35.9033%" y="437" width="0.0149%" height="15" fill="rgb(233,191,51)" fg:x="55291672160" fg:w="22920725"/><text x="36.1533%" y="447.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (15,746,760 samples, 0.01%)</title><rect x="35.9079%" y="421" width="0.0102%" height="15" fill="rgb(222,134,10)" fg:x="55298846125" fg:w="15746760"/><text x="36.1579%" y="431.50"></text></g><g><title>std::sync::poison::Flag::done (111,099,481 samples, 0.07%)</title><rect x="35.9203%" y="437" width="0.0721%" height="15" fill="rgb(230,226,20)" fg:x="55317974754" fg:w="111099481"/><text x="36.1703%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;alloc::collections::vec_deque::VecDeque&lt;rpq::pq::Item&lt;i32&gt;&gt;&gt;&gt; (1,595,187,521 samples, 1.04%)</title><rect x="35.9203%" y="469" width="1.0358%" height="15" fill="rgb(251,111,25)" fg:x="55317974754" fg:w="1595187521"/><text x="36.1703%" y="479.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,595,187,521 samples, 1.04%)</title><rect x="35.9203%" y="453" width="1.0358%" height="15" fill="rgb(224,40,46)" fg:x="55317974754" fg:w="1595187521"/><text x="36.1703%" y="463.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::write_unlock (1,484,088,040 samples, 0.96%)</title><rect x="35.9925%" y="437" width="0.9637%" height="15" fill="rgb(236,108,47)" fg:x="55429074235" fg:w="1484088040"/><text x="36.2425%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (34,946,972 samples, 0.02%)</title><rect x="36.9335%" y="421" width="0.0227%" height="15" fill="rgb(234,93,0)" fg:x="56878215303" fg:w="34946972"/><text x="37.1835%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_sub (34,946,972 samples, 0.02%)</title><rect x="36.9335%" y="405" width="0.0227%" height="15" fill="rgb(224,213,32)" fg:x="56878215303" fg:w="34946972"/><text x="37.1835%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (35,462,169 samples, 0.02%)</title><rect x="36.9748%" y="373" width="0.0230%" height="15" fill="rgb(251,11,48)" fg:x="56941793303" fg:w="35462169"/><text x="37.2248%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_load (35,462,169 samples, 0.02%)</title><rect x="36.9748%" y="357" width="0.0230%" height="15" fill="rgb(236,173,5)" fg:x="56941793303" fg:w="35462169"/><text x="37.2248%" y="367.50"></text></g><g><title>std::sync::poison::Flag::guard (64,093,546 samples, 0.04%)</title><rect x="36.9562%" y="437" width="0.0416%" height="15" fill="rgb(230,95,12)" fg:x="56913162275" fg:w="64093546"/><text x="37.2062%" y="447.50"></text></g><g><title>std::thread::panicking (49,744,802 samples, 0.03%)</title><rect x="36.9655%" y="421" width="0.0323%" height="15" fill="rgb(232,209,1)" fg:x="56927511019" fg:w="49744802"/><text x="37.2155%" y="431.50"></text></g><g><title>std::panicking::panicking (49,744,802 samples, 0.03%)</title><rect x="36.9655%" y="405" width="0.0323%" height="15" fill="rgb(232,6,1)" fg:x="56927511019" fg:w="49744802"/><text x="37.2155%" y="415.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (49,744,802 samples, 0.03%)</title><rect x="36.9655%" y="389" width="0.0323%" height="15" fill="rgb(210,224,50)" fg:x="56927511019" fg:w="49744802"/><text x="37.2155%" y="399.50"></text></g><g><title>std::sync::rwlock::RwLockWriteGuard&lt;T&gt;::new (71,655,925 samples, 0.05%)</title><rect x="36.9562%" y="453" width="0.0465%" height="15" fill="rgb(228,127,35)" fg:x="56913162275" fg:w="71655925"/><text x="37.2062%" y="463.50"></text></g><g><title>core::ops::function::FnOnce::call_once (56,698,449 samples, 0.04%)</title><rect x="37.6752%" y="389" width="0.0368%" height="15" fill="rgb(245,102,45)" fg:x="58020552730" fg:w="56698449"/><text x="37.9252%" y="399.50"></text></g><g><title>std::sys::pal::unix::os::errno (56,698,449 samples, 0.04%)</title><rect x="37.6752%" y="373" width="0.0368%" height="15" fill="rgb(214,1,49)" fg:x="58020552730" fg:w="56698449"/><text x="37.9252%" y="383.50"></text></g><g><title>syscall (49,989,660 samples, 0.03%)</title><rect x="37.6796%" y="357" width="0.0325%" height="15" fill="rgb(226,163,40)" fg:x="58027261519" fg:w="49989660"/><text x="37.9296%" y="367.50"></text></g><g><title>entry_SYSCALL_64 (49,989,660 samples, 0.03%)</title><rect x="37.6796%" y="341" width="0.0325%" height="15" fill="rgb(239,212,28)" fg:x="58027261519" fg:w="49989660"/><text x="37.9296%" y="351.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (108,970,115 samples, 0.07%)</title><rect x="37.6413%" y="405" width="0.0708%" height="15" fill="rgb(220,20,13)" fg:x="57968281374" fg:w="108970115"/><text x="37.8913%" y="415.50"></text></g><g><title>__futex_queue (17,742,696 samples, 0.01%)</title><rect x="37.8465%" y="277" width="0.0115%" height="15" fill="rgb(210,164,35)" fg:x="58284275666" fg:w="17742696"/><text x="38.0965%" y="287.50"></text></g><g><title>plist_add (17,742,696 samples, 0.01%)</title><rect x="37.8465%" y="261" width="0.0115%" height="15" fill="rgb(248,109,41)" fg:x="58284275666" fg:w="17742696"/><text x="38.0965%" y="271.50"></text></g><g><title>_raw_spin_lock (37,846,752 samples, 0.02%)</title><rect x="38.0286%" y="229" width="0.0246%" height="15" fill="rgb(238,23,50)" fg:x="58564744439" fg:w="37846752"/><text x="38.2786%" y="239.50"></text></g><g><title>__pmu_ctx_sched_out (267,692,966 samples, 0.17%)</title><rect x="38.0693%" y="213" width="0.1738%" height="15" fill="rgb(211,48,49)" fg:x="58627460858" fg:w="267692966"/><text x="38.3193%" y="223.50"></text></g><g><title>group_sched_out (214,573,599 samples, 0.14%)</title><rect x="38.1038%" y="197" width="0.1393%" height="15" fill="rgb(223,36,21)" fg:x="58680580225" fg:w="214573599"/><text x="38.3538%" y="207.50"></text></g><g><title>event_sched_out (190,781,834 samples, 0.12%)</title><rect x="38.1193%" y="181" width="0.1239%" height="15" fill="rgb(207,123,46)" fg:x="58704371990" fg:w="190781834"/><text x="38.3693%" y="191.50"></text></g><g><title>perf_ibs_del (145,075,108 samples, 0.09%)</title><rect x="38.1489%" y="165" width="0.0942%" height="15" fill="rgb(240,218,32)" fg:x="58750078716" fg:w="145075108"/><text x="38.3989%" y="175.50"></text></g><g><title>perf_ibs_stop (117,676,369 samples, 0.08%)</title><rect x="38.1667%" y="149" width="0.0764%" height="15" fill="rgb(252,5,43)" fg:x="58777477455" fg:w="117676369"/><text x="38.4167%" y="159.50"></text></g><g><title>native_read_msr (62,187,963 samples, 0.04%)</title><rect x="38.2028%" y="133" width="0.0404%" height="15" fill="rgb(252,84,19)" fg:x="58832965861" fg:w="62187963"/><text x="38.4528%" y="143.50"></text></g><g><title>local_clock (34,695,864 samples, 0.02%)</title><rect x="38.2460%" y="213" width="0.0225%" height="15" fill="rgb(243,152,39)" fg:x="58899475989" fg:w="34695864"/><text x="38.4960%" y="223.50"></text></g><g><title>local_clock_noinstr (24,490,391 samples, 0.02%)</title><rect x="38.2526%" y="197" width="0.0159%" height="15" fill="rgb(234,160,15)" fg:x="58909681462" fg:w="24490391"/><text x="38.5026%" y="207.50"></text></g><g><title>native_sched_clock (24,490,391 samples, 0.02%)</title><rect x="38.2526%" y="181" width="0.0159%" height="15" fill="rgb(237,34,20)" fg:x="58909681462" fg:w="24490391"/><text x="38.5026%" y="191.50"></text></g><g><title>ctx_sched_out (336,895,203 samples, 0.22%)</title><rect x="38.0532%" y="229" width="0.2188%" height="15" fill="rgb(229,97,13)" fg:x="58602591191" fg:w="336895203"/><text x="38.3032%" y="239.50"></text></g><g><title>perf_ctx_disable (35,196,222 samples, 0.02%)</title><rect x="38.2719%" y="229" width="0.0229%" height="15" fill="rgb(234,71,50)" fg:x="58939486394" fg:w="35196222"/><text x="38.5219%" y="239.50"></text></g><g><title>perf_ctx_sched_task_cb (18,835,466 samples, 0.01%)</title><rect x="38.2948%" y="229" width="0.0122%" height="15" fill="rgb(253,155,4)" fg:x="58974682616" fg:w="18835466"/><text x="38.5448%" y="239.50"></text></g><g><title>__perf_event_task_sched_out (502,487,762 samples, 0.33%)</title><rect x="37.9941%" y="245" width="0.3263%" height="15" fill="rgb(222,185,37)" fg:x="58511643486" fg:w="502487762"/><text x="38.2441%" y="255.50"></text></g><g><title>task_ctx_sched_out (20,613,166 samples, 0.01%)</title><rect x="38.3070%" y="229" width="0.0134%" height="15" fill="rgb(251,177,13)" fg:x="58993518082" fg:w="20613166"/><text x="38.5570%" y="239.50"></text></g><g><title>dequeue_task (20,791,722 samples, 0.01%)</title><rect x="38.3204%" y="245" width="0.0135%" height="15" fill="rgb(250,179,40)" fg:x="59014131248" fg:w="20791722"/><text x="38.5704%" y="255.50"></text></g><g><title>__calc_delta.constprop.0 (56,736,920 samples, 0.04%)</title><rect x="38.5498%" y="213" width="0.0368%" height="15" fill="rgb(242,44,2)" fg:x="59367342190" fg:w="56736920"/><text x="38.7998%" y="223.50"></text></g><g><title>avg_vruntime (40,319,559 samples, 0.03%)</title><rect x="38.5917%" y="213" width="0.0262%" height="15" fill="rgb(216,177,13)" fg:x="59431916692" fg:w="40319559"/><text x="38.8417%" y="223.50"></text></g><g><title>reweight_entity (17,907,292 samples, 0.01%)</title><rect x="38.6179%" y="213" width="0.0116%" height="15" fill="rgb(216,106,43)" fg:x="59472236251" fg:w="17907292"/><text x="38.8679%" y="223.50"></text></g><g><title>srso_alias_return_thunk (17,612,885 samples, 0.01%)</title><rect x="38.6295%" y="213" width="0.0114%" height="15" fill="rgb(216,183,2)" fg:x="59490143543" fg:w="17612885"/><text x="38.8795%" y="223.50"></text></g><g><title>update_cfs_group (187,229,544 samples, 0.12%)</title><rect x="38.6464%" y="213" width="0.1216%" height="15" fill="rgb(249,75,3)" fg:x="59516139565" fg:w="187229544"/><text x="38.8964%" y="223.50"></text></g><g><title>__cgroup_account_cputime (40,878,134 samples, 0.03%)</title><rect x="38.8906%" y="197" width="0.0265%" height="15" fill="rgb(219,67,39)" fg:x="59892233114" fg:w="40878134"/><text x="39.1406%" y="207.50"></text></g><g><title>cpuacct_charge (54,488,013 samples, 0.04%)</title><rect x="38.9171%" y="197" width="0.0354%" height="15" fill="rgb(253,228,2)" fg:x="59933111248" fg:w="54488013"/><text x="39.1671%" y="207.50"></text></g><g><title>update_curr (355,162,394 samples, 0.23%)</title><rect x="38.7680%" y="213" width="0.2306%" height="15" fill="rgb(235,138,27)" fg:x="59703369109" fg:w="355162394"/><text x="39.0180%" y="223.50"></text></g><g><title>update_min_vruntime (55,201,437 samples, 0.04%)</title><rect x="38.9627%" y="197" width="0.0358%" height="15" fill="rgb(236,97,51)" fg:x="60003330066" fg:w="55201437"/><text x="39.2127%" y="207.50"></text></g><g><title>__update_load_avg_cfs_rq (107,359,340 samples, 0.07%)</title><rect x="39.1584%" y="197" width="0.0697%" height="15" fill="rgb(240,80,30)" fg:x="60304606376" fg:w="107359340"/><text x="39.4084%" y="207.50"></text></g><g><title>__update_load_avg_se (47,607,555 samples, 0.03%)</title><rect x="39.2281%" y="197" width="0.0309%" height="15" fill="rgb(230,178,19)" fg:x="60411965716" fg:w="47607555"/><text x="39.4781%" y="207.50"></text></g><g><title>update_load_avg (418,567,819 samples, 0.27%)</title><rect x="38.9986%" y="213" width="0.2718%" height="15" fill="rgb(210,190,27)" fg:x="60058531503" fg:w="418567819"/><text x="39.2486%" y="223.50"></text></g><g><title>dequeue_entity (1,313,493,277 samples, 0.85%)</title><rect x="38.4251%" y="229" width="0.8529%" height="15" fill="rgb(222,107,31)" fg:x="59175341567" fg:w="1313493277"/><text x="38.6751%" y="239.50"></text></g><g><title>reweight_entity (22,944,243 samples, 0.01%)</title><rect x="39.2780%" y="229" width="0.0149%" height="15" fill="rgb(216,127,34)" fg:x="60488834844" fg:w="22944243"/><text x="39.5280%" y="239.50"></text></g><g><title>dequeue_task_fair (1,499,860,163 samples, 0.97%)</title><rect x="38.3339%" y="245" width="0.9739%" height="15" fill="rgb(234,116,52)" fg:x="59034922970" fg:w="1499860163"/><text x="38.5839%" y="255.50"></text></g><g><title>asm_sysvec_call_function_single (25,531,999 samples, 0.02%)</title><rect x="39.3252%" y="229" width="0.0166%" height="15" fill="rgb(222,124,15)" fg:x="60561540874" fg:w="25531999"/><text x="39.5752%" y="239.50"></text></g><g><title>sysvec_call_function_single (25,531,999 samples, 0.02%)</title><rect x="39.3252%" y="213" width="0.0166%" height="15" fill="rgb(231,179,28)" fg:x="60561540874" fg:w="25531999"/><text x="39.5752%" y="223.50"></text></g><g><title>__sysvec_call_function_single (25,531,999 samples, 0.02%)</title><rect x="39.3252%" y="197" width="0.0166%" height="15" fill="rgb(226,93,45)" fg:x="60561540874" fg:w="25531999"/><text x="39.5752%" y="207.50"></text></g><g><title>__flush_smp_call_function_queue (25,531,999 samples, 0.02%)</title><rect x="39.3252%" y="181" width="0.0166%" height="15" fill="rgb(215,8,51)" fg:x="60561540874" fg:w="25531999"/><text x="39.5752%" y="191.50"></text></g><g><title>sched_ttwu_pending (21,683,538 samples, 0.01%)</title><rect x="39.3277%" y="165" width="0.0141%" height="15" fill="rgb(223,106,5)" fg:x="60565389335" fg:w="21683538"/><text x="39.5777%" y="175.50"></text></g><g><title>ttwu_do_activate (21,683,538 samples, 0.01%)</title><rect x="39.3277%" y="149" width="0.0141%" height="15" fill="rgb(250,191,5)" fg:x="60565389335" fg:w="21683538"/><text x="39.5777%" y="159.50"></text></g><g><title>enqueue_task (21,683,538 samples, 0.01%)</title><rect x="39.3277%" y="133" width="0.0141%" height="15" fill="rgb(242,132,44)" fg:x="60565389335" fg:w="21683538"/><text x="39.5777%" y="143.50"></text></g><g><title>enqueue_task_fair (21,683,538 samples, 0.01%)</title><rect x="39.3277%" y="117" width="0.0141%" height="15" fill="rgb(251,152,29)" fg:x="60565389335" fg:w="21683538"/><text x="39.5777%" y="127.50"></text></g><g><title>finish_task_switch.isra.0 (52,290,015 samples, 0.03%)</title><rect x="39.3078%" y="245" width="0.0340%" height="15" fill="rgb(218,179,5)" fg:x="60534783133" fg:w="52290015"/><text x="39.5578%" y="255.50"></text></g><g><title>enqueue_task_fair (34,338,300 samples, 0.02%)</title><rect x="39.5469%" y="165" width="0.0223%" height="15" fill="rgb(227,67,19)" fg:x="60902947148" fg:w="34338300"/><text x="39.7969%" y="175.50"></text></g><g><title>enqueue_entity (34,338,300 samples, 0.02%)</title><rect x="39.5469%" y="149" width="0.0223%" height="15" fill="rgb(233,119,31)" fg:x="60902947148" fg:w="34338300"/><text x="39.7969%" y="159.50"></text></g><g><title>update_load_avg (19,321,191 samples, 0.01%)</title><rect x="39.5566%" y="133" width="0.0125%" height="15" fill="rgb(241,120,22)" fg:x="60917964257" fg:w="19321191"/><text x="39.8066%" y="143.50"></text></g><g><title>activate_task (39,912,186 samples, 0.03%)</title><rect x="39.5469%" y="197" width="0.0259%" height="15" fill="rgb(224,102,30)" fg:x="60902947148" fg:w="39912186"/><text x="39.7969%" y="207.50"></text></g><g><title>enqueue_task (39,912,186 samples, 0.03%)</title><rect x="39.5469%" y="181" width="0.0259%" height="15" fill="rgb(210,164,37)" fg:x="60902947148" fg:w="39912186"/><text x="39.7969%" y="191.50"></text></g><g><title>dequeue_task_fair (65,942,497 samples, 0.04%)</title><rect x="39.5801%" y="197" width="0.0428%" height="15" fill="rgb(226,191,16)" fg:x="60954071818" fg:w="65942497"/><text x="39.8301%" y="207.50"></text></g><g><title>update_load_avg (27,698,522 samples, 0.02%)</title><rect x="39.6049%" y="181" width="0.0180%" height="15" fill="rgb(214,40,45)" fg:x="60992315793" fg:w="27698522"/><text x="39.8549%" y="191.50"></text></g><g><title>cpu_util (33,069,481 samples, 0.02%)</title><rect x="39.8074%" y="165" width="0.0215%" height="15" fill="rgb(244,29,26)" fg:x="61304108488" fg:w="33069481"/><text x="40.0574%" y="175.50"></text></g><g><title>idle_cpu (55,453,505 samples, 0.04%)</title><rect x="39.8289%" y="165" width="0.0360%" height="15" fill="rgb(216,16,5)" fg:x="61337177969" fg:w="55453505"/><text x="40.0789%" y="175.50"></text></g><g><title>sched_balance_find_src_group (376,443,542 samples, 0.24%)</title><rect x="39.6257%" y="197" width="0.2444%" height="15" fill="rgb(249,76,35)" fg:x="61024265929" fg:w="376443542"/><text x="39.8757%" y="207.50"></text></g><g><title>update_sd_lb_stats.constprop.0 (355,042,208 samples, 0.23%)</title><rect x="39.6396%" y="181" width="0.2305%" height="15" fill="rgb(207,11,44)" fg:x="61045667263" fg:w="355042208"/><text x="39.8896%" y="191.50"></text></g><g><title>sched_use_asym_prio (17,328,278 samples, 0.01%)</title><rect x="39.8701%" y="197" width="0.0113%" height="15" fill="rgb(228,190,49)" fg:x="61400709471" fg:w="17328278"/><text x="40.1201%" y="207.50"></text></g><g><title>sched_balance_rq (629,181,998 samples, 0.41%)</title><rect x="39.4771%" y="213" width="0.4086%" height="15" fill="rgb(214,173,12)" fg:x="60795425473" fg:w="629181998"/><text x="39.7271%" y="223.50"></text></g><g><title>__update_load_avg_cfs_rq (33,848,821 samples, 0.02%)</title><rect x="39.9816%" y="197" width="0.0220%" height="15" fill="rgb(218,26,35)" fg:x="61572335157" fg:w="33848821"/><text x="40.2316%" y="207.50"></text></g><g><title>sched_clock_cpu (15,603,750 samples, 0.01%)</title><rect x="40.0131%" y="197" width="0.0101%" height="15" fill="rgb(220,200,19)" fg:x="61620873255" fg:w="15603750"/><text x="40.2631%" y="207.50"></text></g><g><title>update_load_avg (69,865,954 samples, 0.05%)</title><rect x="40.0440%" y="197" width="0.0454%" height="15" fill="rgb(239,95,49)" fg:x="61668492277" fg:w="69865954"/><text x="40.2940%" y="207.50"></text></g><g><title>sched_balance_update_blocked_averages (333,060,203 samples, 0.22%)</title><rect x="39.8856%" y="213" width="0.2163%" height="15" fill="rgb(235,85,53)" fg:x="61424607471" fg:w="333060203"/><text x="40.1356%" y="223.50"></text></g><g><title>update_rq_clock (19,309,443 samples, 0.01%)</title><rect x="40.0894%" y="197" width="0.0125%" height="15" fill="rgb(233,133,31)" fg:x="61738358231" fg:w="19309443"/><text x="40.3394%" y="207.50"></text></g><g><title>sched_balance_newidle (1,153,775,769 samples, 0.75%)</title><rect x="39.3672%" y="229" width="0.7492%" height="15" fill="rgb(218,25,20)" fg:x="60626201772" fg:w="1153775769"/><text x="39.6172%" y="239.50"></text></g><g><title>sched_clock_cpu (22,309,867 samples, 0.01%)</title><rect x="40.1019%" y="213" width="0.0145%" height="15" fill="rgb(252,210,38)" fg:x="61757667674" fg:w="22309867"/><text x="40.3519%" y="223.50"></text></g><g><title>pick_next_task_fair (1,215,626,576 samples, 0.79%)</title><rect x="39.3418%" y="245" width="0.7894%" height="15" fill="rgb(242,134,21)" fg:x="60587073148" fg:w="1215626576"/><text x="39.5918%" y="255.50"></text></g><g><title>pick_next_task_idle (105,933,907 samples, 0.07%)</title><rect x="40.1311%" y="245" width="0.0688%" height="15" fill="rgb(213,28,48)" fg:x="61802699724" fg:w="105933907"/><text x="40.3811%" y="255.50"></text></g><g><title>__update_idle_core (93,819,161 samples, 0.06%)</title><rect x="40.1390%" y="229" width="0.0609%" height="15" fill="rgb(250,196,2)" fg:x="61814814470" fg:w="93819161"/><text x="40.3890%" y="239.50"></text></g><g><title>record_times (15,973,910 samples, 0.01%)</title><rect x="40.2839%" y="229" width="0.0104%" height="15" fill="rgb(227,5,17)" fg:x="62037953990" fg:w="15973910"/><text x="40.5339%" y="239.50"></text></g><g><title>psi_account_irqtime (148,427,168 samples, 0.10%)</title><rect x="40.1999%" y="245" width="0.0964%" height="15" fill="rgb(221,226,24)" fg:x="61908633631" fg:w="148427168"/><text x="40.4499%" y="255.50"></text></g><g><title>record_times (16,974,762 samples, 0.01%)</title><rect x="40.5420%" y="213" width="0.0110%" height="15" fill="rgb(211,5,48)" fg:x="62435408545" fg:w="16974762"/><text x="40.7920%" y="223.50"></text></g><g><title>psi_group_change (290,268,989 samples, 0.19%)</title><rect x="40.3694%" y="229" width="0.1885%" height="15" fill="rgb(219,150,6)" fg:x="62169674151" fg:w="290268989"/><text x="40.6194%" y="239.50"></text></g><g><title>sched_clock_cpu (42,502,514 samples, 0.03%)</title><rect x="40.5579%" y="229" width="0.0276%" height="15" fill="rgb(251,46,16)" fg:x="62459943140" fg:w="42502514"/><text x="40.8079%" y="239.50"></text></g><g><title>sched_clock (42,502,514 samples, 0.03%)</title><rect x="40.5579%" y="213" width="0.0276%" height="15" fill="rgb(220,204,40)" fg:x="62459943140" fg:w="42502514"/><text x="40.8079%" y="223.50"></text></g><g><title>native_sched_clock (38,402,047 samples, 0.02%)</title><rect x="40.5606%" y="197" width="0.0249%" height="15" fill="rgb(211,85,2)" fg:x="62464043607" fg:w="38402047"/><text x="40.8106%" y="207.50"></text></g><g><title>psi_task_switch (454,186,872 samples, 0.29%)</title><rect x="40.2963%" y="245" width="0.2949%" height="15" fill="rgb(229,17,7)" fg:x="62057060799" fg:w="454186872"/><text x="40.5463%" y="255.50"></text></g><g><title>put_prev_entity (37,748,581 samples, 0.02%)</title><rect x="40.6197%" y="229" width="0.0245%" height="15" fill="rgb(239,72,28)" fg:x="62555005607" fg:w="37748581"/><text x="40.8697%" y="239.50"></text></g><g><title>put_prev_task_fair (94,013,878 samples, 0.06%)</title><rect x="40.5912%" y="245" width="0.0610%" height="15" fill="rgb(230,47,54)" fg:x="62511247671" fg:w="94013878"/><text x="40.8412%" y="255.50"></text></g><g><title>raw_spin_rq_lock_nested (50,358,402 samples, 0.03%)</title><rect x="40.6523%" y="245" width="0.0327%" height="15" fill="rgb(214,50,8)" fg:x="62605261549" fg:w="50358402"/><text x="40.9023%" y="255.50"></text></g><g><title>_raw_spin_lock (43,535,115 samples, 0.03%)</title><rect x="40.6567%" y="229" width="0.0283%" height="15" fill="rgb(216,198,43)" fg:x="62612084836" fg:w="43535115"/><text x="40.9067%" y="239.50"></text></g><g><title>__schedule (4,439,619,842 samples, 2.88%)</title><rect x="37.8608%" y="261" width="2.8828%" height="15" fill="rgb(234,20,35)" fg:x="58306324963" fg:w="4439619842"/><text x="38.1108%" y="271.50">__..</text></g><g><title>update_rq_clock (55,796,881 samples, 0.04%)</title><rect x="40.7074%" y="245" width="0.0362%" height="15" fill="rgb(254,45,19)" fg:x="62690147924" fg:w="55796881"/><text x="40.9574%" y="255.50"></text></g><g><title>update_irq_load_avg (21,768,100 samples, 0.01%)</title><rect x="40.7295%" y="229" width="0.0141%" height="15" fill="rgb(219,14,44)" fg:x="62724176705" fg:w="21768100"/><text x="40.9795%" y="239.50"></text></g><g><title>futex_wait_queue (4,461,818,420 samples, 2.90%)</title><rect x="37.8465%" y="293" width="2.8973%" height="15" fill="rgb(217,220,26)" fg:x="58284275666" fg:w="4461818420"/><text x="38.0965%" y="303.50">fu..</text></g><g><title>schedule (4,444,075,724 samples, 2.89%)</title><rect x="37.8580%" y="277" width="2.8857%" height="15" fill="rgb(213,158,28)" fg:x="58302018362" fg:w="4444075724"/><text x="38.1080%" y="287.50">sc..</text></g><g><title>futex_get_value_locked (22,681,785 samples, 0.01%)</title><rect x="40.7465%" y="277" width="0.0147%" height="15" fill="rgb(252,51,52)" fg:x="62750362698" fg:w="22681785"/><text x="40.9965%" y="287.50"></text></g><g><title>_raw_spin_lock (127,104,099 samples, 0.08%)</title><rect x="40.7662%" y="261" width="0.0825%" height="15" fill="rgb(246,89,16)" fg:x="62780721364" fg:w="127104099"/><text x="41.0162%" y="271.50"></text></g><g><title>native_queued_spin_lock_slowpath (123,395,040 samples, 0.08%)</title><rect x="40.7686%" y="245" width="0.0801%" height="15" fill="rgb(216,158,49)" fg:x="62784430423" fg:w="123395040"/><text x="41.0186%" y="255.50"></text></g><g><title>futex_q_lock (140,709,386 samples, 0.09%)</title><rect x="40.7612%" y="277" width="0.0914%" height="15" fill="rgb(236,107,19)" fg:x="62773044483" fg:w="140709386"/><text x="41.0112%" y="287.50"></text></g><g><title>futex_q_unlock (22,001,089 samples, 0.01%)</title><rect x="40.8526%" y="277" width="0.0143%" height="15" fill="rgb(228,185,30)" fg:x="62913753869" fg:w="22001089"/><text x="41.1026%" y="287.50"></text></g><g><title>do_futex (4,668,436,072 samples, 3.03%)</title><rect x="37.8385%" y="341" width="3.0314%" height="15" fill="rgb(246,134,8)" fg:x="58271942414" fg:w="4668436072"/><text x="38.0885%" y="351.50">do_..</text></g><g><title>futex_wait (4,668,436,072 samples, 3.03%)</title><rect x="37.8385%" y="325" width="3.0314%" height="15" fill="rgb(214,143,50)" fg:x="58271942414" fg:w="4668436072"/><text x="38.0885%" y="335.50">fut..</text></g><g><title>__futex_wait (4,668,435,716 samples, 3.03%)</title><rect x="37.8385%" y="309" width="3.0314%" height="15" fill="rgb(228,75,8)" fg:x="58271942770" fg:w="4668435716"/><text x="38.0885%" y="319.50">__f..</text></g><g><title>futex_wait_setup (194,284,400 samples, 0.13%)</title><rect x="40.7437%" y="293" width="0.1262%" height="15" fill="rgb(207,175,4)" fg:x="62746094086" fg:w="194284400"/><text x="40.9937%" y="303.50"></text></g><g><title>__x64_sys_futex (4,672,106,570 samples, 3.03%)</title><rect x="37.8385%" y="357" width="3.0338%" height="15" fill="rgb(205,108,24)" fg:x="58271942039" fg:w="4672106570"/><text x="38.0885%" y="367.50">__x..</text></g><g><title>__get_user_8 (19,382,677 samples, 0.01%)</title><rect x="40.9127%" y="325" width="0.0126%" height="15" fill="rgb(244,120,49)" fg:x="63006239767" fg:w="19382677"/><text x="41.1627%" y="335.50"></text></g><g><title>__rseq_handle_notify_resume (37,292,264 samples, 0.02%)</title><rect x="40.9010%" y="341" width="0.0242%" height="15" fill="rgb(223,47,38)" fg:x="62988331683" fg:w="37292264"/><text x="41.1510%" y="351.50"></text></g><g><title>switch_fpu_return (34,623,418 samples, 0.02%)</title><rect x="40.9298%" y="341" width="0.0225%" height="15" fill="rgb(229,179,11)" fg:x="63032659573" fg:w="34623418"/><text x="41.1798%" y="351.50"></text></g><g><title>do_syscall_64 (4,831,154,830 samples, 3.14%)</title><rect x="37.8180%" y="373" width="3.1371%" height="15" fill="rgb(231,122,1)" fg:x="58240376130" fg:w="4831154830"/><text x="38.0680%" y="383.50">do_..</text></g><g><title>syscall_exit_to_user_mode (127,482,351 samples, 0.08%)</title><rect x="40.8723%" y="357" width="0.0828%" height="15" fill="rgb(245,119,9)" fg:x="62944048609" fg:w="127482351"/><text x="41.1223%" y="367.50"></text></g><g><title>entry_SYSCALL_64 (4,928,531,261 samples, 3.20%)</title><rect x="37.7596%" y="389" width="3.2003%" height="15" fill="rgb(241,163,25)" fg:x="58150417545" fg:w="4928531261"/><text x="38.0096%" y="399.50">ent..</text></g><g><title>std::sys::pal::unix::futex::futex_wait (5,527,124,331 samples, 3.59%)</title><rect x="37.6280%" y="421" width="3.5890%" height="15" fill="rgb(217,214,3)" fg:x="57947769341" fg:w="5527124331"/><text x="37.8780%" y="431.50">std:..</text></g><g><title>syscall (5,393,855,445 samples, 3.50%)</title><rect x="37.7145%" y="405" width="3.5025%" height="15" fill="rgb(240,86,28)" fg:x="58081038227" fg:w="5393855445"/><text x="37.9645%" y="415.50">sys..</text></g><g><title>syscall_return_via_sysret (392,100,249 samples, 0.25%)</title><rect x="40.9624%" y="389" width="0.2546%" height="15" fill="rgb(215,47,9)" fg:x="63082793423" fg:w="392100249"/><text x="41.2124%" y="399.50"></text></g><g><title>stackleak_erase (265,779,240 samples, 0.17%)</title><rect x="41.0444%" y="373" width="0.1726%" height="15" fill="rgb(252,25,45)" fg:x="63209114432" fg:w="265779240"/><text x="41.2944%" y="383.50"></text></g><g><title>core::hint::spin_loop (47,376,350 samples, 0.03%)</title><rect x="41.6655%" y="389" width="0.0308%" height="15" fill="rgb(251,164,9)" fg:x="64165691336" fg:w="47376350"/><text x="41.9155%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (47,376,350 samples, 0.03%)</title><rect x="41.6655%" y="373" width="0.0308%" height="15" fill="rgb(233,194,0)" fg:x="64165691336" fg:w="47376350"/><text x="41.9155%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (190,388,752 samples, 0.12%)</title><rect x="41.6963%" y="389" width="0.1236%" height="15" fill="rgb(249,111,24)" fg:x="64213067686" fg:w="190388752"/><text x="41.9463%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_load (190,388,752 samples, 0.12%)</title><rect x="41.6963%" y="373" width="0.1236%" height="15" fill="rgb(250,223,3)" fg:x="64213067686" fg:w="190388752"/><text x="41.9463%" y="383.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (7,989,681,144 samples, 5.19%)</title><rect x="36.9562%" y="469" width="5.1880%" height="15" fill="rgb(236,178,37)" fg:x="56913162275" fg:w="7989681144"/><text x="37.2062%" y="479.50">std::s..</text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::write (7,918,025,219 samples, 5.14%)</title><rect x="37.0027%" y="453" width="5.1415%" height="15" fill="rgb(241,158,50)" fg:x="56984818200" fg:w="7918025219"/><text x="37.2527%" y="463.50">std::s..</text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::write_contended (7,078,354,886 samples, 4.60%)</title><rect x="37.5479%" y="437" width="4.5963%" height="15" fill="rgb(213,121,41)" fg:x="57824488533" fg:w="7078354886"/><text x="37.7979%" y="447.50">std::..</text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_write (1,427,949,747 samples, 0.93%)</title><rect x="41.2170%" y="421" width="0.9272%" height="15" fill="rgb(240,92,3)" fg:x="63474893672" fg:w="1427949747"/><text x="41.4670%" y="431.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_until (1,427,949,747 samples, 0.93%)</title><rect x="41.2170%" y="405" width="0.9272%" height="15" fill="rgb(205,123,3)" fg:x="63474893672" fg:w="1427949747"/><text x="41.4670%" y="415.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_write::_{{closure}} (499,386,981 samples, 0.32%)</title><rect x="41.8199%" y="389" width="0.3243%" height="15" fill="rgb(205,97,47)" fg:x="64403456438" fg:w="499386981"/><text x="42.0699%" y="399.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::is_unlocked (20,272,379 samples, 0.01%)</title><rect x="42.1310%" y="373" width="0.0132%" height="15" fill="rgb(247,152,14)" fg:x="64882571040" fg:w="20272379"/><text x="42.3810%" y="383.50"></text></g><g><title>&lt;std::sys::pal::unix::time::Timespec as core::convert::From&lt;libc::unix::timespec&gt;&gt;::from (41,874,857 samples, 0.03%)</title><rect x="42.1471%" y="453" width="0.0272%" height="15" fill="rgb(248,195,53)" fg:x="64907289644" fg:w="41874857"/><text x="42.3971%" y="463.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::new (41,874,857 samples, 0.03%)</title><rect x="42.1471%" y="437" width="0.0272%" height="15" fill="rgb(226,201,16)" fg:x="64907289644" fg:w="41874857"/><text x="42.3971%" y="447.50"></text></g><g><title>__vdso_clock_gettime (483,124,994 samples, 0.31%)</title><rect x="42.1867%" y="437" width="0.3137%" height="15" fill="rgb(205,98,0)" fg:x="64968359545" fg:w="483124994"/><text x="42.4367%" y="447.50"></text></g><g><title>clock_gettime (506,122,655 samples, 0.33%)</title><rect x="42.1743%" y="453" width="0.3286%" height="15" fill="rgb(214,191,48)" fg:x="64949164501" fg:w="506122655"/><text x="42.4243%" y="463.50"></text></g><g><title>getrandom::imp::getrandom_inner (59,552,171 samples, 0.04%)</title><rect x="42.5029%" y="453" width="0.0387%" height="15" fill="rgb(237,112,39)" fg:x="65455287156" fg:w="59552171"/><text x="42.7529%" y="463.50"></text></g><g><title>getrandom::util_libc::sys_fill_exact (59,552,171 samples, 0.04%)</title><rect x="42.5029%" y="437" width="0.0387%" height="15" fill="rgb(247,203,27)" fg:x="65455287156" fg:w="59552171"/><text x="42.7529%" y="447.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (611,962,701 samples, 0.40%)</title><rect x="42.1471%" y="469" width="0.3974%" height="15" fill="rgb(235,124,28)" fg:x="64907289644" fg:w="611962701"/><text x="42.3971%" y="479.50"></text></g><g><title>rpq::pq::PriorityQueue&lt;T&gt;::enqueue (14,564,781,218 samples, 9.46%)</title><rect x="33.1226%" y="485" width="9.4575%" height="15" fill="rgb(208,207,46)" fg:x="51009402381" fg:w="14564781218"/><text x="33.3726%" y="495.50">rpq::pq::Prior..</text></g><g><title>uuid::v4::&lt;impl uuid::Uuid&gt;::new_v4 (46,740,520 samples, 0.03%)</title><rect x="42.5498%" y="469" width="0.0304%" height="15" fill="rgb(234,176,4)" fg:x="65527443079" fg:w="46740520"/><text x="42.7998%" y="479.50"></text></g><g><title>uuid::rng::u128 (34,888,902 samples, 0.02%)</title><rect x="42.5575%" y="453" width="0.0227%" height="15" fill="rgb(230,133,28)" fg:x="65539294697" fg:w="34888902"/><text x="42.8075%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (31,234,306 samples, 0.02%)</title><rect x="42.5599%" y="437" width="0.0203%" height="15" fill="rgb(211,137,40)" fg:x="65542949293" fg:w="31234306"/><text x="42.8099%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (43,202,632 samples, 0.03%)</title><rect x="42.8743%" y="341" width="0.0281%" height="15" fill="rgb(254,35,13)" fg:x="66027157906" fg:w="43202632"/><text x="43.1243%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (107,581,625 samples, 0.07%)</title><rect x="42.8383%" y="357" width="0.0699%" height="15" fill="rgb(225,49,51)" fg:x="65971700322" fg:w="107581625"/><text x="43.0883%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (259,135,884 samples, 0.17%)</title><rect x="43.0260%" y="341" width="0.1683%" height="15" fill="rgb(251,10,15)" fg:x="66260821246" fg:w="259135884"/><text x="43.2760%" y="351.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (712,801,279 samples, 0.46%)</title><rect x="42.8115%" y="405" width="0.4629%" height="15" fill="rgb(228,207,15)" fg:x="65930439084" fg:w="712801279"/><text x="43.0615%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (712,801,279 samples, 0.46%)</title><rect x="42.8115%" y="389" width="0.4629%" height="15" fill="rgb(241,99,19)" fg:x="65930439084" fg:w="712801279"/><text x="43.0615%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (712,801,279 samples, 0.46%)</title><rect x="42.8115%" y="373" width="0.4629%" height="15" fill="rgb(207,104,49)" fg:x="65930439084" fg:w="712801279"/><text x="43.0615%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (563,958,416 samples, 0.37%)</title><rect x="42.9081%" y="357" width="0.3662%" height="15" fill="rgb(234,99,18)" fg:x="66079281947" fg:w="563958416"/><text x="43.1581%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (123,283,233 samples, 0.08%)</title><rect x="43.1943%" y="341" width="0.0801%" height="15" fill="rgb(213,191,49)" fg:x="66519957130" fg:w="123283233"/><text x="43.4443%" y="351.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (26,428,740 samples, 0.02%)</title><rect x="43.2743%" y="405" width="0.0172%" height="15" fill="rgb(210,226,19)" fg:x="66643240363" fg:w="26428740"/><text x="43.5243%" y="415.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (26,428,740 samples, 0.02%)</title><rect x="43.2743%" y="389" width="0.0172%" height="15" fill="rgb(229,97,18)" fg:x="66643240363" fg:w="26428740"/><text x="43.5243%" y="399.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (26,428,740 samples, 0.02%)</title><rect x="43.2743%" y="373" width="0.0172%" height="15" fill="rgb(211,167,15)" fg:x="66643240363" fg:w="26428740"/><text x="43.5243%" y="383.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (26,428,740 samples, 0.02%)</title><rect x="43.2743%" y="357" width="0.0172%" height="15" fill="rgb(210,169,34)" fg:x="66643240363" fg:w="26428740"/><text x="43.5243%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (821,199,425 samples, 0.53%)</title><rect x="42.8069%" y="437" width="0.5332%" height="15" fill="rgb(241,121,31)" fg:x="65923333966" fg:w="821199425"/><text x="43.0569%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (821,199,425 samples, 0.53%)</title><rect x="42.8069%" y="421" width="0.5332%" height="15" fill="rgb(232,40,11)" fg:x="65923333966" fg:w="821199425"/><text x="43.0569%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (74,864,288 samples, 0.05%)</title><rect x="43.2915%" y="405" width="0.0486%" height="15" fill="rgb(205,86,26)" fg:x="66669669103" fg:w="74864288"/><text x="43.5415%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (71,293,555 samples, 0.05%)</title><rect x="43.2938%" y="389" width="0.0463%" height="15" fill="rgb(231,126,28)" fg:x="66673239836" fg:w="71293555"/><text x="43.5438%" y="399.50"></text></g><g><title>core::hash::Hasher::write_u64 (71,293,555 samples, 0.05%)</title><rect x="43.2938%" y="373" width="0.0463%" height="15" fill="rgb(219,221,18)" fg:x="66673239836" fg:w="71293555"/><text x="43.5438%" y="383.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (71,293,555 samples, 0.05%)</title><rect x="43.2938%" y="357" width="0.0463%" height="15" fill="rgb(211,40,0)" fg:x="66673239836" fg:w="71293555"/><text x="43.5438%" y="367.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (71,293,555 samples, 0.05%)</title><rect x="43.2938%" y="341" width="0.0463%" height="15" fill="rgb(239,85,43)" fg:x="66673239836" fg:w="71293555"/><text x="43.5438%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (71,293,555 samples, 0.05%)</title><rect x="43.2938%" y="325" width="0.0463%" height="15" fill="rgb(231,55,21)" fg:x="66673239836" fg:w="71293555"/><text x="43.5438%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (52,775,522 samples, 0.03%)</title><rect x="43.3058%" y="309" width="0.0343%" height="15" fill="rgb(225,184,43)" fg:x="66691757869" fg:w="52775522"/><text x="43.5558%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (20,387,931 samples, 0.01%)</title><rect x="43.3269%" y="293" width="0.0132%" height="15" fill="rgb(251,158,41)" fg:x="66724145460" fg:w="20387931"/><text x="43.5769%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (99,346,150 samples, 0.06%)</title><rect x="44.3181%" y="389" width="0.0645%" height="15" fill="rgb(234,159,37)" fg:x="68250679452" fg:w="99346150"/><text x="44.5681%" y="399.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (30,275,372 samples, 0.02%)</title><rect x="44.3629%" y="373" width="0.0197%" height="15" fill="rgb(216,204,22)" fg:x="68319750230" fg:w="30275372"/><text x="44.6129%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (90,998,768 samples, 0.06%)</title><rect x="44.3876%" y="373" width="0.0591%" height="15" fill="rgb(214,17,3)" fg:x="68357724612" fg:w="90998768"/><text x="44.6376%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (90,998,768 samples, 0.06%)</title><rect x="44.3876%" y="357" width="0.0591%" height="15" fill="rgb(212,111,17)" fg:x="68357724612" fg:w="90998768"/><text x="44.6376%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (90,998,768 samples, 0.06%)</title><rect x="44.3876%" y="341" width="0.0591%" height="15" fill="rgb(221,157,24)" fg:x="68357724612" fg:w="90998768"/><text x="44.6376%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (90,998,768 samples, 0.06%)</title><rect x="44.3876%" y="325" width="0.0591%" height="15" fill="rgb(252,16,13)" fg:x="68357724612" fg:w="90998768"/><text x="44.6376%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (159,101,077 samples, 0.10%)</title><rect x="44.3876%" y="389" width="0.1033%" height="15" fill="rgb(221,62,2)" fg:x="68357724612" fg:w="159101077"/><text x="44.6376%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (68,102,309 samples, 0.04%)</title><rect x="44.4467%" y="373" width="0.0442%" height="15" fill="rgb(247,87,22)" fg:x="68448723380" fg:w="68102309"/><text x="44.6967%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (68,102,309 samples, 0.04%)</title><rect x="44.4467%" y="357" width="0.0442%" height="15" fill="rgb(215,73,9)" fg:x="68448723380" fg:w="68102309"/><text x="44.6967%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (68,102,309 samples, 0.04%)</title><rect x="44.4467%" y="341" width="0.0442%" height="15" fill="rgb(207,175,33)" fg:x="68448723380" fg:w="68102309"/><text x="44.6967%" y="351.50"></text></g><g><title>hashbrown::raw::h2 (174,722,622 samples, 0.11%)</title><rect x="44.4909%" y="389" width="0.1135%" height="15" fill="rgb(243,129,54)" fg:x="68516825689" fg:w="174722622"/><text x="44.7409%" y="399.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3,125,658,748 samples, 2.03%)</title><rect x="42.5801%" y="485" width="2.0296%" height="15" fill="rgb(227,119,45)" fg:x="65574183599" fg:w="3125658748"/><text x="42.8301%" y="495.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3,125,658,748 samples, 2.03%)</title><rect x="42.5801%" y="469" width="2.0296%" height="15" fill="rgb(205,109,36)" fg:x="65574183599" fg:w="3125658748"/><text x="42.8301%" y="479.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3,125,658,748 samples, 2.03%)</title><rect x="42.5801%" y="453" width="2.0296%" height="15" fill="rgb(205,6,39)" fg:x="65574183599" fg:w="3125658748"/><text x="42.8301%" y="463.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,955,308,956 samples, 1.27%)</title><rect x="43.3401%" y="437" width="1.2697%" height="15" fill="rgb(221,32,16)" fg:x="66744533391" fg:w="1955308956"/><text x="43.5901%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,955,308,956 samples, 1.27%)</title><rect x="43.3401%" y="421" width="1.2697%" height="15" fill="rgb(228,144,50)" fg:x="66744533391" fg:w="1955308956"/><text x="43.5901%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1,955,308,956 samples, 1.27%)</title><rect x="43.3401%" y="405" width="1.2697%" height="15" fill="rgb(229,201,53)" fg:x="66744533391" fg:w="1955308956"/><text x="43.5901%" y="415.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (837,718,274 samples, 0.54%)</title><rect x="44.6479%" y="469" width="0.5440%" height="15" fill="rgb(249,153,27)" fg:x="68758601945" fg:w="837718274"/><text x="44.8979%" y="479.50"></text></g><g><title>std::sync::poison::Flag::borrow (837,718,274 samples, 0.54%)</title><rect x="44.6479%" y="453" width="0.5440%" height="15" fill="rgb(227,106,25)" fg:x="68758601945" fg:w="837718274"/><text x="44.8979%" y="463.50"></text></g><g><title>std::sync::poison::Flag::get (24,922,222 samples, 0.02%)</title><rect x="45.1757%" y="437" width="0.0162%" height="15" fill="rgb(230,65,29)" fg:x="69571397997" fg:w="24922222"/><text x="45.4257%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (24,922,222 samples, 0.02%)</title><rect x="45.1757%" y="421" width="0.0162%" height="15" fill="rgb(221,57,46)" fg:x="69571397997" fg:w="24922222"/><text x="45.4257%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_load (24,922,222 samples, 0.02%)</title><rect x="45.1757%" y="405" width="0.0162%" height="15" fill="rgb(229,161,17)" fg:x="69571397997" fg:w="24922222"/><text x="45.4257%" y="415.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (17,154,201 samples, 0.01%)</title><rect x="48.0393%" y="453" width="0.0111%" height="15" fill="rgb(222,213,11)" fg:x="73981405671" fg:w="17154201"/><text x="48.2893%" y="463.50"></text></g><g><title>sysvec_apic_timer_interrupt (17,154,201 samples, 0.01%)</title><rect x="48.0393%" y="437" width="0.0111%" height="15" fill="rgb(235,35,13)" fg:x="73981405671" fg:w="17154201"/><text x="48.2893%" y="447.50"></text></g><g><title>__irq_exit_rcu (17,154,201 samples, 0.01%)</title><rect x="48.0393%" y="421" width="0.0111%" height="15" fill="rgb(233,158,34)" fg:x="73981405671" fg:w="17154201"/><text x="48.2893%" y="431.50"></text></g><g><title>handle_softirqs (17,154,201 samples, 0.01%)</title><rect x="48.0393%" y="405" width="0.0111%" height="15" fill="rgb(215,151,48)" fg:x="73981405671" fg:w="17154201"/><text x="48.2893%" y="415.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_read (850,177,183 samples, 0.55%)</title><rect x="48.4600%" y="437" width="0.5521%" height="15" fill="rgb(229,84,14)" fg:x="74629259956" fg:w="850177183"/><text x="48.7100%" y="447.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_until (850,177,183 samples, 0.55%)</title><rect x="48.4600%" y="421" width="0.5521%" height="15" fill="rgb(229,68,14)" fg:x="74629259956" fg:w="850177183"/><text x="48.7100%" y="431.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_read::_{{closure}} (850,177,183 samples, 0.55%)</title><rect x="48.4600%" y="405" width="0.5521%" height="15" fill="rgb(243,106,26)" fg:x="74629259956" fg:w="850177183"/><text x="48.7100%" y="415.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read_contended (1,498,630,720 samples, 0.97%)</title><rect x="48.0576%" y="453" width="0.9731%" height="15" fill="rgb(206,45,38)" fg:x="74009533707" fg:w="1498630720"/><text x="48.3076%" y="463.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::is_read_lockable (28,727,288 samples, 0.02%)</title><rect x="49.0120%" y="437" width="0.0187%" height="15" fill="rgb(226,6,15)" fg:x="75479437139" fg:w="28727288"/><text x="49.2620%" y="447.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::is_read_lockable (6,733,063,285 samples, 4.37%)</title><rect x="49.0307%" y="453" width="4.3721%" height="15" fill="rgb(232,22,54)" fg:x="75508164427" fg:w="6733063285"/><text x="49.2807%" y="463.50">std::..</text></g><g><title>uuid::builder::&lt;impl uuid::Uuid&gt;::from_u128 (89,390,374 samples, 0.06%)</title><rect x="53.4028%" y="437" width="0.0580%" height="15" fill="rgb(229,222,32)" fg:x="82241227712" fg:w="89390374"/><text x="53.6528%" y="447.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (13,723,877,359 samples, 8.91%)</title><rect x="44.6098%" y="485" width="8.9115%" height="15" fill="rgb(228,62,29)" fg:x="68699842347" fg:w="13723877359"/><text x="44.8598%" y="495.50">std::sync::rw..</text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read (12,827,399,487 samples, 8.33%)</title><rect x="45.1919%" y="469" width="8.3294%" height="15" fill="rgb(251,103,34)" fg:x="69596320219" fg:w="12827399487"/><text x="45.4419%" y="479.50">std::sys::pa..</text></g><g><title>uuid::v4::&lt;impl uuid::Uuid&gt;::new_v4 (182,491,994 samples, 0.12%)</title><rect x="53.4028%" y="453" width="0.1185%" height="15" fill="rgb(233,12,30)" fg:x="82241227712" fg:w="182491994"/><text x="53.6528%" y="463.50"></text></g><g><title>uuid::rng::u128 (93,101,620 samples, 0.06%)</title><rect x="53.4608%" y="437" width="0.0605%" height="15" fill="rgb(238,52,0)" fg:x="82330618086" fg:w="93101620"/><text x="53.7108%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (66,278,550 samples, 0.04%)</title><rect x="53.4782%" y="421" width="0.0430%" height="15" fill="rgb(223,98,5)" fg:x="82357441156" fg:w="66278550"/><text x="53.7282%" y="431.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::wake_writer_or_readers (117,730,579 samples, 0.08%)</title><rect x="53.5245%" y="485" width="0.0764%" height="15" fill="rgb(228,75,37)" fg:x="82428700116" fg:w="117730579"/><text x="53.7745%" y="495.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (26,027,348 samples, 0.02%)</title><rect x="53.6009%" y="485" width="0.0169%" height="15" fill="rgb(205,115,49)" fg:x="82546430695" fg:w="26027348"/><text x="53.8509%" y="495.50"></text></g><g><title>rpq::main::_{{closure}} (26,027,348 samples, 0.02%)</title><rect x="53.6009%" y="469" width="0.0169%" height="15" fill="rgb(250,154,43)" fg:x="82546430695" fg:w="26027348"/><text x="53.8509%" y="479.50"></text></g><g><title>_raw_spin_lock (93,904,943 samples, 0.06%)</title><rect x="53.9973%" y="389" width="0.0610%" height="15" fill="rgb(226,43,29)" fg:x="83156803276" fg:w="93904943"/><text x="54.2473%" y="399.50"></text></g><g><title>native_queued_spin_lock_slowpath (78,950,225 samples, 0.05%)</title><rect x="54.0070%" y="373" width="0.0513%" height="15" fill="rgb(249,228,39)" fg:x="83171757994" fg:w="78950225"/><text x="54.2570%" y="383.50"></text></g><g><title>futex_hash (28,513,688 samples, 0.02%)</title><rect x="54.0607%" y="389" width="0.0185%" height="15" fill="rgb(216,79,43)" fg:x="83254506635" fg:w="28513688"/><text x="54.3107%" y="399.50"></text></g><g><title>futex_wake_mark (51,154,779 samples, 0.03%)</title><rect x="54.0792%" y="389" width="0.0332%" height="15" fill="rgb(228,95,12)" fg:x="83283020323" fg:w="51154779"/><text x="54.3292%" y="399.50"></text></g><g><title>get_futex_key (35,714,504 samples, 0.02%)</title><rect x="54.1125%" y="389" width="0.0232%" height="15" fill="rgb(249,221,15)" fg:x="83334175102" fg:w="35714504"/><text x="54.3625%" y="399.50"></text></g><g><title>_raw_spin_lock_irqsave (29,804,153 samples, 0.02%)</title><rect x="54.5463%" y="357" width="0.0194%" height="15" fill="rgb(233,34,13)" fg:x="84002326913" fg:w="29804153"/><text x="54.7963%" y="367.50"></text></g><g><title>available_idle_cpu (30,160,285 samples, 0.02%)</title><rect x="54.6536%" y="341" width="0.0196%" height="15" fill="rgb(214,103,39)" fg:x="84167479779" fg:w="30160285"/><text x="54.9036%" y="351.50"></text></g><g><title>select_task_rq_fair (174,132,374 samples, 0.11%)</title><rect x="54.5881%" y="357" width="0.1131%" height="15" fill="rgb(251,126,39)" fg:x="84066650457" fg:w="174132374"/><text x="54.8381%" y="367.50"></text></g><g><title>task_h_load (26,308,406 samples, 0.02%)</title><rect x="54.6841%" y="341" width="0.0171%" height="15" fill="rgb(214,216,36)" fg:x="84214474425" fg:w="26308406"/><text x="54.9341%" y="351.50"></text></g><g><title>enqueue_entity (23,577,173 samples, 0.02%)</title><rect x="54.7224%" y="309" width="0.0153%" height="15" fill="rgb(220,221,8)" fg:x="84273537325" fg:w="23577173"/><text x="54.9724%" y="319.50"></text></g><g><title>enqueue_task_fair (75,639,863 samples, 0.05%)</title><rect x="54.7153%" y="325" width="0.0491%" height="15" fill="rgb(240,216,3)" fg:x="84262520300" fg:w="75639863"/><text x="54.9653%" y="335.50"></text></g><g><title>enqueue_task (87,754,373 samples, 0.06%)</title><rect x="54.7129%" y="341" width="0.0570%" height="15" fill="rgb(232,218,17)" fg:x="84258895132" fg:w="87754373"/><text x="54.9629%" y="351.50"></text></g><g><title>ttwu_do_activate (98,625,308 samples, 0.06%)</title><rect x="54.7084%" y="357" width="0.0640%" height="15" fill="rgb(229,163,45)" fg:x="84251897334" fg:w="98625308"/><text x="54.9584%" y="367.50"></text></g><g><title>call_function_single_prep_ipi (42,102,929 samples, 0.03%)</title><rect x="54.8380%" y="325" width="0.0273%" height="15" fill="rgb(231,110,42)" fg:x="84451467139" fg:w="42102929"/><text x="55.0880%" y="335.50"></text></g><g><title>__smp_call_single_queue (60,470,067 samples, 0.04%)</title><rect x="54.8355%" y="341" width="0.0393%" height="15" fill="rgb(208,170,48)" fg:x="84447635594" fg:w="60470067"/><text x="55.0855%" y="351.50"></text></g><g><title>default_send_IPI_single_phys (126,745,756 samples, 0.08%)</title><rect x="54.8747%" y="341" width="0.0823%" height="15" fill="rgb(239,116,25)" fg:x="84508105661" fg:w="126745756"/><text x="55.1247%" y="351.50"></text></g><g><title>native_sched_clock (21,473,849 samples, 0.01%)</title><rect x="54.9658%" y="309" width="0.0139%" height="15" fill="rgb(219,200,50)" fg:x="84648272502" fg:w="21473849"/><text x="55.2158%" y="319.50"></text></g><g><title>ttwu_queue_wakelist (321,491,012 samples, 0.21%)</title><rect x="54.7724%" y="357" width="0.2088%" height="15" fill="rgb(245,200,0)" fg:x="84350522642" fg:w="321491012"/><text x="55.0224%" y="367.50"></text></g><g><title>sched_clock_cpu (37,162,237 samples, 0.02%)</title><rect x="54.9570%" y="341" width="0.0241%" height="15" fill="rgb(245,119,33)" fg:x="84634851417" fg:w="37162237"/><text x="55.2070%" y="351.50"></text></g><g><title>sched_clock (23,741,152 samples, 0.02%)</title><rect x="54.9658%" y="325" width="0.0154%" height="15" fill="rgb(231,125,12)" fg:x="84648272502" fg:w="23741152"/><text x="55.2158%" y="335.50"></text></g><g><title>do_futex (1,870,626,267 samples, 1.21%)</title><rect x="53.7714%" y="421" width="1.2147%" height="15" fill="rgb(216,96,41)" fg:x="82808897841" fg:w="1870626267"/><text x="54.0214%" y="431.50"></text></g><g><title>futex_wake (1,870,613,149 samples, 1.21%)</title><rect x="53.7714%" y="405" width="1.2147%" height="15" fill="rgb(248,43,45)" fg:x="82808910959" fg:w="1870613149"/><text x="54.0214%" y="415.50"></text></g><g><title>wake_up_q (1,303,068,768 samples, 0.85%)</title><rect x="54.1399%" y="389" width="0.8461%" height="15" fill="rgb(217,222,7)" fg:x="83376455340" fg:w="1303068768"/><text x="54.3899%" y="399.50"></text></g><g><title>try_to_wake_up (1,286,546,816 samples, 0.84%)</title><rect x="54.1506%" y="373" width="0.8354%" height="15" fill="rgb(233,28,6)" fg:x="83392977292" fg:w="1286546816"/><text x="54.4006%" y="383.50"></text></g><g><title>__x64_sys_futex (1,904,347,595 samples, 1.24%)</title><rect x="53.7556%" y="437" width="1.2366%" height="15" fill="rgb(231,218,15)" fg:x="82784580696" fg:w="1904347595"/><text x="54.0056%" y="447.50"></text></g><g><title>syscall_exit_to_user_mode (61,105,146 samples, 0.04%)</title><rect x="54.9950%" y="437" width="0.0397%" height="15" fill="rgb(226,171,48)" fg:x="84693308917" fg:w="61105146"/><text x="55.2450%" y="447.50"></text></g><g><title>syscall_exit_to_user_mode_prepare (39,896,497 samples, 0.03%)</title><rect x="55.0088%" y="421" width="0.0259%" height="15" fill="rgb(235,201,9)" fg:x="84714517566" fg:w="39896497"/><text x="55.2588%" y="431.50"></text></g><g><title>do_syscall_64 (2,090,931,605 samples, 1.36%)</title><rect x="53.6793%" y="453" width="1.3577%" height="15" fill="rgb(217,80,15)" fg:x="82667077791" fg:w="2090931605"/><text x="53.9293%" y="463.50"></text></g><g><title>srso_alias_return_thunk (21,877,716 samples, 0.01%)</title><rect x="55.0370%" y="453" width="0.0142%" height="15" fill="rgb(219,152,8)" fg:x="84758009396" fg:w="21877716"/><text x="55.2870%" y="463.50"></text></g><g><title>srso_alias_safe_ret (21,877,716 samples, 0.01%)</title><rect x="55.0370%" y="437" width="0.0142%" height="15" fill="rgb(243,107,38)" fg:x="84758009396" fg:w="21877716"/><text x="55.2870%" y="447.50"></text></g><g><title>entry_SYSCALL_64 (2,166,731,380 samples, 1.41%)</title><rect x="53.6516%" y="469" width="1.4070%" height="15" fill="rgb(231,17,5)" fg:x="82624513576" fg:w="2166731380"/><text x="53.9016%" y="479.50"></text></g><g><title>syscall (2,533,286,774 samples, 1.64%)</title><rect x="53.6178%" y="485" width="1.6450%" height="15" fill="rgb(209,25,54)" fg:x="82572458043" fg:w="2533286774"/><text x="53.8678%" y="495.50"></text></g><g><title>syscall_return_via_sysret (314,499,861 samples, 0.20%)</title><rect x="55.0586%" y="469" width="0.2042%" height="15" fill="rgb(219,0,2)" fg:x="84791244956" fg:w="314499861"/><text x="55.3086%" y="479.50"></text></g><g><title>stackleak_erase (151,457,476 samples, 0.10%)</title><rect x="55.1645%" y="453" width="0.0983%" height="15" fill="rgb(246,9,5)" fg:x="84954287341" fg:w="151457476"/><text x="55.4145%" y="463.50"></text></g><g><title>rpq::RPQ&lt;T&gt;::enqueue (59,493,525,350 samples, 38.63%)</title><rect x="16.6500%" y="501" width="38.6317%" height="15" fill="rgb(226,159,4)" fg:x="25641246598" fg:w="59493525350"/><text x="16.9000%" y="511.50">rpq::RPQ&lt;T&gt;::enqueue</text></g><g><title>uuid::fmt::&lt;impl core::fmt::Display for uuid::Uuid&gt;::fmt (29,027,131 samples, 0.02%)</title><rect x="55.2628%" y="485" width="0.0188%" height="15" fill="rgb(219,175,34)" fg:x="85105744817" fg:w="29027131"/><text x="55.5128%" y="495.50"></text></g><g><title>uuid::fmt::&lt;impl core::fmt::LowerHex for uuid::Uuid&gt;::fmt (25,334,601 samples, 0.02%)</title><rect x="55.2652%" y="469" width="0.0165%" height="15" fill="rgb(236,10,46)" fg:x="85109437347" fg:w="25334601"/><text x="55.5152%" y="479.50"></text></g><g><title>&lt;uuid::fmt::Hyphenated as core::fmt::LowerHex&gt;::fmt (25,334,601 samples, 0.02%)</title><rect x="55.2652%" y="453" width="0.0165%" height="15" fill="rgb(240,211,16)" fg:x="85109437347" fg:w="25334601"/><text x="55.5152%" y="463.50"></text></g><g><title>clock_gettime (672,051,870 samples, 0.44%)</title><rect x="55.2928%" y="405" width="0.4364%" height="15" fill="rgb(205,3,43)" fg:x="85151923864" fg:w="672051870"/><text x="55.5428%" y="415.50"></text></g><g><title>__vdso_clock_gettime (672,051,870 samples, 0.44%)</title><rect x="55.2928%" y="389" width="0.4364%" height="15" fill="rgb(245,7,22)" fg:x="85151923864" fg:w="672051870"/><text x="55.5428%" y="399.50"></text></g><g><title>rpq::pq::PriorityQueue&lt;T&gt;::prioritize (733,996,365 samples, 0.48%)</title><rect x="55.2817%" y="485" width="0.4766%" height="15" fill="rgb(239,132,32)" fg:x="85134771948" fg:w="733996365"/><text x="55.5317%" y="495.50"></text></g><g><title>std::time::Instant::elapsed (733,996,365 samples, 0.48%)</title><rect x="55.2817%" y="469" width="0.4766%" height="15" fill="rgb(228,202,34)" fg:x="85134771948" fg:w="733996365"/><text x="55.5317%" y="479.50"></text></g><g><title>std::time::Instant::now (725,422,256 samples, 0.47%)</title><rect x="55.2872%" y="453" width="0.4710%" height="15" fill="rgb(254,200,22)" fg:x="85143346057" fg:w="725422256"/><text x="55.5372%" y="463.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (725,422,256 samples, 0.47%)</title><rect x="55.2872%" y="437" width="0.4710%" height="15" fill="rgb(219,10,39)" fg:x="85143346057" fg:w="725422256"/><text x="55.5372%" y="447.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (725,422,256 samples, 0.47%)</title><rect x="55.2872%" y="421" width="0.4710%" height="15" fill="rgb(226,210,39)" fg:x="85143346057" fg:w="725422256"/><text x="55.5372%" y="431.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (44,792,579 samples, 0.03%)</title><rect x="55.7292%" y="405" width="0.0291%" height="15" fill="rgb(208,219,16)" fg:x="85823975734" fg:w="44792579"/><text x="55.9792%" y="415.50"></text></g><g><title>rpq::RPQ&lt;T&gt;::prioritize (734,002,742 samples, 0.48%)</title><rect x="55.2817%" y="501" width="0.4766%" height="15" fill="rgb(216,158,51)" fg:x="85134771948" fg:w="734002742"/><text x="55.5317%" y="511.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::contains (19,355,946 samples, 0.01%)</title><rect x="55.7583%" y="485" width="0.0126%" height="15" fill="rgb(233,14,44)" fg:x="85868774690" fg:w="19355946"/><text x="56.0083%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (19,355,946 samples, 0.01%)</title><rect x="55.7583%" y="469" width="0.0126%" height="15" fill="rgb(237,97,39)" fg:x="85868774690" fg:w="19355946"/><text x="56.0083%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (19,355,946 samples, 0.01%)</title><rect x="55.7583%" y="453" width="0.0126%" height="15" fill="rgb(218,198,43)" fg:x="85868774690" fg:w="19355946"/><text x="56.0083%" y="463.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (19,355,946 samples, 0.01%)</title><rect x="55.7583%" y="437" width="0.0126%" height="15" fill="rgb(231,104,20)" fg:x="85868774690" fg:w="19355946"/><text x="56.0083%" y="447.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (19,355,946 samples, 0.01%)</title><rect x="55.7583%" y="421" width="0.0126%" height="15" fill="rgb(254,36,13)" fg:x="85868774690" fg:w="19355946"/><text x="56.0083%" y="431.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (19,355,946 samples, 0.01%)</title><rect x="55.7583%" y="405" width="0.0126%" height="15" fill="rgb(248,14,50)" fg:x="85868774690" fg:w="19355946"/><text x="56.0083%" y="415.50"></text></g><g><title>rpq::bpq::BucketPriorityQueue::add_bucket (49,172,749 samples, 0.03%)</title><rect x="55.7583%" y="501" width="0.0319%" height="15" fill="rgb(217,107,29)" fg:x="85868774690" fg:w="49172749"/><text x="56.0083%" y="511.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (29,816,803 samples, 0.02%)</title><rect x="55.7709%" y="485" width="0.0194%" height="15" fill="rgb(251,169,33)" fg:x="85888130636" fg:w="29816803"/><text x="56.0209%" y="495.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read (18,261,947 samples, 0.01%)</title><rect x="55.7784%" y="469" width="0.0119%" height="15" fill="rgb(217,108,32)" fg:x="85899685492" fg:w="18261947"/><text x="56.0284%" y="479.50"></text></g><g><title>&lt;std::sys::pal::unix::time::Timespec as core::convert::From&lt;libc::unix::timespec&gt;&gt;::from (27,962,173 samples, 0.02%)</title><rect x="55.8170%" y="469" width="0.0182%" height="15" fill="rgb(219,66,42)" fg:x="85959194055" fg:w="27962173"/><text x="56.0670%" y="479.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::new (27,962,173 samples, 0.02%)</title><rect x="55.8170%" y="453" width="0.0182%" height="15" fill="rgb(206,180,7)" fg:x="85959194055" fg:w="27962173"/><text x="56.0670%" y="463.50"></text></g><g><title>__vdso_clock_gettime (1,222,728,759 samples, 0.79%)</title><rect x="55.9489%" y="453" width="0.7940%" height="15" fill="rgb(208,226,31)" fg:x="86162298193" fg:w="1222728759"/><text x="56.1989%" y="463.50"></text></g><g><title>clock_gettime (1,401,264,202 samples, 0.91%)</title><rect x="55.8352%" y="469" width="0.9099%" height="15" fill="rgb(218,26,49)" fg:x="85987156228" fg:w="1401264202"/><text x="56.0852%" y="479.50"></text></g><g><title>getrandom::imp::getrandom_inner (117,494,081 samples, 0.08%)</title><rect x="56.7451%" y="469" width="0.0763%" height="15" fill="rgb(233,197,48)" fg:x="87388420430" fg:w="117494081"/><text x="56.9951%" y="479.50"></text></g><g><title>getrandom::util_libc::sys_fill_exact (110,223,624 samples, 0.07%)</title><rect x="56.7498%" y="453" width="0.0716%" height="15" fill="rgb(252,181,51)" fg:x="87395690887" fg:w="110223624"/><text x="56.9998%" y="463.50"></text></g><g><title>core::ops::function::Fn::call (23,223,392 samples, 0.02%)</title><rect x="56.8063%" y="437" width="0.0151%" height="15" fill="rgb(253,90,19)" fg:x="87482691119" fg:w="23223392"/><text x="57.0563%" y="447.50"></text></g><g><title>getrandom::util_libc::getrandom_syscall (23,223,392 samples, 0.02%)</title><rect x="56.8063%" y="421" width="0.0151%" height="15" fill="rgb(215,171,30)" fg:x="87482691119" fg:w="23223392"/><text x="57.0563%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (25,846,154 samples, 0.02%)</title><rect x="56.8319%" y="405" width="0.0168%" height="15" fill="rgb(214,222,9)" fg:x="87522096976" fg:w="25846154"/><text x="57.0819%" y="415.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1,627,356,239 samples, 1.06%)</title><rect x="55.8132%" y="485" width="1.0567%" height="15" fill="rgb(223,3,22)" fg:x="85953383964" fg:w="1627356239"/><text x="56.0632%" y="495.50"></text></g><g><title>rand::rng::Rng::gen_range (74,825,692 samples, 0.05%)</title><rect x="56.8213%" y="469" width="0.0486%" height="15" fill="rgb(225,196,46)" fg:x="87505914511" fg:w="74825692"/><text x="57.0713%" y="479.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::sample_single (71,055,288 samples, 0.05%)</title><rect x="56.8238%" y="453" width="0.0461%" height="15" fill="rgb(209,110,37)" fg:x="87509684915" fg:w="71055288"/><text x="57.0738%" y="463.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u64&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (71,055,288 samples, 0.05%)</title><rect x="56.8238%" y="437" width="0.0461%" height="15" fill="rgb(249,89,12)" fg:x="87509684915" fg:w="71055288"/><text x="57.0738%" y="447.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u64&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single_inclusive (71,055,288 samples, 0.05%)</title><rect x="56.8238%" y="421" width="0.0461%" height="15" fill="rgb(226,27,33)" fg:x="87509684915" fg:w="71055288"/><text x="57.0738%" y="431.50"></text></g><g><title>rand::rng::Rng::gen (32,797,073 samples, 0.02%)</title><rect x="56.8486%" y="405" width="0.0213%" height="15" fill="rgb(213,82,22)" fg:x="87547943130" fg:w="32797073"/><text x="57.0986%" y="415.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u64&gt; for rand::distributions::Standard&gt;::sample (32,797,073 samples, 0.02%)</title><rect x="56.8486%" y="389" width="0.0213%" height="15" fill="rgb(248,140,0)" fg:x="87547943130" fg:w="32797073"/><text x="57.0986%" y="399.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (32,797,073 samples, 0.02%)</title><rect x="56.8486%" y="373" width="0.0213%" height="15" fill="rgb(228,106,3)" fg:x="87547943130" fg:w="32797073"/><text x="57.0986%" y="383.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (32,797,073 samples, 0.02%)</title><rect x="56.8486%" y="357" width="0.0213%" height="15" fill="rgb(209,23,37)" fg:x="87547943130" fg:w="32797073"/><text x="57.0986%" y="367.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (32,797,073 samples, 0.02%)</title><rect x="56.8486%" y="341" width="0.0213%" height="15" fill="rgb(241,93,50)" fg:x="87547943130" fg:w="32797073"/><text x="57.0986%" y="351.50"></text></g><g><title>std::time::Instant::now (45,001,259 samples, 0.03%)</title><rect x="56.8699%" y="485" width="0.0292%" height="15" fill="rgb(253,46,43)" fg:x="87580740203" fg:w="45001259"/><text x="57.1199%" y="495.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (45,001,259 samples, 0.03%)</title><rect x="56.8699%" y="469" width="0.0292%" height="15" fill="rgb(226,206,43)" fg:x="87580740203" fg:w="45001259"/><text x="57.1199%" y="479.50"></text></g><g><title>rpq::pq::Item&lt;T&gt;::new (1,712,418,385 samples, 1.11%)</title><rect x="55.7902%" y="501" width="1.1119%" height="15" fill="rgb(217,54,7)" fg:x="85917947439" fg:w="1712418385"/><text x="56.0402%" y="511.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (30,082,976 samples, 0.02%)</title><rect x="56.9069%" y="501" width="0.0195%" height="15" fill="rgb(223,5,52)" fg:x="87637732573" fg:w="30082976"/><text x="57.1569%" y="511.50"></text></g><g><title>rpq::main::_{{closure}} (30,082,976 samples, 0.02%)</title><rect x="56.9069%" y="485" width="0.0195%" height="15" fill="rgb(206,52,46)" fg:x="87637732573" fg:w="30082976"/><text x="57.1569%" y="495.50"></text></g><g><title>uuid::builder::&lt;impl uuid::Uuid&gt;::from_u128 (453,383,042 samples, 0.29%)</title><rect x="56.9513%" y="485" width="0.2944%" height="15" fill="rgb(253,136,11)" fg:x="87706116341" fg:w="453383042"/><text x="57.2013%" y="495.50"></text></g><g><title>uuid::builder::&lt;impl uuid::Uuid&gt;::from_bytes (20,228,511 samples, 0.01%)</title><rect x="57.2326%" y="469" width="0.0131%" height="15" fill="rgb(208,106,33)" fg:x="88139270872" fg:w="20228511"/><text x="57.4826%" y="479.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (422,771,910 samples, 0.27%)</title><rect x="57.2826%" y="469" width="0.2745%" height="15" fill="rgb(206,54,4)" fg:x="88216275665" fg:w="422771910"/><text x="57.5326%" y="479.50"></text></g><g><title>[libc.so.6] (18,039,238 samples, 0.01%)</title><rect x="58.3933%" y="373" width="0.0117%" height="15" fill="rgb(213,3,15)" fg:x="89926771367" fg:w="18039238"/><text x="58.6433%" y="383.50"></text></g><g><title>cfree (17,455,427 samples, 0.01%)</title><rect x="58.4137%" y="373" width="0.0113%" height="15" fill="rgb(252,211,39)" fg:x="89958195507" fg:w="17455427"/><text x="58.6637%" y="383.50"></text></g><g><title>rand::rngs::thread::thread_rng (15,477,107 samples, 0.01%)</title><rect x="58.4301%" y="373" width="0.0100%" height="15" fill="rgb(223,6,36)" fg:x="89983351639" fg:w="15477107"/><text x="58.6801%" y="383.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (29,115,590 samples, 0.02%)</title><rect x="58.9618%" y="357" width="0.0189%" height="15" fill="rgb(252,169,45)" fg:x="90802209599" fg:w="29115590"/><text x="59.2118%" y="367.50"></text></g><g><title>sysvec_apic_timer_interrupt (29,115,590 samples, 0.02%)</title><rect x="58.9618%" y="341" width="0.0189%" height="15" fill="rgb(212,48,26)" fg:x="90802209599" fg:w="29115590"/><text x="59.2118%" y="351.50"></text></g><g><title>__sysvec_apic_timer_interrupt (18,363,828 samples, 0.01%)</title><rect x="58.9688%" y="325" width="0.0119%" height="15" fill="rgb(251,102,48)" fg:x="90812961361" fg:w="18363828"/><text x="59.2188%" y="335.50"></text></g><g><title>hrtimer_interrupt (18,363,828 samples, 0.01%)</title><rect x="58.9688%" y="309" width="0.0119%" height="15" fill="rgb(243,208,16)" fg:x="90812961361" fg:w="18363828"/><text x="59.2188%" y="319.50"></text></g><g><title>_copy_to_iter (31,211,299 samples, 0.02%)</title><rect x="59.0770%" y="293" width="0.0203%" height="15" fill="rgb(219,96,24)" fg:x="90979600862" fg:w="31211299"/><text x="59.3270%" y="303.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (25,634,988 samples, 0.02%)</title><rect x="59.1200%" y="277" width="0.0166%" height="15" fill="rgb(219,33,29)" fg:x="91045907075" fg:w="25634988"/><text x="59.3700%" y="287.50"></text></g><g><title>sysvec_apic_timer_interrupt (25,634,988 samples, 0.02%)</title><rect x="59.1200%" y="261" width="0.0166%" height="15" fill="rgb(223,176,5)" fg:x="91045907075" fg:w="25634988"/><text x="59.3700%" y="271.50"></text></g><g><title>crng_fast_key_erasure (179,739,217 samples, 0.12%)</title><rect x="59.1367%" y="277" width="0.1167%" height="15" fill="rgb(228,140,14)" fg:x="91071542063" fg:w="179739217"/><text x="59.3867%" y="287.50"></text></g><g><title>chacha_block_generic (148,784,431 samples, 0.10%)</title><rect x="59.1568%" y="261" width="0.0966%" height="15" fill="rgb(217,179,31)" fg:x="91102496849" fg:w="148784431"/><text x="59.4068%" y="271.50"></text></g><g><title>chacha_permute (126,585,184 samples, 0.08%)</title><rect x="59.1712%" y="245" width="0.0822%" height="15" fill="rgb(230,9,30)" fg:x="91124696096" fg:w="126585184"/><text x="59.4212%" y="255.50"></text></g><g><title>crng_make_state (235,949,595 samples, 0.15%)</title><rect x="59.1025%" y="293" width="0.1532%" height="15" fill="rgb(230,136,20)" fg:x="91018869556" fg:w="235949595"/><text x="59.3525%" y="303.50"></text></g><g><title>get_random_bytes_user (313,095,870 samples, 0.20%)</title><rect x="59.0549%" y="309" width="0.2033%" height="15" fill="rgb(215,210,22)" fg:x="90945570635" fg:w="313095870"/><text x="59.3049%" y="319.50"></text></g><g><title>__x64_sys_getrandom (323,629,436 samples, 0.21%)</title><rect x="59.0506%" y="325" width="0.2101%" height="15" fill="rgb(218,43,5)" fg:x="90938981136" fg:w="323629436"/><text x="59.3006%" y="335.50"></text></g><g><title>do_syscall_64 (392,922,451 samples, 0.26%)</title><rect x="59.0271%" y="341" width="0.2551%" height="15" fill="rgb(216,11,5)" fg:x="90902880652" fg:w="392922451"/><text x="59.2771%" y="351.50"></text></g><g><title>entry_SYSCALL_64 (459,704,040 samples, 0.30%)</title><rect x="58.9944%" y="357" width="0.2985%" height="15" fill="rgb(209,82,29)" fg:x="90852416536" fg:w="459704040"/><text x="59.2444%" y="367.50"></text></g><g><title>entry_SYSRETQ_unsafe_stack (81,386,833 samples, 0.05%)</title><rect x="59.2929%" y="357" width="0.0528%" height="15" fill="rgb(244,115,12)" fg:x="91312120576" fg:w="81386833"/><text x="59.5429%" y="367.50"></text></g><g><title>syscall (2,011,202,681 samples, 1.31%)</title><rect x="58.4424%" y="373" width="1.3060%" height="15" fill="rgb(222,82,18)" fg:x="90002427329" fg:w="2011202681"/><text x="58.6924%" y="383.50"></text></g><g><title>syscall_return_via_sysret (620,122,601 samples, 0.40%)</title><rect x="59.3457%" y="357" width="0.4027%" height="15" fill="rgb(249,227,8)" fg:x="91393507409" fg:w="620122601"/><text x="59.5957%" y="367.50"></text></g><g><title>stackleak_erase (118,467,297 samples, 0.08%)</title><rect x="59.6715%" y="341" width="0.0769%" height="15" fill="rgb(253,141,45)" fg:x="91895162713" fg:w="118467297"/><text x="59.9215%" y="351.50"></text></g><g><title>getrandom::imp::getrandom_inner (3,386,752,717 samples, 2.20%)</title><rect x="57.5571%" y="437" width="2.1992%" height="15" fill="rgb(234,184,4)" fg:x="88639047575" fg:w="3386752717"/><text x="57.8071%" y="447.50">g..</text></g><g><title>getrandom::util_libc::sys_fill_exact (3,297,641,859 samples, 2.14%)</title><rect x="57.6150%" y="421" width="2.1413%" height="15" fill="rgb(218,194,23)" fg:x="88728158433" fg:w="3297641859"/><text x="57.8650%" y="431.50">g..</text></g><g><title>core::ops::function::Fn::call (2,180,220,599 samples, 1.42%)</title><rect x="58.3406%" y="405" width="1.4157%" height="15" fill="rgb(235,66,41)" fg:x="89845579693" fg:w="2180220599"/><text x="58.5906%" y="415.50"></text></g><g><title>getrandom::util_libc::getrandom_syscall (2,180,220,599 samples, 1.42%)</title><rect x="58.3406%" y="389" width="1.4157%" height="15" fill="rgb(245,217,1)" fg:x="89845579693" fg:w="2180220599"/><text x="58.5906%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (58,043,937 samples, 0.04%)</title><rect x="59.7752%" y="373" width="0.0377%" height="15" fill="rgb(229,91,1)" fg:x="92054900977" fg:w="58043937"/><text x="60.0252%" y="383.50"></text></g><g><title>rand::rng::Rng::gen_range (165,558,309 samples, 0.11%)</title><rect x="59.7563%" y="437" width="0.1075%" height="15" fill="rgb(207,101,30)" fg:x="92025800292" fg:w="165558309"/><text x="60.0063%" y="447.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::sample_single (148,935,411 samples, 0.10%)</title><rect x="59.7671%" y="421" width="0.0967%" height="15" fill="rgb(223,82,49)" fg:x="92042423190" fg:w="148935411"/><text x="60.0171%" y="431.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u64&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (148,935,411 samples, 0.10%)</title><rect x="59.7671%" y="405" width="0.0967%" height="15" fill="rgb(218,167,17)" fg:x="92042423190" fg:w="148935411"/><text x="60.0171%" y="415.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u64&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single_inclusive (148,935,411 samples, 0.10%)</title><rect x="59.7671%" y="389" width="0.0967%" height="15" fill="rgb(208,103,14)" fg:x="92042423190" fg:w="148935411"/><text x="60.0171%" y="399.50"></text></g><g><title>rand::rng::Rng::gen (71,046,155 samples, 0.05%)</title><rect x="59.8177%" y="373" width="0.0461%" height="15" fill="rgb(238,20,8)" fg:x="92120312446" fg:w="71046155"/><text x="60.0677%" y="383.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u64&gt; for rand::distributions::Standard&gt;::sample (71,046,155 samples, 0.05%)</title><rect x="59.8177%" y="357" width="0.0461%" height="15" fill="rgb(218,80,54)" fg:x="92120312446" fg:w="71046155"/><text x="60.0677%" y="367.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (71,046,155 samples, 0.05%)</title><rect x="59.8177%" y="341" width="0.0461%" height="15" fill="rgb(240,144,17)" fg:x="92120312446" fg:w="71046155"/><text x="60.0677%" y="351.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (71,046,155 samples, 0.05%)</title><rect x="59.8177%" y="325" width="0.0461%" height="15" fill="rgb(245,27,50)" fg:x="92120312446" fg:w="71046155"/><text x="60.0677%" y="335.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (71,046,155 samples, 0.05%)</title><rect x="59.8177%" y="309" width="0.0461%" height="15" fill="rgb(251,51,7)" fg:x="92120312446" fg:w="71046155"/><text x="60.0677%" y="319.50"></text></g><g><title>std::panic::catch_unwind (75,573,497,534 samples, 49.07%)</title><rect x="10.7961%" y="613" width="49.0731%" height="15" fill="rgb(245,217,29)" fg:x="16626191290" fg:w="75573497534"/><text x="11.0461%" y="623.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (75,573,497,534 samples, 49.07%)</title><rect x="10.7961%" y="597" width="49.0731%" height="15" fill="rgb(221,176,29)" fg:x="16626191290" fg:w="75573497534"/><text x="11.0461%" y="607.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (75,573,497,534 samples, 49.07%)</title><rect x="10.7961%" y="581" width="49.0731%" height="15" fill="rgb(212,180,24)" fg:x="16626191290" fg:w="75573497534"/><text x="11.0461%" y="591.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (75,573,497,534 samples, 49.07%)</title><rect x="10.7961%" y="565" width="49.0731%" height="15" fill="rgb(254,24,2)" fg:x="16626191290" fg:w="75573497534"/><text x="11.0461%" y="575.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;..</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (75,573,497,534 samples, 49.07%)</title><rect x="10.7961%" y="549" width="49.0731%" height="15" fill="rgb(230,100,2)" fg:x="16626191290" fg:w="75573497534"/><text x="11.0461%" y="559.50">std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (75,484,920,533 samples, 49.02%)</title><rect x="10.8536%" y="533" width="49.0156%" height="15" fill="rgb(219,142,25)" fg:x="16714768291" fg:w="75484920533"/><text x="11.1036%" y="543.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>rpq::main::_{{closure}} (75,484,920,533 samples, 49.02%)</title><rect x="10.8536%" y="517" width="49.0156%" height="15" fill="rgb(240,73,43)" fg:x="16714768291" fg:w="75484920533"/><text x="11.1036%" y="527.50">rpq::main::_{{closure}}</text></g><g><title>uuid::v4::&lt;impl uuid::Uuid&gt;::new_v4 (4,531,872,608 samples, 2.94%)</title><rect x="56.9265%" y="501" width="2.9427%" height="15" fill="rgb(214,114,15)" fg:x="87667816216" fg:w="4531872608"/><text x="57.1765%" y="511.50">uu..</text></g><g><title>uuid::rng::u128 (4,040,189,441 samples, 2.62%)</title><rect x="57.2457%" y="485" width="2.6235%" height="15" fill="rgb(207,130,4)" fg:x="88159499383" fg:w="4040189441"/><text x="57.4957%" y="495.50">uu..</text></g><g><title>getrandom::getrandom (3,560,641,249 samples, 2.31%)</title><rect x="57.5571%" y="469" width="2.3121%" height="15" fill="rgb(221,25,40)" fg:x="88639047575" fg:w="3560641249"/><text x="57.8071%" y="479.50">g..</text></g><g><title>getrandom::getrandom_uninit (3,560,641,249 samples, 2.31%)</title><rect x="57.5571%" y="453" width="2.3121%" height="15" fill="rgb(241,184,7)" fg:x="88639047575" fg:w="3560641249"/><text x="57.8071%" y="463.50">g..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (75,575,773,646 samples, 49.07%)</title><rect x="10.7961%" y="677" width="49.0746%" height="15" fill="rgb(235,159,4)" fg:x="16626191290" fg:w="75575773646"/><text x="11.0461%" y="687.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (75,575,773,646 samples, 49.07%)</title><rect x="10.7961%" y="661" width="49.0746%" height="15" fill="rgb(214,87,48)" fg:x="16626191290" fg:w="75575773646"/><text x="11.0461%" y="671.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (75,575,773,646 samples, 49.07%)</title><rect x="10.7961%" y="645" width="49.0746%" height="15" fill="rgb(246,198,24)" fg:x="16626191290" fg:w="75575773646"/><text x="11.0461%" y="655.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (75,575,773,646 samples, 49.07%)</title><rect x="10.7961%" y="629" width="49.0746%" height="15" fill="rgb(209,66,40)" fg:x="16626191290" fg:w="75575773646"/><text x="11.0461%" y="639.50">std::thread::Builder::spawn_unchecked_::_{{closure}}</text></g><g><title>[libc.so.6] (75,598,342,331 samples, 49.09%)</title><rect x="10.7848%" y="709" width="49.0892%" height="15" fill="rgb(233,147,39)" fg:x="16608786753" fg:w="75598342331"/><text x="11.0348%" y="719.50">[libc.so.6]</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (75,580,937,794 samples, 49.08%)</title><rect x="10.7961%" y="693" width="49.0779%" height="15" fill="rgb(231,145,52)" fg:x="16626191290" fg:w="75580937794"/><text x="11.0461%" y="703.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>entry_SYSCALL_64 (94,199,948 samples, 0.06%)</title><rect x="59.8740%" y="709" width="0.0612%" height="15" fill="rgb(206,20,26)" fg:x="92207129084" fg:w="94199948"/><text x="60.1240%" y="719.50"></text></g><g><title>entry_SYSRETQ_unsafe_stack (19,323,494 samples, 0.01%)</title><rect x="59.9352%" y="709" width="0.0125%" height="15" fill="rgb(238,220,4)" fg:x="92301329032" fg:w="19323494"/><text x="60.1852%" y="719.50"></text></g><g><title>getrandom::imp::getrandom_inner (357,735,857 samples, 0.23%)</title><rect x="59.9478%" y="709" width="0.2323%" height="15" fill="rgb(252,195,42)" fg:x="92320652526" fg:w="357735857"/><text x="60.1978%" y="719.50"></text></g><g><title>getrandom::util_libc::sys_fill_exact (350,131,598 samples, 0.23%)</title><rect x="59.9527%" y="693" width="0.2274%" height="15" fill="rgb(209,10,6)" fg:x="92328256785" fg:w="350131598"/><text x="60.2027%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_mut (40,528,576 samples, 0.03%)</title><rect x="60.1537%" y="677" width="0.0263%" height="15" fill="rgb(229,3,52)" fg:x="92637859807" fg:w="40528576"/><text x="60.4037%" y="687.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_mut (40,528,576 samples, 0.03%)</title><rect x="60.1537%" y="661" width="0.0263%" height="15" fill="rgb(253,49,37)" fg:x="92637859807" fg:w="40528576"/><text x="60.4037%" y="671.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_mut (40,528,576 samples, 0.03%)</title><rect x="60.1537%" y="645" width="0.0263%" height="15" fill="rgb(240,103,49)" fg:x="92637859807" fg:w="40528576"/><text x="60.4037%" y="655.50"></text></g><g><title>rpq::bpq::BucketPriorityQueue::add_bucket (353,370,043 samples, 0.23%)</title><rect x="60.1801%" y="709" width="0.2295%" height="15" fill="rgb(250,182,30)" fg:x="92678388383" fg:w="353370043"/><text x="60.4301%" y="719.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (345,398,239 samples, 0.22%)</title><rect x="60.1852%" y="693" width="0.2243%" height="15" fill="rgb(248,8,30)" fg:x="92686360187" fg:w="345398239"/><text x="60.4352%" y="703.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read (345,398,239 samples, 0.22%)</title><rect x="60.1852%" y="677" width="0.2243%" height="15" fill="rgb(237,120,30)" fg:x="92686360187" fg:w="345398239"/><text x="60.4352%" y="687.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::is_read_lockable (245,170,305 samples, 0.16%)</title><rect x="60.2503%" y="661" width="0.1592%" height="15" fill="rgb(221,146,34)" fg:x="92786588121" fg:w="245170305"/><text x="60.5003%" y="671.50"></text></g><g><title>uuid::fmt::&lt;impl core::fmt::Display for uuid::Uuid&gt;::fmt (21,357,036 samples, 0.01%)</title><rect x="60.4122%" y="709" width="0.0139%" height="15" fill="rgb(242,55,13)" fg:x="93035854458" fg:w="21357036"/><text x="60.6622%" y="719.50"></text></g><g><title>uuid::fmt::&lt;impl core::fmt::LowerHex for uuid::Uuid&gt;::fmt (17,127,082 samples, 0.01%)</title><rect x="60.4149%" y="693" width="0.0111%" height="15" fill="rgb(242,112,31)" fg:x="93040084412" fg:w="17127082"/><text x="60.6649%" y="703.50"></text></g><g><title>&lt;uuid::fmt::Hyphenated as core::fmt::LowerHex&gt;::fmt (17,127,082 samples, 0.01%)</title><rect x="60.4149%" y="677" width="0.0111%" height="15" fill="rgb(249,192,27)" fg:x="93040084412" fg:w="17127082"/><text x="60.6649%" y="687.50"></text></g><g><title>[libc.so.6] (80,655,194,242 samples, 52.37%)</title><rect x="8.0553%" y="725" width="52.3729%" height="15" fill="rgb(208,204,44)" fg:x="12405281340" fg:w="80655194242"/><text x="8.3053%" y="735.50">[libc.so.6]</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (81,564,207 samples, 0.05%)</title><rect x="60.4368%" y="709" width="0.0530%" height="15" fill="rgb(208,93,54)" fg:x="93073816606" fg:w="81564207"/><text x="60.6868%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (42,071,990 samples, 0.03%)</title><rect x="60.4625%" y="693" width="0.0273%" height="15" fill="rgb(242,1,31)" fg:x="93113308823" fg:w="42071990"/><text x="60.7125%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (42,071,990 samples, 0.03%)</title><rect x="60.4625%" y="677" width="0.0273%" height="15" fill="rgb(241,83,25)" fg:x="93113308823" fg:w="42071990"/><text x="60.7125%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (42,071,990 samples, 0.03%)</title><rect x="60.4625%" y="661" width="0.0273%" height="15" fill="rgb(205,169,50)" fg:x="93113308823" fg:w="42071990"/><text x="60.7125%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (42,071,990 samples, 0.03%)</title><rect x="60.4625%" y="645" width="0.0273%" height="15" fill="rgb(239,186,37)" fg:x="93113308823" fg:w="42071990"/><text x="60.7125%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (29,195,633 samples, 0.02%)</title><rect x="60.4708%" y="629" width="0.0190%" height="15" fill="rgb(205,221,10)" fg:x="93126185180" fg:w="29195633"/><text x="60.7208%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (29,195,633 samples, 0.02%)</title><rect x="60.4708%" y="613" width="0.0190%" height="15" fill="rgb(218,196,15)" fg:x="93126185180" fg:w="29195633"/><text x="60.7208%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (26,006,712 samples, 0.02%)</title><rect x="60.4898%" y="709" width="0.0169%" height="15" fill="rgb(218,196,35)" fg:x="93155380813" fg:w="26006712"/><text x="60.7398%" y="719.50"></text></g><g><title>alloc::string::String::push_str (16,207,538 samples, 0.01%)</title><rect x="60.4962%" y="693" width="0.0105%" height="15" fill="rgb(233,63,24)" fg:x="93165179987" fg:w="16207538"/><text x="60.7462%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (16,207,538 samples, 0.01%)</title><rect x="60.4962%" y="677" width="0.0105%" height="15" fill="rgb(225,8,4)" fg:x="93165179987" fg:w="16207538"/><text x="60.7462%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (16,207,538 samples, 0.01%)</title><rect x="60.4962%" y="661" width="0.0105%" height="15" fill="rgb(234,105,35)" fg:x="93165179987" fg:w="16207538"/><text x="60.7462%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (16,207,538 samples, 0.01%)</title><rect x="60.4962%" y="645" width="0.0105%" height="15" fill="rgb(236,21,32)" fg:x="93165179987" fg:w="16207538"/><text x="60.7462%" y="655.50"></text></g><g><title>[libc.so.6] (494,502,169 samples, 0.32%)</title><rect x="60.5067%" y="709" width="0.3211%" height="15" fill="rgb(228,109,6)" fg:x="93181387525" fg:w="494502169"/><text x="60.7567%" y="719.50"></text></g><g><title>__rdl_alloc (118,490,839 samples, 0.08%)</title><rect x="60.8306%" y="709" width="0.0769%" height="15" fill="rgb(229,215,31)" fg:x="93680188814" fg:w="118490839"/><text x="61.0806%" y="719.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (101,393,882 samples, 0.07%)</title><rect x="60.8417%" y="693" width="0.0658%" height="15" fill="rgb(221,52,54)" fg:x="93697285771" fg:w="101393882"/><text x="61.0917%" y="703.50"></text></g><g><title>__rust_alloc (34,901,540 samples, 0.02%)</title><rect x="60.9099%" y="709" width="0.0227%" height="15" fill="rgb(252,129,43)" fg:x="93802323788" fg:w="34901540"/><text x="61.1599%" y="719.50"></text></g><g><title>__vdso_clock_gettime (38,426,197 samples, 0.02%)</title><rect x="60.9375%" y="709" width="0.0250%" height="15" fill="rgb(248,183,27)" fg:x="93844934023" fg:w="38426197"/><text x="61.1875%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (16,277,390 samples, 0.01%)</title><rect x="61.0034%" y="677" width="0.0106%" height="15" fill="rgb(250,0,22)" fg:x="93946367111" fg:w="16277390"/><text x="61.2534%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (21,371,602 samples, 0.01%)</title><rect x="61.0140%" y="677" width="0.0139%" height="15" fill="rgb(213,166,10)" fg:x="93962644501" fg:w="21371602"/><text x="61.2640%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (123,418,092 samples, 0.08%)</title><rect x="60.9675%" y="709" width="0.0801%" height="15" fill="rgb(207,163,36)" fg:x="93891037525" fg:w="123418092"/><text x="61.2175%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (109,798,025 samples, 0.07%)</title><rect x="60.9763%" y="693" width="0.0713%" height="15" fill="rgb(208,122,22)" fg:x="93904657592" fg:w="109798025"/><text x="61.2263%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (44,021,687 samples, 0.03%)</title><rect x="61.0476%" y="709" width="0.0286%" height="15" fill="rgb(207,104,49)" fg:x="94014455617" fg:w="44021687"/><text x="61.2976%" y="719.50"></text></g><g><title>cfree (19,969,021 samples, 0.01%)</title><rect x="61.0762%" y="709" width="0.0130%" height="15" fill="rgb(248,211,50)" fg:x="94058477304" fg:w="19969021"/><text x="61.3262%" y="719.50"></text></g><g><title>clock_gettime (118,905,381 samples, 0.08%)</title><rect x="61.0892%" y="709" width="0.0772%" height="15" fill="rgb(217,13,45)" fg:x="94078446325" fg:w="118905381"/><text x="61.3392%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_mut (60,141,131 samples, 0.04%)</title><rect x="61.4733%" y="677" width="0.0391%" height="15" fill="rgb(211,216,49)" fg:x="94669990299" fg:w="60141131"/><text x="61.7233%" y="687.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_mut (60,141,131 samples, 0.04%)</title><rect x="61.4733%" y="661" width="0.0391%" height="15" fill="rgb(221,58,53)" fg:x="94669990299" fg:w="60141131"/><text x="61.7233%" y="671.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_mut (60,141,131 samples, 0.04%)</title><rect x="61.4733%" y="645" width="0.0391%" height="15" fill="rgb(220,112,41)" fg:x="94669990299" fg:w="60141131"/><text x="61.7233%" y="655.50"></text></g><g><title>getrandom::imp::getrandom_inner (528,555,401 samples, 0.34%)</title><rect x="61.1713%" y="709" width="0.3432%" height="15" fill="rgb(236,38,28)" fg:x="94204877318" fg:w="528555401"/><text x="61.4213%" y="719.50"></text></g><g><title>getrandom::util_libc::sys_fill_exact (493,192,170 samples, 0.32%)</title><rect x="61.1942%" y="693" width="0.3203%" height="15" fill="rgb(227,195,22)" fg:x="94240240549" fg:w="493192170"/><text x="61.4442%" y="703.50"></text></g><g><title>malloc (72,648,408 samples, 0.05%)</title><rect x="61.5145%" y="709" width="0.0472%" height="15" fill="rgb(214,55,33)" fg:x="94733432719" fg:w="72648408"/><text x="61.7645%" y="719.50"></text></g><g><title>rand::rng::Rng::gen_range (47,681,135 samples, 0.03%)</title><rect x="61.5617%" y="709" width="0.0310%" height="15" fill="rgb(248,80,13)" fg:x="94806081127" fg:w="47681135"/><text x="61.8117%" y="719.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::sample_single (28,303,369 samples, 0.02%)</title><rect x="61.5742%" y="693" width="0.0184%" height="15" fill="rgb(238,52,6)" fg:x="94825458893" fg:w="28303369"/><text x="61.8242%" y="703.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u64&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (28,303,369 samples, 0.02%)</title><rect x="61.5742%" y="677" width="0.0184%" height="15" fill="rgb(224,198,47)" fg:x="94825458893" fg:w="28303369"/><text x="61.8242%" y="687.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u64&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single_inclusive (28,303,369 samples, 0.02%)</title><rect x="61.5742%" y="661" width="0.0184%" height="15" fill="rgb(233,171,20)" fg:x="94825458893" fg:w="28303369"/><text x="61.8242%" y="671.50"></text></g><g><title>rand::rngs::thread::thread_rng (30,920,315 samples, 0.02%)</title><rect x="61.5926%" y="709" width="0.0201%" height="15" fill="rgb(241,30,25)" fg:x="94853762262" fg:w="30920315"/><text x="61.8426%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (15,684,907 samples, 0.01%)</title><rect x="61.6025%" y="693" width="0.0102%" height="15" fill="rgb(207,171,38)" fg:x="94868997670" fg:w="15684907"/><text x="61.8525%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (15,684,907 samples, 0.01%)</title><rect x="61.6025%" y="677" width="0.0102%" height="15" fill="rgb(234,70,1)" fg:x="94868997670" fg:w="15684907"/><text x="61.8525%" y="687.50"></text></g><g><title>ppv_lite86::x86_64::sse2::avx2::_&lt;impl ppv_lite86::types::MultiLane&lt;[ppv_lite86::x86_64::sse2::u32x4_sse2&lt;ppv_lite86::x86_64::YesS3,ppv_lite86::x86_64::YesS4,NI&gt;: 4]&gt; for ppv_lite86::soft::x2&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt;,ppv_lite86::x86_64::sse2::G0&gt;&gt;::from_lanes (20,897,161 samples, 0.01%)</title><rect x="61.6297%" y="661" width="0.0136%" height="15" fill="rgb(232,178,18)" fg:x="94910927254" fg:w="20897161"/><text x="61.8797%" y="671.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::MultiLane&lt;[ppv_lite86::x86_64::sse2::u32x4_sse2&lt;ppv_lite86::x86_64::YesS3,ppv_lite86::x86_64::YesS4,NI&gt;: 2]&gt;&gt;::from_lanes (20,897,161 samples, 0.01%)</title><rect x="61.6297%" y="645" width="0.0136%" height="15" fill="rgb(241,78,40)" fg:x="94910927254" fg:w="20897161"/><text x="61.8797%" y="655.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_m128i (20,897,161 samples, 0.01%)</title><rect x="61.6297%" y="629" width="0.0136%" height="15" fill="rgb(222,35,25)" fg:x="94910927254" fg:w="20897161"/><text x="61.8797%" y="639.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_m128i (20,897,161 samples, 0.01%)</title><rect x="61.6297%" y="613" width="0.0136%" height="15" fill="rgb(207,92,16)" fg:x="94910927254" fg:w="20897161"/><text x="61.8797%" y="623.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_m128 (20,897,161 samples, 0.01%)</title><rect x="61.6297%" y="597" width="0.0136%" height="15" fill="rgb(216,59,51)" fg:x="94910927254" fg:w="20897161"/><text x="61.8797%" y="607.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (16,158,808 samples, 0.01%)</title><rect x="61.6467%" y="645" width="0.0105%" height="15" fill="rgb(213,80,28)" fg:x="94936977811" fg:w="16158808"/><text x="61.8967%" y="655.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (16,158,808 samples, 0.01%)</title><rect x="61.6467%" y="629" width="0.0105%" height="15" fill="rgb(220,93,7)" fg:x="94936977811" fg:w="16158808"/><text x="61.8967%" y="639.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (16,158,808 samples, 0.01%)</title><rect x="61.6467%" y="613" width="0.0105%" height="15" fill="rgb(225,24,44)" fg:x="94936977811" fg:w="16158808"/><text x="61.8967%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (16,158,808 samples, 0.01%)</title><rect x="61.6467%" y="597" width="0.0105%" height="15" fill="rgb(243,74,40)" fg:x="94936977811" fg:w="16158808"/><text x="61.8967%" y="607.50"></text></g><g><title>rand_chacha::guts::round (39,965,941 samples, 0.03%)</title><rect x="61.6467%" y="661" width="0.0260%" height="15" fill="rgb(228,39,7)" fg:x="94936977811" fg:w="39965941"/><text x="61.8967%" y="671.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (19,797,113 samples, 0.01%)</title><rect x="61.6598%" y="645" width="0.0129%" height="15" fill="rgb(227,79,8)" fg:x="94957146639" fg:w="19797113"/><text x="61.9098%" y="655.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (19,797,113 samples, 0.01%)</title><rect x="61.6598%" y="629" width="0.0129%" height="15" fill="rgb(236,58,11)" fg:x="94957146639" fg:w="19797113"/><text x="61.9098%" y="639.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (19,797,113 samples, 0.01%)</title><rect x="61.6598%" y="613" width="0.0129%" height="15" fill="rgb(249,63,35)" fg:x="94957146639" fg:w="19797113"/><text x="61.9098%" y="623.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (94,029,639 samples, 0.06%)</title><rect x="61.6148%" y="709" width="0.0611%" height="15" fill="rgb(252,114,16)" fg:x="94887992565" fg:w="94029639"/><text x="61.8648%" y="719.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (94,029,639 samples, 0.06%)</title><rect x="61.6148%" y="693" width="0.0611%" height="15" fill="rgb(254,151,24)" fg:x="94887992565" fg:w="94029639"/><text x="61.8648%" y="703.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (94,029,639 samples, 0.06%)</title><rect x="61.6148%" y="677" width="0.0611%" height="15" fill="rgb(253,54,39)" fg:x="94887992565" fg:w="94029639"/><text x="61.8648%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,rpq::pq::PriorityQueue&lt;i32&gt;&gt;&gt;&gt; (139,086,802 samples, 0.09%)</title><rect x="61.8921%" y="693" width="0.0903%" height="15" fill="rgb(243,25,45)" fg:x="95314947057" fg:w="139086802"/><text x="62.1421%" y="703.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (139,086,802 samples, 0.09%)</title><rect x="61.8921%" y="677" width="0.0903%" height="15" fill="rgb(234,134,9)" fg:x="95314947057" fg:w="139086802"/><text x="62.1421%" y="687.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read_unlock (139,086,802 samples, 0.09%)</title><rect x="61.8921%" y="661" width="0.0903%" height="15" fill="rgb(227,166,31)" fg:x="95314947057" fg:w="139086802"/><text x="62.1421%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (55,205,588 samples, 0.04%)</title><rect x="62.0136%" y="565" width="0.0358%" height="15" fill="rgb(245,143,41)" fg:x="95502019299" fg:w="55205588"/><text x="62.2636%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (17,122,466 samples, 0.01%)</title><rect x="62.0383%" y="549" width="0.0111%" height="15" fill="rgb(238,181,32)" fg:x="95540102421" fg:w="17122466"/><text x="62.2883%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (314,818,982 samples, 0.20%)</title><rect x="62.1293%" y="549" width="0.2044%" height="15" fill="rgb(224,113,18)" fg:x="95680330126" fg:w="314818982"/><text x="62.3793%" y="559.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (721,721,691 samples, 0.47%)</title><rect x="61.9979%" y="613" width="0.4686%" height="15" fill="rgb(240,229,28)" fg:x="95477918134" fg:w="721721691"/><text x="62.2479%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (721,721,691 samples, 0.47%)</title><rect x="61.9979%" y="597" width="0.4686%" height="15" fill="rgb(250,185,3)" fg:x="95477918134" fg:w="721721691"/><text x="62.2479%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (721,721,691 samples, 0.47%)</title><rect x="61.9979%" y="581" width="0.4686%" height="15" fill="rgb(212,59,25)" fg:x="95477918134" fg:w="721721691"/><text x="62.2479%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (642,414,938 samples, 0.42%)</title><rect x="62.0494%" y="565" width="0.4171%" height="15" fill="rgb(221,87,20)" fg:x="95557224887" fg:w="642414938"/><text x="62.2994%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (204,490,717 samples, 0.13%)</title><rect x="62.3338%" y="549" width="0.1328%" height="15" fill="rgb(213,74,28)" fg:x="95995149108" fg:w="204490717"/><text x="62.5838%" y="559.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (20,709,260 samples, 0.01%)</title><rect x="62.4666%" y="613" width="0.0134%" height="15" fill="rgb(224,132,34)" fg:x="96199639825" fg:w="20709260"/><text x="62.7166%" y="623.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (20,709,260 samples, 0.01%)</title><rect x="62.4666%" y="597" width="0.0134%" height="15" fill="rgb(222,101,24)" fg:x="96199639825" fg:w="20709260"/><text x="62.7166%" y="607.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (20,709,260 samples, 0.01%)</title><rect x="62.4666%" y="581" width="0.0134%" height="15" fill="rgb(254,142,4)" fg:x="96199639825" fg:w="20709260"/><text x="62.7166%" y="591.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (20,709,260 samples, 0.01%)</title><rect x="62.4666%" y="565" width="0.0134%" height="15" fill="rgb(230,229,49)" fg:x="96199639825" fg:w="20709260"/><text x="62.7166%" y="575.50"></text></g><g><title>hashbrown::map::make_hash (767,698,916 samples, 0.50%)</title><rect x="61.9925%" y="645" width="0.4985%" height="15" fill="rgb(238,70,47)" fg:x="95469656187" fg:w="767698916"/><text x="62.2425%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (767,698,916 samples, 0.50%)</title><rect x="61.9925%" y="629" width="0.4985%" height="15" fill="rgb(231,160,17)" fg:x="95469656187" fg:w="767698916"/><text x="62.2425%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (17,006,018 samples, 0.01%)</title><rect x="62.4800%" y="613" width="0.0110%" height="15" fill="rgb(218,68,53)" fg:x="96220349085" fg:w="17006018"/><text x="62.7300%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (17,006,018 samples, 0.01%)</title><rect x="62.4800%" y="597" width="0.0110%" height="15" fill="rgb(236,111,10)" fg:x="96220349085" fg:w="17006018"/><text x="62.7300%" y="607.50"></text></g><g><title>core::hash::Hasher::write_u64 (17,006,018 samples, 0.01%)</title><rect x="62.4800%" y="581" width="0.0110%" height="15" fill="rgb(224,34,41)" fg:x="96220349085" fg:w="17006018"/><text x="62.7300%" y="591.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (17,006,018 samples, 0.01%)</title><rect x="62.4800%" y="565" width="0.0110%" height="15" fill="rgb(241,118,19)" fg:x="96220349085" fg:w="17006018"/><text x="62.7300%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (17,006,018 samples, 0.01%)</title><rect x="62.4800%" y="549" width="0.0110%" height="15" fill="rgb(238,129,25)" fg:x="96220349085" fg:w="17006018"/><text x="62.7300%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (17,006,018 samples, 0.01%)</title><rect x="62.4800%" y="533" width="0.0110%" height="15" fill="rgb(238,22,31)" fg:x="96220349085" fg:w="17006018"/><text x="62.7300%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (123,745,813 samples, 0.08%)</title><rect x="62.5228%" y="597" width="0.0804%" height="15" fill="rgb(222,174,48)" fg:x="96286301597" fg:w="123745813"/><text x="62.7728%" y="607.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (40,385,796 samples, 0.03%)</title><rect x="62.5770%" y="581" width="0.0262%" height="15" fill="rgb(206,152,40)" fg:x="96369661614" fg:w="40385796"/><text x="62.8270%" y="591.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u16&gt;::new (24,878,197 samples, 0.02%)</title><rect x="62.5870%" y="565" width="0.0162%" height="15" fill="rgb(218,99,54)" fg:x="96385169213" fg:w="24878197"/><text x="62.8370%" y="575.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (24,927,448 samples, 0.02%)</title><rect x="62.6032%" y="581" width="0.0162%" height="15" fill="rgb(220,174,26)" fg:x="96410047410" fg:w="24927448"/><text x="62.8532%" y="591.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (24,927,448 samples, 0.02%)</title><rect x="62.6032%" y="565" width="0.0162%" height="15" fill="rgb(245,116,9)" fg:x="96410047410" fg:w="24927448"/><text x="62.8532%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (24,927,448 samples, 0.02%)</title><rect x="62.6032%" y="549" width="0.0162%" height="15" fill="rgb(209,72,35)" fg:x="96410047410" fg:w="24927448"/><text x="62.8532%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (24,927,448 samples, 0.02%)</title><rect x="62.6032%" y="533" width="0.0162%" height="15" fill="rgb(226,126,21)" fg:x="96410047410" fg:w="24927448"/><text x="62.8532%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (45,889,682 samples, 0.03%)</title><rect x="62.6032%" y="597" width="0.0298%" height="15" fill="rgb(227,192,1)" fg:x="96410047410" fg:w="45889682"/><text x="62.8532%" y="607.50"></text></g><g><title>hashbrown::raw::h2 (31,788,557 samples, 0.02%)</title><rect x="62.6330%" y="597" width="0.0206%" height="15" fill="rgb(237,180,29)" fg:x="96455937092" fg:w="31788557"/><text x="62.8830%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,029,675,421 samples, 0.67%)</title><rect x="61.9878%" y="693" width="0.6686%" height="15" fill="rgb(230,197,35)" fg:x="95462308152" fg:w="1029675421"/><text x="62.2378%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,029,675,421 samples, 0.67%)</title><rect x="61.9878%" y="677" width="0.6686%" height="15" fill="rgb(246,193,31)" fg:x="95462308152" fg:w="1029675421"/><text x="62.2378%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,022,327,386 samples, 0.66%)</title><rect x="61.9925%" y="661" width="0.6638%" height="15" fill="rgb(241,36,4)" fg:x="95469656187" fg:w="1022327386"/><text x="62.2425%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (254,628,470 samples, 0.17%)</title><rect x="62.4910%" y="645" width="0.1653%" height="15" fill="rgb(241,130,17)" fg:x="96237355103" fg:w="254628470"/><text x="62.7410%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (254,628,470 samples, 0.17%)</title><rect x="62.4910%" y="629" width="0.1653%" height="15" fill="rgb(206,137,32)" fg:x="96237355103" fg:w="254628470"/><text x="62.7410%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (254,628,470 samples, 0.17%)</title><rect x="62.4910%" y="613" width="0.1653%" height="15" fill="rgb(237,228,51)" fg:x="96237355103" fg:w="254628470"/><text x="62.7410%" y="623.50"></text></g><g><title>std::sync::poison::Flag::borrow (64,160,595 samples, 0.04%)</title><rect x="62.6564%" y="661" width="0.0417%" height="15" fill="rgb(243,6,42)" fg:x="96491983573" fg:w="64160595"/><text x="62.9064%" y="671.50"></text></g><g><title>std::sync::poison::Flag::get (20,413,733 samples, 0.01%)</title><rect x="62.6848%" y="645" width="0.0133%" height="15" fill="rgb(251,74,28)" fg:x="96535730435" fg:w="20413733"/><text x="62.9348%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (20,413,733 samples, 0.01%)</title><rect x="62.6848%" y="629" width="0.0133%" height="15" fill="rgb(218,20,49)" fg:x="96535730435" fg:w="20413733"/><text x="62.9348%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_load (20,413,733 samples, 0.01%)</title><rect x="62.6848%" y="613" width="0.0133%" height="15" fill="rgb(238,28,14)" fg:x="96535730435" fg:w="20413733"/><text x="62.9348%" y="623.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (81,344,813 samples, 0.05%)</title><rect x="62.6564%" y="677" width="0.0528%" height="15" fill="rgb(229,40,46)" fg:x="96491983573" fg:w="81344813"/><text x="62.9064%" y="687.50"></text></g><g><title>std::sync::poison::map_result (17,184,218 samples, 0.01%)</title><rect x="62.6981%" y="661" width="0.0112%" height="15" fill="rgb(244,195,20)" fg:x="96556144168" fg:w="17184218"/><text x="62.9481%" y="671.50"></text></g><g><title>rpq::RPQ&lt;T&gt;::dequeue (2,111,917,833 samples, 1.37%)</title><rect x="61.6759%" y="709" width="1.3714%" height="15" fill="rgb(253,56,35)" fg:x="94982022204" fg:w="2111917833"/><text x="61.9259%" y="719.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (601,956,464 samples, 0.39%)</title><rect x="62.6564%" y="693" width="0.3909%" height="15" fill="rgb(210,149,44)" fg:x="96491983573" fg:w="601956464"/><text x="62.9064%" y="703.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read (520,611,651 samples, 0.34%)</title><rect x="62.7092%" y="677" width="0.3381%" height="15" fill="rgb(240,135,12)" fg:x="96573328386" fg:w="520611651"/><text x="62.9592%" y="687.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::is_read_lockable (280,496,221 samples, 0.18%)</title><rect x="62.8651%" y="661" width="0.1821%" height="15" fill="rgb(251,24,50)" fg:x="96813443816" fg:w="280496221"/><text x="63.1151%" y="671.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (255,680,500 samples, 0.17%)</title><rect x="63.1903%" y="677" width="0.1660%" height="15" fill="rgb(243,200,47)" fg:x="97314149458" fg:w="255680500"/><text x="63.4403%" y="687.50"></text></g><g><title>&lt;std::time::Instant as core::clone::Clone&gt;::clone (30,347,968 samples, 0.02%)</title><rect x="63.3563%" y="677" width="0.0197%" height="15" fill="rgb(224,166,26)" fg:x="97569829958" fg:w="30347968"/><text x="63.6063%" y="687.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for bool&gt;::clone (20,472,575 samples, 0.01%)</title><rect x="63.3760%" y="677" width="0.0133%" height="15" fill="rgb(233,0,47)" fg:x="97600177926" fg:w="20472575"/><text x="63.6260%" y="687.50"></text></g><g><title>&lt;rpq::pq::Item&lt;T&gt; as core::clone::Clone&gt;::clone (471,945,015 samples, 0.31%)</title><rect x="63.0854%" y="693" width="0.3065%" height="15" fill="rgb(253,80,5)" fg:x="97152597624" fg:w="471945015"/><text x="63.3354%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (42,338,379 samples, 0.03%)</title><rect x="63.4920%" y="549" width="0.0275%" height="15" fill="rgb(214,133,25)" fg:x="97778778281" fg:w="42338379"/><text x="63.7420%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (134,160,925 samples, 0.09%)</title><rect x="63.4511%" y="565" width="0.0871%" height="15" fill="rgb(209,27,14)" fg:x="97715876689" fg:w="134160925"/><text x="63.7011%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (28,920,954 samples, 0.02%)</title><rect x="63.5195%" y="549" width="0.0188%" height="15" fill="rgb(219,102,51)" fg:x="97821116660" fg:w="28920954"/><text x="63.7695%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (272,638,811 samples, 0.18%)</title><rect x="63.6266%" y="549" width="0.1770%" height="15" fill="rgb(237,18,16)" fg:x="97986168351" fg:w="272638811"/><text x="63.8766%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (126,595,831 samples, 0.08%)</title><rect x="63.8037%" y="549" width="0.0822%" height="15" fill="rgb(241,85,17)" fg:x="98258807162" fg:w="126595831"/><text x="64.0537%" y="559.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (726,067,043 samples, 0.47%)</title><rect x="63.4150%" y="613" width="0.4715%" height="15" fill="rgb(236,90,42)" fg:x="97660223207" fg:w="726067043"/><text x="63.6650%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (726,067,043 samples, 0.47%)</title><rect x="63.4150%" y="597" width="0.4715%" height="15" fill="rgb(249,57,21)" fg:x="97660223207" fg:w="726067043"/><text x="63.6650%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (726,067,043 samples, 0.47%)</title><rect x="63.4150%" y="581" width="0.4715%" height="15" fill="rgb(243,12,36)" fg:x="97660223207" fg:w="726067043"/><text x="63.6650%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (536,252,636 samples, 0.35%)</title><rect x="63.5382%" y="565" width="0.3482%" height="15" fill="rgb(253,128,47)" fg:x="97850037614" fg:w="536252636"/><text x="63.7882%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (16,292,010 samples, 0.01%)</title><rect x="63.9166%" y="501" width="0.0106%" height="15" fill="rgb(207,33,20)" fg:x="98432736331" fg:w="16292010"/><text x="64.1666%" y="511.50"></text></g><g><title>hashbrown::map::make_hash (809,058,971 samples, 0.53%)</title><rect x="63.4101%" y="645" width="0.5254%" height="15" fill="rgb(233,215,35)" fg:x="97652654747" fg:w="809058971"/><text x="63.6601%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (809,058,971 samples, 0.53%)</title><rect x="63.4101%" y="629" width="0.5254%" height="15" fill="rgb(249,188,52)" fg:x="97652654747" fg:w="809058971"/><text x="63.6601%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (71,159,400 samples, 0.05%)</title><rect x="63.8892%" y="613" width="0.0462%" height="15" fill="rgb(225,12,32)" fg:x="98390554318" fg:w="71159400"/><text x="64.1392%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (67,810,605 samples, 0.04%)</title><rect x="63.8914%" y="597" width="0.0440%" height="15" fill="rgb(247,98,14)" fg:x="98393903113" fg:w="67810605"/><text x="64.1414%" y="607.50"></text></g><g><title>core::hash::Hasher::write_u64 (67,810,605 samples, 0.04%)</title><rect x="63.8914%" y="581" width="0.0440%" height="15" fill="rgb(247,219,48)" fg:x="98393903113" fg:w="67810605"/><text x="64.1414%" y="591.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (67,810,605 samples, 0.04%)</title><rect x="63.8914%" y="565" width="0.0440%" height="15" fill="rgb(253,60,48)" fg:x="98393903113" fg:w="67810605"/><text x="64.1414%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (67,810,605 samples, 0.04%)</title><rect x="63.8914%" y="549" width="0.0440%" height="15" fill="rgb(245,15,52)" fg:x="98393903113" fg:w="67810605"/><text x="64.1414%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (67,810,605 samples, 0.04%)</title><rect x="63.8914%" y="533" width="0.0440%" height="15" fill="rgb(220,133,28)" fg:x="98393903113" fg:w="67810605"/><text x="64.1414%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (51,961,004 samples, 0.03%)</title><rect x="63.9017%" y="517" width="0.0337%" height="15" fill="rgb(217,180,4)" fg:x="98409752714" fg:w="51961004"/><text x="64.1517%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (131,718,472 samples, 0.09%)</title><rect x="63.9695%" y="597" width="0.0855%" height="15" fill="rgb(251,24,1)" fg:x="98514153977" fg:w="131718472"/><text x="64.2195%" y="607.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (55,167,350 samples, 0.04%)</title><rect x="64.0192%" y="581" width="0.0358%" height="15" fill="rgb(212,185,49)" fg:x="98590705099" fg:w="55167350"/><text x="64.2692%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (85,771,578 samples, 0.06%)</title><rect x="64.0647%" y="581" width="0.0557%" height="15" fill="rgb(215,175,22)" fg:x="98660775715" fg:w="85771578"/><text x="64.3147%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (85,771,578 samples, 0.06%)</title><rect x="64.0647%" y="565" width="0.0557%" height="15" fill="rgb(250,205,14)" fg:x="98660775715" fg:w="85771578"/><text x="64.3147%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (85,771,578 samples, 0.06%)</title><rect x="64.0647%" y="549" width="0.0557%" height="15" fill="rgb(225,211,22)" fg:x="98660775715" fg:w="85771578"/><text x="64.3147%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (85,771,578 samples, 0.06%)</title><rect x="64.0647%" y="533" width="0.0557%" height="15" fill="rgb(251,179,42)" fg:x="98660775715" fg:w="85771578"/><text x="64.3147%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (172,069,163 samples, 0.11%)</title><rect x="64.0550%" y="597" width="0.1117%" height="15" fill="rgb(208,216,51)" fg:x="98645872449" fg:w="172069163"/><text x="64.3050%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (71,394,319 samples, 0.05%)</title><rect x="64.1204%" y="581" width="0.0464%" height="15" fill="rgb(235,36,11)" fg:x="98746547293" fg:w="71394319"/><text x="64.3704%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (71,394,319 samples, 0.05%)</title><rect x="64.1204%" y="565" width="0.0464%" height="15" fill="rgb(213,189,28)" fg:x="98746547293" fg:w="71394319"/><text x="64.3704%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (71,394,319 samples, 0.05%)</title><rect x="64.1204%" y="549" width="0.0464%" height="15" fill="rgb(227,203,42)" fg:x="98746547293" fg:w="71394319"/><text x="64.3704%" y="559.50"></text></g><g><title>hashbrown::raw::h2 (145,672,126 samples, 0.09%)</title><rect x="64.1667%" y="597" width="0.0946%" height="15" fill="rgb(244,72,36)" fg:x="98817941612" fg:w="145672126"/><text x="64.4167%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,348,326,626 samples, 0.88%)</title><rect x="63.3995%" y="693" width="0.8755%" height="15" fill="rgb(213,53,17)" fg:x="97636420222" fg:w="1348326626"/><text x="63.6495%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,348,326,626 samples, 0.88%)</title><rect x="63.3995%" y="677" width="0.8755%" height="15" fill="rgb(207,167,3)" fg:x="97636420222" fg:w="1348326626"/><text x="63.6495%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,348,326,626 samples, 0.88%)</title><rect x="63.3995%" y="661" width="0.8755%" height="15" fill="rgb(216,98,30)" fg:x="97636420222" fg:w="1348326626"/><text x="63.6495%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (523,033,130 samples, 0.34%)</title><rect x="63.9354%" y="645" width="0.3396%" height="15" fill="rgb(236,123,15)" fg:x="98461713718" fg:w="523033130"/><text x="64.1854%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (523,033,130 samples, 0.34%)</title><rect x="63.9354%" y="629" width="0.3396%" height="15" fill="rgb(248,81,50)" fg:x="98461713718" fg:w="523033130"/><text x="64.1854%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (523,033,130 samples, 0.34%)</title><rect x="63.9354%" y="613" width="0.3396%" height="15" fill="rgb(214,120,4)" fg:x="98461713718" fg:w="523033130"/><text x="64.1854%" y="623.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (15,826,939 samples, 0.01%)</title><rect x="64.2648%" y="597" width="0.0103%" height="15" fill="rgb(208,179,34)" fg:x="98968919909" fg:w="15826939"/><text x="64.5148%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (15,826,939 samples, 0.01%)</title><rect x="64.2648%" y="581" width="0.0103%" height="15" fill="rgb(227,140,7)" fg:x="98968919909" fg:w="15826939"/><text x="64.5148%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (25,487,316 samples, 0.02%)</title><rect x="65.1249%" y="661" width="0.0166%" height="15" fill="rgb(214,22,6)" fg:x="100293496672" fg:w="25487316"/><text x="65.3749%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (25,487,316 samples, 0.02%)</title><rect x="65.1249%" y="645" width="0.0166%" height="15" fill="rgb(207,137,27)" fg:x="100293496672" fg:w="25487316"/><text x="65.3749%" y="655.50"></text></g><g><title>rpq::RPQ&lt;T&gt;::enqueue (3,231,936,670 samples, 2.10%)</title><rect x="63.0473%" y="709" width="2.0986%" height="15" fill="rgb(210,8,46)" fg:x="97093940037" fg:w="3231936670"/><text x="63.2973%" y="719.50">r..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (1,341,129,859 samples, 0.87%)</title><rect x="64.2750%" y="693" width="0.8709%" height="15" fill="rgb(240,16,54)" fg:x="98984746848" fg:w="1341129859"/><text x="64.5250%" y="703.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read (1,273,216,746 samples, 0.83%)</title><rect x="64.3191%" y="677" width="0.8268%" height="15" fill="rgb(211,209,29)" fg:x="99052659961" fg:w="1273216746"/><text x="64.5691%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (221,119,874 samples, 0.14%)</title><rect x="65.1763%" y="645" width="0.1436%" height="15" fill="rgb(226,228,24)" fg:x="100372741662" fg:w="221119874"/><text x="65.4263%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (221,119,874 samples, 0.14%)</title><rect x="65.1763%" y="629" width="0.1436%" height="15" fill="rgb(222,84,9)" fg:x="100372741662" fg:w="221119874"/><text x="65.4263%" y="639.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (221,119,874 samples, 0.14%)</title><rect x="65.1763%" y="613" width="0.1436%" height="15" fill="rgb(234,203,30)" fg:x="100372741662" fg:w="221119874"/><text x="65.4263%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (94,218,836 samples, 0.06%)</title><rect x="65.2587%" y="597" width="0.0612%" height="15" fill="rgb(238,109,14)" fg:x="100499642700" fg:w="94218836"/><text x="65.5087%" y="607.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::contains (262,231,016 samples, 0.17%)</title><rect x="65.1738%" y="693" width="0.1703%" height="15" fill="rgb(233,206,34)" fg:x="100368866324" fg:w="262231016"/><text x="65.4238%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (262,231,016 samples, 0.17%)</title><rect x="65.1738%" y="677" width="0.1703%" height="15" fill="rgb(220,167,47)" fg:x="100368866324" fg:w="262231016"/><text x="65.4238%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (262,231,016 samples, 0.17%)</title><rect x="65.1738%" y="661" width="0.1703%" height="15" fill="rgb(238,105,10)" fg:x="100368866324" fg:w="262231016"/><text x="65.4238%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (37,235,804 samples, 0.02%)</title><rect x="65.3199%" y="645" width="0.0242%" height="15" fill="rgb(213,227,17)" fg:x="100593861536" fg:w="37235804"/><text x="65.5699%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::collections::btree::set::BTreeSet&lt;u64&gt;&gt;&gt; (22,976,662 samples, 0.01%)</title><rect x="65.3441%" y="693" width="0.0149%" height="15" fill="rgb(217,132,38)" fg:x="100631097340" fg:w="22976662"/><text x="65.5941%" y="703.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22,976,662 samples, 0.01%)</title><rect x="65.3441%" y="677" width="0.0149%" height="15" fill="rgb(242,146,4)" fg:x="100631097340" fg:w="22976662"/><text x="65.5941%" y="687.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read_unlock (22,976,662 samples, 0.01%)</title><rect x="65.3441%" y="661" width="0.0149%" height="15" fill="rgb(212,61,9)" fg:x="100631097340" fg:w="22976662"/><text x="65.5941%" y="671.50"></text></g><g><title>std::sync::poison::Flag::borrow (176,485,254 samples, 0.11%)</title><rect x="65.3614%" y="661" width="0.1146%" height="15" fill="rgb(247,126,22)" fg:x="100657765384" fg:w="176485254"/><text x="65.6114%" y="671.50"></text></g><g><title>std::sync::poison::Flag::get (61,171,879 samples, 0.04%)</title><rect x="65.4363%" y="645" width="0.0397%" height="15" fill="rgb(220,196,2)" fg:x="100773078759" fg:w="61171879"/><text x="65.6863%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (61,171,879 samples, 0.04%)</title><rect x="65.4363%" y="629" width="0.0397%" height="15" fill="rgb(208,46,4)" fg:x="100773078759" fg:w="61171879"/><text x="65.6863%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_load (61,171,879 samples, 0.04%)</title><rect x="65.4363%" y="613" width="0.0397%" height="15" fill="rgb(252,104,46)" fg:x="100773078759" fg:w="61171879"/><text x="65.6863%" y="623.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (305,525,162 samples, 0.20%)</title><rect x="65.3614%" y="677" width="0.1984%" height="15" fill="rgb(237,152,48)" fg:x="100657765384" fg:w="305525162"/><text x="65.6114%" y="687.50"></text></g><g><title>std::sync::poison::map_result (129,039,908 samples, 0.08%)</title><rect x="65.4760%" y="661" width="0.0838%" height="15" fill="rgb(221,59,37)" fg:x="100834250638" fg:w="129039908"/><text x="65.7260%" y="671.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new::_{{closure}} (129,039,908 samples, 0.08%)</title><rect x="65.4760%" y="645" width="0.0838%" height="15" fill="rgb(209,202,51)" fg:x="100834250638" fg:w="129039908"/><text x="65.7260%" y="655.50"></text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::get (129,039,908 samples, 0.08%)</title><rect x="65.4760%" y="629" width="0.0838%" height="15" fill="rgb(228,81,30)" fg:x="100834250638" fg:w="129039908"/><text x="65.7260%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (23,574,291 samples, 0.02%)</title><rect x="65.7715%" y="661" width="0.0153%" height="15" fill="rgb(227,42,39)" fg:x="101289312081" fg:w="23574291"/><text x="66.0215%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (23,574,291 samples, 0.02%)</title><rect x="65.7715%" y="645" width="0.0153%" height="15" fill="rgb(221,26,2)" fg:x="101289312081" fg:w="23574291"/><text x="66.0215%" y="655.50"></text></g><g><title>rpq::bpq::BucketPriorityQueue::add_bucket (1,393,753,594 samples, 0.91%)</title><rect x="65.1459%" y="709" width="0.9050%" height="15" fill="rgb(254,61,31)" fg:x="100325876707" fg:w="1393753594"/><text x="65.3959%" y="719.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (1,061,864,917 samples, 0.69%)</title><rect x="65.3614%" y="693" width="0.6895%" height="15" fill="rgb(222,173,38)" fg:x="100657765384" fg:w="1061864917"/><text x="65.6114%" y="703.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read (756,339,755 samples, 0.49%)</title><rect x="65.5598%" y="677" width="0.4911%" height="15" fill="rgb(218,50,12)" fg:x="100963290546" fg:w="756339755"/><text x="65.8098%" y="687.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::is_read_lockable (406,743,929 samples, 0.26%)</title><rect x="65.7868%" y="661" width="0.2641%" height="15" fill="rgb(223,88,40)" fg:x="101312886372" fg:w="406743929"/><text x="66.0368%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::first_leaf_edge (44,953,844 samples, 0.03%)</title><rect x="66.1091%" y="661" width="0.0292%" height="15" fill="rgb(237,54,19)" fg:x="101809180313" fg:w="44953844"/><text x="66.3591%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (19,418,394 samples, 0.01%)</title><rect x="66.1257%" y="645" width="0.0126%" height="15" fill="rgb(251,129,25)" fg:x="101834715763" fg:w="19418394"/><text x="66.3757%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (76,557,081 samples, 0.05%)</title><rect x="66.1406%" y="661" width="0.0497%" height="15" fill="rgb(238,97,19)" fg:x="101857706931" fg:w="76557081"/><text x="66.3906%" y="671.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::first (181,307,066 samples, 0.12%)</title><rect x="66.0758%" y="693" width="0.1177%" height="15" fill="rgb(240,169,18)" fg:x="101758003378" fg:w="181307066"/><text x="66.3258%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::first_key_value (181,307,066 samples, 0.12%)</title><rect x="66.0758%" y="677" width="0.1177%" height="15" fill="rgb(230,187,49)" fg:x="101758003378" fg:w="181307066"/><text x="66.3258%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::collections::btree::set::BTreeSet&lt;u64&gt;&gt;&gt; (306,221,547 samples, 0.20%)</title><rect x="66.2013%" y="693" width="0.1988%" height="15" fill="rgb(209,44,26)" fg:x="101951161485" fg:w="306221547"/><text x="66.4513%" y="703.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (306,221,547 samples, 0.20%)</title><rect x="66.2013%" y="677" width="0.1988%" height="15" fill="rgb(244,0,6)" fg:x="101951161485" fg:w="306221547"/><text x="66.4513%" y="687.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read_unlock (306,221,547 samples, 0.20%)</title><rect x="66.2013%" y="661" width="0.1988%" height="15" fill="rgb(248,18,21)" fg:x="101951161485" fg:w="306221547"/><text x="66.4513%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (23,994,095 samples, 0.02%)</title><rect x="66.3845%" y="645" width="0.0156%" height="15" fill="rgb(245,180,19)" fg:x="102233388937" fg:w="23994095"/><text x="66.6345%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_sub (23,994,095 samples, 0.02%)</title><rect x="66.3845%" y="629" width="0.0156%" height="15" fill="rgb(252,118,36)" fg:x="102233388937" fg:w="23994095"/><text x="66.6345%" y="639.50"></text></g><g><title>std::sync::poison::Flag::borrow (78,676,592 samples, 0.05%)</title><rect x="66.4001%" y="661" width="0.0511%" height="15" fill="rgb(210,224,19)" fg:x="102257383032" fg:w="78676592"/><text x="66.6501%" y="671.50"></text></g><g><title>std::sync::poison::Flag::get (20,110,903 samples, 0.01%)</title><rect x="66.4381%" y="645" width="0.0131%" height="15" fill="rgb(218,30,24)" fg:x="102315948721" fg:w="20110903"/><text x="66.6881%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (20,110,903 samples, 0.01%)</title><rect x="66.4381%" y="629" width="0.0131%" height="15" fill="rgb(219,75,50)" fg:x="102315948721" fg:w="20110903"/><text x="66.6881%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_load (20,110,903 samples, 0.01%)</title><rect x="66.4381%" y="613" width="0.0131%" height="15" fill="rgb(234,72,50)" fg:x="102315948721" fg:w="20110903"/><text x="66.6881%" y="623.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (158,222,793 samples, 0.10%)</title><rect x="66.4001%" y="677" width="0.1027%" height="15" fill="rgb(219,100,48)" fg:x="102257383032" fg:w="158222793"/><text x="66.6501%" y="687.50"></text></g><g><title>std::sync::poison::map_result (79,546,201 samples, 0.05%)</title><rect x="66.4512%" y="661" width="0.0517%" height="15" fill="rgb(253,5,41)" fg:x="102336059624" fg:w="79546201"/><text x="66.7012%" y="671.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new::_{{closure}} (79,546,201 samples, 0.05%)</title><rect x="66.4512%" y="645" width="0.0517%" height="15" fill="rgb(247,181,11)" fg:x="102336059624" fg:w="79546201"/><text x="66.7012%" y="655.50"></text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::get (79,546,201 samples, 0.05%)</title><rect x="66.4512%" y="629" width="0.0517%" height="15" fill="rgb(222,223,25)" fg:x="102336059624" fg:w="79546201"/><text x="66.7012%" y="639.50"></text></g><g><title>rpq::bpq::BucketPriorityQueue::peek (905,300,480 samples, 0.59%)</title><rect x="66.0509%" y="709" width="0.5879%" height="15" fill="rgb(214,198,28)" fg:x="101719630301" fg:w="905300480"/><text x="66.3009%" y="719.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (367,547,749 samples, 0.24%)</title><rect x="66.4001%" y="693" width="0.2387%" height="15" fill="rgb(230,46,43)" fg:x="102257383032" fg:w="367547749"/><text x="66.6501%" y="703.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read (209,324,956 samples, 0.14%)</title><rect x="66.5029%" y="677" width="0.1359%" height="15" fill="rgb(233,65,53)" fg:x="102415605825" fg:w="209324956"/><text x="66.7529%" y="687.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::is_read_lockable (110,546,740 samples, 0.07%)</title><rect x="66.5670%" y="661" width="0.0718%" height="15" fill="rgb(221,121,27)" fg:x="102514384041" fg:w="110546740"/><text x="66.8170%" y="671.50"></text></g><g><title>rpq::bpq::BucketPriorityQueue::remove_bucket (18,603,815 samples, 0.01%)</title><rect x="66.6388%" y="709" width="0.0121%" height="15" fill="rgb(247,70,47)" fg:x="102624930781" fg:w="18603815"/><text x="66.8888%" y="719.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (52,489,624 samples, 0.03%)</title><rect x="66.7868%" y="693" width="0.0341%" height="15" fill="rgb(228,85,35)" fg:x="102852939582" fg:w="52489624"/><text x="67.0368%" y="703.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (44,323,539 samples, 0.03%)</title><rect x="66.7921%" y="677" width="0.0288%" height="15" fill="rgb(209,50,18)" fg:x="102861105667" fg:w="44323539"/><text x="67.0421%" y="687.50"></text></g><g><title>core::ptr::read (44,323,539 samples, 0.03%)</title><rect x="66.7921%" y="661" width="0.0288%" height="15" fill="rgb(250,19,35)" fg:x="102861105667" fg:w="44323539"/><text x="67.0421%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;alloc::collections::vec_deque::VecDeque&lt;rpq::pq::Item&lt;i32&gt;&gt;&gt;&gt; (28,557,144 samples, 0.02%)</title><rect x="66.8209%" y="693" width="0.0185%" height="15" fill="rgb(253,107,29)" fg:x="102905429206" fg:w="28557144"/><text x="67.0709%" y="703.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (28,557,144 samples, 0.02%)</title><rect x="66.8209%" y="677" width="0.0185%" height="15" fill="rgb(252,179,29)" fg:x="102905429206" fg:w="28557144"/><text x="67.0709%" y="687.50"></text></g><g><title>rpq::pq::PriorityQueue&lt;T&gt;::dequeue (323,046,185 samples, 0.21%)</title><rect x="66.6509%" y="709" width="0.2098%" height="15" fill="rgb(238,194,6)" fg:x="102643534596" fg:w="323046185"/><text x="66.9009%" y="719.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (32,594,431 samples, 0.02%)</title><rect x="66.8395%" y="693" width="0.0212%" height="15" fill="rgb(238,164,29)" fg:x="102933986350" fg:w="32594431"/><text x="67.0895%" y="703.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::write (20,340,894 samples, 0.01%)</title><rect x="66.8474%" y="677" width="0.0132%" height="15" fill="rgb(224,25,9)" fg:x="102946239887" fg:w="20340894"/><text x="67.0974%" y="687.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_write (49,515,700 samples, 0.03%)</title><rect x="66.9312%" y="677" width="0.0322%" height="15" fill="rgb(244,153,23)" fg:x="103075249080" fg:w="49515700"/><text x="67.1812%" y="687.50"></text></g><g><title>core::ptr::write (45,933,819 samples, 0.03%)</title><rect x="66.9335%" y="661" width="0.0298%" height="15" fill="rgb(212,203,14)" fg:x="103078830961" fg:w="45933819"/><text x="67.1835%" y="671.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back (53,233,570 samples, 0.03%)</title><rect x="66.9312%" y="693" width="0.0346%" height="15" fill="rgb(220,164,20)" fg:x="103075249080" fg:w="53233570"/><text x="67.1812%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (65,522,536 samples, 0.04%)</title><rect x="67.0749%" y="645" width="0.0425%" height="15" fill="rgb(222,203,48)" fg:x="103296562282" fg:w="65522536"/><text x="67.3249%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_sub (65,522,536 samples, 0.04%)</title><rect x="67.0749%" y="629" width="0.0425%" height="15" fill="rgb(215,159,22)" fg:x="103296562282" fg:w="65522536"/><text x="67.3249%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;alloc::collections::vec_deque::VecDeque&lt;rpq::pq::Item&lt;i32&gt;&gt;&gt;&gt; (301,952,709 samples, 0.20%)</title><rect x="66.9658%" y="693" width="0.1961%" height="15" fill="rgb(216,183,47)" fg:x="103128482650" fg:w="301952709"/><text x="67.2158%" y="703.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (301,952,709 samples, 0.20%)</title><rect x="66.9658%" y="677" width="0.1961%" height="15" fill="rgb(229,195,25)" fg:x="103128482650" fg:w="301952709"/><text x="67.2158%" y="687.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::write_unlock (292,970,850 samples, 0.19%)</title><rect x="66.9716%" y="661" width="0.1902%" height="15" fill="rgb(224,132,51)" fg:x="103137464509" fg:w="292970850"/><text x="67.2216%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (68,350,541 samples, 0.04%)</title><rect x="67.1174%" y="645" width="0.0444%" height="15" fill="rgb(240,63,7)" fg:x="103362084818" fg:w="68350541"/><text x="67.3674%" y="655.50"></text></g><g><title>rpq::pq::PriorityQueue&lt;T&gt;::enqueue (596,697,854 samples, 0.39%)</title><rect x="66.8606%" y="709" width="0.3875%" height="15" fill="rgb(249,182,41)" fg:x="102966580781" fg:w="596697854"/><text x="67.1106%" y="719.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (130,053,842 samples, 0.08%)</title><rect x="67.1636%" y="693" width="0.0844%" height="15" fill="rgb(243,47,26)" fg:x="103433224793" fg:w="130053842"/><text x="67.4136%" y="703.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::write (122,290,584 samples, 0.08%)</title><rect x="67.1687%" y="677" width="0.0794%" height="15" fill="rgb(233,48,2)" fg:x="103440988051" fg:w="122290584"/><text x="67.4187%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::collections::vec_deque::VecDeque&lt;rpq::pq::Item&lt;i32&gt;&gt;&gt;&gt; (23,580,135 samples, 0.02%)</title><rect x="67.2662%" y="693" width="0.0153%" height="15" fill="rgb(244,165,34)" fg:x="103591121602" fg:w="23580135"/><text x="67.5162%" y="703.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23,580,135 samples, 0.02%)</title><rect x="67.2662%" y="677" width="0.0153%" height="15" fill="rgb(207,89,7)" fg:x="103591121602" fg:w="23580135"/><text x="67.5162%" y="687.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read_unlock (23,580,135 samples, 0.02%)</title><rect x="67.2662%" y="661" width="0.0153%" height="15" fill="rgb(244,117,36)" fg:x="103591121602" fg:w="23580135"/><text x="67.5162%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (15,830,351 samples, 0.01%)</title><rect x="67.2712%" y="645" width="0.0103%" height="15" fill="rgb(226,144,34)" fg:x="103598871386" fg:w="15830351"/><text x="67.5212%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_sub (15,830,351 samples, 0.01%)</title><rect x="67.2712%" y="629" width="0.0103%" height="15" fill="rgb(213,23,19)" fg:x="103598871386" fg:w="15830351"/><text x="67.5212%" y="639.50"></text></g><g><title>rpq::pq::PriorityQueue&lt;T&gt;::len (86,656,960 samples, 0.06%)</title><rect x="67.2481%" y="709" width="0.0563%" height="15" fill="rgb(217,75,12)" fg:x="103563278635" fg:w="86656960"/><text x="67.4981%" y="719.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (35,233,858 samples, 0.02%)</title><rect x="67.2815%" y="693" width="0.0229%" height="15" fill="rgb(224,159,17)" fg:x="103614701737" fg:w="35233858"/><text x="67.5315%" y="703.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read (35,233,858 samples, 0.02%)</title><rect x="67.2815%" y="677" width="0.0229%" height="15" fill="rgb(217,118,1)" fg:x="103614701737" fg:w="35233858"/><text x="67.5315%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (23,828,132 samples, 0.02%)</title><rect x="67.2889%" y="661" width="0.0155%" height="15" fill="rgb(232,180,48)" fg:x="103626107463" fg:w="23828132"/><text x="67.5389%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (23,828,132 samples, 0.02%)</title><rect x="67.2889%" y="645" width="0.0155%" height="15" fill="rgb(230,27,33)" fg:x="103626107463" fg:w="23828132"/><text x="67.5389%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (84,333,177 samples, 0.05%)</title><rect x="67.9990%" y="693" width="0.0548%" height="15" fill="rgb(205,31,21)" fg:x="104719674086" fg:w="84333177"/><text x="68.2490%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (84,333,177 samples, 0.05%)</title><rect x="67.9990%" y="677" width="0.0548%" height="15" fill="rgb(253,59,4)" fg:x="104719674086" fg:w="84333177"/><text x="68.2490%" y="687.50"></text></g><g><title>entry_SYSCALL_64 (73,083,412 samples, 0.05%)</title><rect x="68.0537%" y="693" width="0.0475%" height="15" fill="rgb(224,201,9)" fg:x="104804007263" fg:w="73083412"/><text x="68.3037%" y="703.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (24,727,905 samples, 0.02%)</title><rect x="68.1012%" y="693" width="0.0161%" height="15" fill="rgb(229,206,30)" fg:x="104877090675" fg:w="24727905"/><text x="68.3512%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (35,810,352 samples, 0.02%)</title><rect x="68.1894%" y="661" width="0.0233%" height="15" fill="rgb(212,67,47)" fg:x="105012903666" fg:w="35810352"/><text x="68.4394%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (35,810,352 samples, 0.02%)</title><rect x="68.1894%" y="645" width="0.0233%" height="15" fill="rgb(211,96,50)" fg:x="105012903666" fg:w="35810352"/><text x="68.4394%" y="655.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_read (389,753,609 samples, 0.25%)</title><rect x="68.1173%" y="693" width="0.2531%" height="15" fill="rgb(252,114,18)" fg:x="104901818580" fg:w="389753609"/><text x="68.3673%" y="703.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_until (389,753,609 samples, 0.25%)</title><rect x="68.1173%" y="677" width="0.2531%" height="15" fill="rgb(223,58,37)" fg:x="104901818580" fg:w="389753609"/><text x="68.3673%" y="687.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_read::_{{closure}} (229,228,621 samples, 0.15%)</title><rect x="68.2215%" y="661" width="0.1488%" height="15" fill="rgb(237,70,4)" fg:x="105062343568" fg:w="229228621"/><text x="68.4715%" y="671.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read_contended (2,031,522,251 samples, 1.32%)</title><rect x="67.3044%" y="709" width="1.3192%" height="15" fill="rgb(244,85,46)" fg:x="103649935595" fg:w="2031522251"/><text x="67.5544%" y="719.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::is_read_lockable (386,204,401 samples, 0.25%)</title><rect x="68.3727%" y="693" width="0.2508%" height="15" fill="rgb(223,39,52)" fg:x="105295253445" fg:w="386204401"/><text x="68.6227%" y="703.50"></text></g><g><title>entry_SYSCALL_64 (21,708,515 samples, 0.01%)</title><rect x="68.6094%" y="677" width="0.0141%" height="15" fill="rgb(218,200,14)" fg:x="105659749331" fg:w="21708515"/><text x="68.8594%" y="687.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::wake_writer_or_readers (19,654,854 samples, 0.01%)</title><rect x="68.6235%" y="709" width="0.0128%" height="15" fill="rgb(208,171,16)" fg:x="105681457846" fg:w="19654854"/><text x="68.8735%" y="719.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (34,742,616 samples, 0.02%)</title><rect x="68.7176%" y="693" width="0.0226%" height="15" fill="rgb(234,200,18)" fg:x="105826380643" fg:w="34742616"/><text x="68.9676%" y="703.50"></text></g><g><title>core::hint::spin_loop (60,043,726 samples, 0.04%)</title><rect x="68.9404%" y="661" width="0.0390%" height="15" fill="rgb(228,45,11)" fg:x="106169529566" fg:w="60043726"/><text x="69.1904%" y="671.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (60,043,726 samples, 0.04%)</title><rect x="68.9404%" y="645" width="0.0390%" height="15" fill="rgb(237,182,11)" fg:x="106169529566" fg:w="60043726"/><text x="69.1904%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (66,526,451 samples, 0.04%)</title><rect x="68.9794%" y="661" width="0.0432%" height="15" fill="rgb(241,175,49)" fg:x="106229573292" fg:w="66526451"/><text x="69.2294%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (66,526,451 samples, 0.04%)</title><rect x="68.9794%" y="645" width="0.0432%" height="15" fill="rgb(247,38,35)" fg:x="106229573292" fg:w="66526451"/><text x="69.2294%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (23,710,435 samples, 0.02%)</title><rect x="69.0226%" y="661" width="0.0154%" height="15" fill="rgb(228,39,49)" fg:x="106296099743" fg:w="23710435"/><text x="69.2726%" y="671.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::write_contended (695,182,018 samples, 0.45%)</title><rect x="68.6363%" y="709" width="0.4514%" height="15" fill="rgb(226,101,26)" fg:x="105701112700" fg:w="695182018"/><text x="68.8863%" y="719.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_write (535,171,459 samples, 0.35%)</title><rect x="68.7402%" y="693" width="0.3475%" height="15" fill="rgb(206,141,19)" fg:x="105861123259" fg:w="535171459"/><text x="68.9902%" y="703.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_until (535,171,459 samples, 0.35%)</title><rect x="68.7402%" y="677" width="0.3475%" height="15" fill="rgb(211,200,13)" fg:x="105861123259" fg:w="535171459"/><text x="68.9902%" y="687.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_write::_{{closure}} (76,484,540 samples, 0.05%)</title><rect x="69.0380%" y="661" width="0.0497%" height="15" fill="rgb(241,121,6)" fg:x="106319810178" fg:w="76484540"/><text x="69.2880%" y="671.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (95,176,682 samples, 0.06%)</title><rect x="69.0877%" y="709" width="0.0618%" height="15" fill="rgb(234,221,29)" fg:x="106396294718" fg:w="95176682"/><text x="69.3377%" y="719.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (28,031,739 samples, 0.02%)</title><rect x="69.1495%" y="709" width="0.0182%" height="15" fill="rgb(229,136,5)" fg:x="106491471400" fg:w="28031739"/><text x="69.3995%" y="719.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (31,415,247 samples, 0.02%)</title><rect x="70.4171%" y="677" width="0.0204%" height="15" fill="rgb(238,36,11)" fg:x="108443690536" fg:w="31415247"/><text x="70.6671%" y="687.50"></text></g><g><title>alloc::string::String::new (31,415,247 samples, 0.02%)</title><rect x="70.4171%" y="661" width="0.0204%" height="15" fill="rgb(251,55,41)" fg:x="108443690536" fg:w="31415247"/><text x="70.6671%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_add (575,319,185 samples, 0.37%)</title><rect x="70.4400%" y="677" width="0.3736%" height="15" fill="rgb(242,34,40)" fg:x="108478883906" fg:w="575319185"/><text x="70.6900%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_add (575,319,185 samples, 0.37%)</title><rect x="70.4400%" y="661" width="0.3736%" height="15" fill="rgb(215,42,17)" fg:x="108478883906" fg:w="575319185"/><text x="70.6900%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (481,566,908 samples, 0.31%)</title><rect x="70.8136%" y="677" width="0.3127%" height="15" fill="rgb(207,44,46)" fg:x="109054203091" fg:w="481566908"/><text x="71.0636%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (481,566,908 samples, 0.31%)</title><rect x="70.8136%" y="661" width="0.3127%" height="15" fill="rgb(211,206,28)" fg:x="109054203091" fg:w="481566908"/><text x="71.0636%" y="671.50"></text></g><g><title>entry_SYSRETQ_unsafe_stack (22,848,026 samples, 0.01%)</title><rect x="71.1114%" y="645" width="0.0148%" height="15" fill="rgb(237,167,16)" fg:x="109512921973" fg:w="22848026"/><text x="71.3614%" y="655.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3,079,606,629 samples, 2.00%)</title><rect x="69.1677%" y="709" width="1.9997%" height="15" fill="rgb(233,66,6)" fg:x="106519503139" fg:w="3079606629"/><text x="69.4177%" y="719.50">s..</text></g><g><title>rpq::main::_{{closure}} (3,079,606,629 samples, 2.00%)</title><rect x="69.1677%" y="693" width="1.9997%" height="15" fill="rgb(246,123,29)" fg:x="106519503139" fg:w="3079606629"/><text x="69.4177%" y="703.50">r..</text></g><g><title>entry_SYSRETQ_unsafe_stack (63,339,769 samples, 0.04%)</title><rect x="71.1263%" y="677" width="0.0411%" height="15" fill="rgb(209,62,40)" fg:x="109535769999" fg:w="63339769"/><text x="71.3763%" y="687.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (23,409,822 samples, 0.02%)</title><rect x="71.1790%" y="693" width="0.0152%" height="15" fill="rgb(218,4,25)" fg:x="109616931730" fg:w="23409822"/><text x="71.4290%" y="703.50"></text></g><g><title>std::time::Instant::duration_since (23,409,822 samples, 0.02%)</title><rect x="71.1790%" y="677" width="0.0152%" height="15" fill="rgb(253,91,49)" fg:x="109616931730" fg:w="23409822"/><text x="71.4290%" y="687.50"></text></g><g><title>std::time::Instant::elapsed (60,743,131 samples, 0.04%)</title><rect x="71.1674%" y="709" width="0.0394%" height="15" fill="rgb(228,155,29)" fg:x="109599109768" fg:w="60743131"/><text x="71.4174%" y="719.50"></text></g><g><title>std::time::Instant::now (19,511,347 samples, 0.01%)</title><rect x="71.1942%" y="693" width="0.0127%" height="15" fill="rgb(243,57,37)" fg:x="109640341552" fg:w="19511347"/><text x="71.4442%" y="703.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (19,511,347 samples, 0.01%)</title><rect x="71.1942%" y="677" width="0.0127%" height="15" fill="rgb(244,167,17)" fg:x="109640341552" fg:w="19511347"/><text x="71.4442%" y="687.50"></text></g><g><title>std::time::Instant::now (71,488,260 samples, 0.05%)</title><rect x="71.2069%" y="709" width="0.0464%" height="15" fill="rgb(207,181,38)" fg:x="109659852899" fg:w="71488260"/><text x="71.4569%" y="719.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (71,488,260 samples, 0.05%)</title><rect x="71.2069%" y="693" width="0.0464%" height="15" fill="rgb(211,8,23)" fg:x="109659852899" fg:w="71488260"/><text x="71.4569%" y="703.50"></text></g><g><title>asm_exc_page_fault (27,998,582 samples, 0.02%)</title><rect x="71.9425%" y="693" width="0.0182%" height="15" fill="rgb(235,11,44)" fg:x="110792692205" fg:w="27998582"/><text x="72.1925%" y="703.50"></text></g><g><title>syscall (1,111,470,491 samples, 0.72%)</title><rect x="71.2533%" y="709" width="0.7217%" height="15" fill="rgb(248,18,52)" fg:x="109731341159" fg:w="1111470491"/><text x="71.5033%" y="719.50"></text></g><g><title>uuid::fmt::&lt;impl core::fmt::Display for uuid::Uuid&gt;::fmt (43,725,244 samples, 0.03%)</title><rect x="71.9750%" y="709" width="0.0284%" height="15" fill="rgb(208,4,7)" fg:x="110842811650" fg:w="43725244"/><text x="72.2250%" y="719.50"></text></g><g><title>uuid::fmt::&lt;impl core::fmt::LowerHex for uuid::Uuid&gt;::fmt (31,030,644 samples, 0.02%)</title><rect x="71.9832%" y="693" width="0.0201%" height="15" fill="rgb(240,17,39)" fg:x="110855506250" fg:w="31030644"/><text x="72.2332%" y="703.50"></text></g><g><title>&lt;uuid::fmt::Hyphenated as core::fmt::LowerHex&gt;::fmt (31,030,644 samples, 0.02%)</title><rect x="71.9832%" y="677" width="0.0201%" height="15" fill="rgb(207,170,3)" fg:x="110855506250" fg:w="31030644"/><text x="72.2332%" y="687.50"></text></g><g><title>uuid::fmt::format_hyphenated (485,468,079 samples, 0.32%)</title><rect x="72.0034%" y="709" width="0.3152%" height="15" fill="rgb(236,100,52)" fg:x="110886536894" fg:w="485468079"/><text x="72.2534%" y="719.50"></text></g><g><title>uuid::builder::&lt;impl uuid::Uuid&gt;::from_u128 (84,867,543 samples, 0.06%)</title><rect x="72.3807%" y="693" width="0.0551%" height="15" fill="rgb(246,78,51)" fg:x="111467610919" fg:w="84867543"/><text x="72.6307%" y="703.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (82,210,868 samples, 0.05%)</title><rect x="72.4840%" y="677" width="0.0534%" height="15" fill="rgb(211,17,15)" fg:x="111626716481" fg:w="82210868"/><text x="72.7340%" y="687.50"></text></g><g><title>[unknown] (18,638,651,194 samples, 12.10%)</title><rect x="60.4368%" y="725" width="12.1029%" height="15" fill="rgb(209,59,46)" fg:x="93073816606" fg:w="18638651194"/><text x="60.6868%" y="735.50">[unknown]</text></g><g><title>uuid::v4::&lt;impl uuid::Uuid&gt;::new_v4 (340,462,827 samples, 0.22%)</title><rect x="72.3186%" y="709" width="0.2211%" height="15" fill="rgb(210,92,25)" fg:x="111372004973" fg:w="340462827"/><text x="72.5686%" y="719.50"></text></g><g><title>uuid::rng::u128 (159,989,338 samples, 0.10%)</title><rect x="72.4358%" y="693" width="0.1039%" height="15" fill="rgb(238,174,52)" fg:x="111552478462" fg:w="159989338"/><text x="72.6858%" y="703.50"></text></g><g><title>__vdso_clock_gettime (2,398,798,849 samples, 1.56%)</title><rect x="72.5452%" y="725" width="1.5576%" height="15" fill="rgb(230,73,7)" fg:x="111720866717" fg:w="2398798849"/><text x="72.7952%" y="735.50"></text></g><g><title>entry_SYSCALL_64 (50,066,724 samples, 0.03%)</title><rect x="74.0703%" y="709" width="0.0325%" height="15" fill="rgb(243,124,40)" fg:x="114069598842" fg:w="50066724"/><text x="74.3203%" y="719.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::write_contended (20,110,443 samples, 0.01%)</title><rect x="74.1178%" y="709" width="0.0131%" height="15" fill="rgb(244,170,11)" fg:x="114142816629" fg:w="20110443"/><text x="74.3678%" y="719.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_write (16,684,589 samples, 0.01%)</title><rect x="74.1201%" y="693" width="0.0108%" height="15" fill="rgb(207,114,54)" fg:x="114146242483" fg:w="16684589"/><text x="74.3701%" y="703.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_until (16,684,589 samples, 0.01%)</title><rect x="74.1201%" y="677" width="0.0108%" height="15" fill="rgb(205,42,20)" fg:x="114146242483" fg:w="16684589"/><text x="74.3701%" y="687.50"></text></g><g><title>anon.b590f3ad01300cd439eeaa75ce265ed2.6.llvm.11078992251605162324 (32,810,432 samples, 0.02%)</title><rect x="74.1151%" y="725" width="0.0213%" height="15" fill="rgb(230,30,28)" fg:x="114138598696" fg:w="32810432"/><text x="74.3651%" y="735.50"></text></g><g><title>pte_offset_map_nolock (62,469,388 samples, 0.04%)</title><rect x="74.4544%" y="645" width="0.0406%" height="15" fill="rgb(205,73,54)" fg:x="114661123387" fg:w="62469388"/><text x="74.7044%" y="655.50"></text></g><g><title>__pte_offset_map (42,981,262 samples, 0.03%)</title><rect x="74.4670%" y="629" width="0.0279%" height="15" fill="rgb(254,227,23)" fg:x="114680611513" fg:w="42981262"/><text x="74.7170%" y="639.50"></text></g><g><title>__next_zones_zonelist (27,098,769 samples, 0.02%)</title><rect x="74.5203%" y="597" width="0.0176%" height="15" fill="rgb(228,202,34)" fg:x="114762610477" fg:w="27098769"/><text x="74.7703%" y="607.50"></text></g><g><title>__alloc_pages_noprof (84,197,806 samples, 0.05%)</title><rect x="74.5076%" y="613" width="0.0547%" height="15" fill="rgb(222,225,37)" fg:x="114743090516" fg:w="84197806"/><text x="74.7576%" y="623.50"></text></g><g><title>get_page_from_freelist (37,579,076 samples, 0.02%)</title><rect x="74.5379%" y="597" width="0.0244%" height="15" fill="rgb(221,14,54)" fg:x="114789709246" fg:w="37579076"/><text x="74.7879%" y="607.50"></text></g><g><title>alloc_pages_mpol_noprof (114,464,891 samples, 0.07%)</title><rect x="74.5023%" y="629" width="0.0743%" height="15" fill="rgb(254,102,2)" fg:x="114734872003" fg:w="114464891"/><text x="74.7523%" y="639.50"></text></g><g><title>policy_nodemask (22,048,572 samples, 0.01%)</title><rect x="74.5623%" y="613" width="0.0143%" height="15" fill="rgb(232,104,17)" fg:x="114827288322" fg:w="22048572"/><text x="74.8123%" y="623.50"></text></g><g><title>vma_alloc_folio_noprof (130,424,977 samples, 0.08%)</title><rect x="74.5023%" y="645" width="0.0847%" height="15" fill="rgb(250,220,14)" fg:x="114734872003" fg:w="130424977"/><text x="74.7523%" y="655.50"></text></g><g><title>get_vma_policy (15,960,086 samples, 0.01%)</title><rect x="74.5766%" y="629" width="0.0104%" height="15" fill="rgb(241,158,9)" fg:x="114849336894" fg:w="15960086"/><text x="74.8266%" y="639.50"></text></g><g><title>handle_mm_fault (492,787,261 samples, 0.32%)</title><rect x="74.2691%" y="677" width="0.3200%" height="15" fill="rgb(246,9,43)" fg:x="114375779154" fg:w="492787261"/><text x="74.5191%" y="687.50"></text></g><g><title>__handle_mm_fault (475,538,986 samples, 0.31%)</title><rect x="74.2803%" y="661" width="0.3088%" height="15" fill="rgb(206,73,33)" fg:x="114393027429" fg:w="475538986"/><text x="74.5303%" y="671.50"></text></g><g><title>down_read_trylock (23,410,986 samples, 0.02%)</title><rect x="74.6388%" y="661" width="0.0152%" height="15" fill="rgb(222,79,8)" fg:x="114945169778" fg:w="23410986"/><text x="74.8888%" y="671.50"></text></g><g><title>exc_page_fault (777,817,973 samples, 0.51%)</title><rect x="74.2393%" y="709" width="0.5051%" height="15" fill="rgb(234,8,54)" fg:x="114329811313" fg:w="777817973"/><text x="74.4893%" y="719.50"></text></g><g><title>do_user_addr_fault (751,521,566 samples, 0.49%)</title><rect x="74.2563%" y="693" width="0.4880%" height="15" fill="rgb(209,134,38)" fg:x="114356107720" fg:w="751521566"/><text x="74.5063%" y="703.50"></text></g><g><title>lock_vma_under_rcu (239,062,871 samples, 0.16%)</title><rect x="74.5891%" y="677" width="0.1552%" height="15" fill="rgb(230,127,29)" fg:x="114868566415" fg:w="239062871"/><text x="74.8391%" y="687.50"></text></g><g><title>mas_walk (139,048,522 samples, 0.09%)</title><rect x="74.6540%" y="661" width="0.0903%" height="15" fill="rgb(242,44,41)" fg:x="114968580764" fg:w="139048522"/><text x="74.9040%" y="671.50"></text></g><g><title>asm_exc_page_fault (982,847,513 samples, 0.64%)</title><rect x="74.1364%" y="725" width="0.6382%" height="15" fill="rgb(222,56,43)" fg:x="114171409128" fg:w="982847513"/><text x="74.3864%" y="735.50"></text></g><g><title>sync_regs (42,714,094 samples, 0.03%)</title><rect x="74.7469%" y="709" width="0.0277%" height="15" fill="rgb(238,39,47)" fg:x="115111542547" fg:w="42714094"/><text x="74.9969%" y="719.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (25,188,931 samples, 0.02%)</title><rect x="74.7746%" y="725" width="0.0164%" height="15" fill="rgb(226,79,43)" fg:x="115154256641" fg:w="25188931"/><text x="75.0246%" y="735.50"></text></g><g><title>sysvec_apic_timer_interrupt (17,424,074 samples, 0.01%)</title><rect x="74.7796%" y="709" width="0.0113%" height="15" fill="rgb(242,105,53)" fg:x="115162021498" fg:w="17424074"/><text x="75.0296%" y="719.50"></text></g><g><title>entry_SYSRETQ_unsafe_stack (59,446,398 samples, 0.04%)</title><rect x="75.2383%" y="709" width="0.0386%" height="15" fill="rgb(251,132,46)" fg:x="115868411291" fg:w="59446398"/><text x="75.4883%" y="719.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (23,731,311 samples, 0.02%)</title><rect x="75.2769%" y="709" width="0.0154%" height="15" fill="rgb(231,77,14)" fg:x="115927857689" fg:w="23731311"/><text x="75.5269%" y="719.50"></text></g><g><title>cfree (769,897,138 samples, 0.50%)</title><rect x="74.8007%" y="725" width="0.4999%" height="15" fill="rgb(240,135,9)" fg:x="115194375898" fg:w="769897138"/><text x="75.0507%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (29,038,568 samples, 0.02%)</title><rect x="75.3426%" y="709" width="0.0189%" height="15" fill="rgb(248,109,14)" fg:x="116028979927" fg:w="29038568"/><text x="75.5926%" y="719.50"></text></g><g><title>alloc::string::String::push_str (29,038,568 samples, 0.02%)</title><rect x="75.3426%" y="693" width="0.0189%" height="15" fill="rgb(227,146,52)" fg:x="116028979927" fg:w="29038568"/><text x="75.5926%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (29,038,568 samples, 0.02%)</title><rect x="75.3426%" y="677" width="0.0189%" height="15" fill="rgb(232,54,3)" fg:x="116028979927" fg:w="29038568"/><text x="75.5926%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (29,038,568 samples, 0.02%)</title><rect x="75.3426%" y="661" width="0.0189%" height="15" fill="rgb(229,201,43)" fg:x="116028979927" fg:w="29038568"/><text x="75.5926%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (29,038,568 samples, 0.02%)</title><rect x="75.3426%" y="645" width="0.0189%" height="15" fill="rgb(252,161,33)" fg:x="116028979927" fg:w="29038568"/><text x="75.5926%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (29,038,568 samples, 0.02%)</title><rect x="75.3426%" y="629" width="0.0189%" height="15" fill="rgb(226,146,40)" fg:x="116028979927" fg:w="29038568"/><text x="75.5926%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (25,617,010 samples, 0.02%)</title><rect x="75.3448%" y="613" width="0.0166%" height="15" fill="rgb(219,47,25)" fg:x="116032401485" fg:w="25617010"/><text x="75.5948%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (25,617,010 samples, 0.02%)</title><rect x="75.3448%" y="597" width="0.0166%" height="15" fill="rgb(250,135,13)" fg:x="116032401485" fg:w="25617010"/><text x="75.5948%" y="607.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (21,313,914 samples, 0.01%)</title><rect x="75.3476%" y="581" width="0.0138%" height="15" fill="rgb(219,229,18)" fg:x="116036704581" fg:w="21313914"/><text x="75.5976%" y="591.50"></text></g><g><title>clock_gettime (121,775,420 samples, 0.08%)</title><rect x="75.3006%" y="725" width="0.0791%" height="15" fill="rgb(217,152,27)" fg:x="115964273036" fg:w="121775420"/><text x="75.5506%" y="735.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (17,150,070 samples, 0.01%)</title><rect x="75.3685%" y="709" width="0.0111%" height="15" fill="rgb(225,71,47)" fg:x="116068898386" fg:w="17150070"/><text x="75.6185%" y="719.50"></text></g><g><title>_compound_head (96,138,459 samples, 0.06%)</title><rect x="77.7675%" y="565" width="0.0624%" height="15" fill="rgb(220,139,14)" fg:x="119763424477" fg:w="96138459"/><text x="78.0175%" y="575.50"></text></g><g><title>__mod_memcg_lruvec_state (76,922,720 samples, 0.05%)</title><rect x="77.8440%" y="533" width="0.0499%" height="15" fill="rgb(247,54,32)" fg:x="119881249299" fg:w="76922720"/><text x="78.0940%" y="543.50"></text></g><g><title>folio_remove_rmap_ptes (102,874,506 samples, 0.07%)</title><rect x="77.8300%" y="565" width="0.0668%" height="15" fill="rgb(252,131,39)" fg:x="119859562936" fg:w="102874506"/><text x="78.0800%" y="575.50"></text></g><g><title>__lruvec_stat_mod_folio (93,961,019 samples, 0.06%)</title><rect x="77.8357%" y="549" width="0.0610%" height="15" fill="rgb(210,108,39)" fg:x="119868476423" fg:w="93961019"/><text x="78.0857%" y="559.50"></text></g><g><title>__mem_cgroup_uncharge_folios (17,034,300 samples, 0.01%)</title><rect x="77.9297%" y="501" width="0.0111%" height="15" fill="rgb(205,23,29)" fg:x="120013134658" fg:w="17034300"/><text x="78.1797%" y="511.50"></text></g><g><title>__list_del_entry_valid_or_report (76,408,687 samples, 0.05%)</title><rect x="77.9491%" y="469" width="0.0496%" height="15" fill="rgb(246,139,46)" fg:x="120043083626" fg:w="76408687"/><text x="78.1991%" y="479.50"></text></g><g><title>__mod_lruvec_state (34,106,120 samples, 0.02%)</title><rect x="77.9987%" y="469" width="0.0221%" height="15" fill="rgb(250,81,26)" fg:x="120119492313" fg:w="34106120"/><text x="78.2487%" y="479.50"></text></g><g><title>__mod_node_page_state (21,436,512 samples, 0.01%)</title><rect x="78.0070%" y="453" width="0.0139%" height="15" fill="rgb(214,104,7)" fg:x="120132161921" fg:w="21436512"/><text x="78.2570%" y="463.50"></text></g><g><title>__mod_memcg_lruvec_state (85,812,403 samples, 0.06%)</title><rect x="78.0209%" y="469" width="0.0557%" height="15" fill="rgb(233,189,8)" fg:x="120153598433" fg:w="85812403"/><text x="78.2709%" y="479.50"></text></g><g><title>__page_cache_release (226,452,083 samples, 0.15%)</title><rect x="77.9407%" y="501" width="0.1470%" height="15" fill="rgb(228,141,17)" fg:x="120030168958" fg:w="226452083"/><text x="78.1907%" y="511.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (217,840,838 samples, 0.14%)</title><rect x="77.9463%" y="485" width="0.1415%" height="15" fill="rgb(247,157,1)" fg:x="120038780203" fg:w="217840838"/><text x="78.1963%" y="495.50"></text></g><g><title>__mod_zone_page_state (17,210,205 samples, 0.01%)</title><rect x="78.0766%" y="469" width="0.0112%" height="15" fill="rgb(249,225,5)" fg:x="120239410836" fg:w="17210205"/><text x="78.3266%" y="479.50"></text></g><g><title>clear_page_erms (403,260,785 samples, 0.26%)</title><rect x="78.0961%" y="485" width="0.2619%" height="15" fill="rgb(242,55,13)" fg:x="120269464440" fg:w="403260785"/><text x="78.3461%" y="495.50"></text></g><g><title>__list_del_entry_valid_or_report (33,739,146 samples, 0.02%)</title><rect x="78.4156%" y="437" width="0.0219%" height="15" fill="rgb(230,49,50)" fg:x="120761469183" fg:w="33739146"/><text x="78.6656%" y="447.50"></text></g><g><title>__mod_zone_page_state (16,972,926 samples, 0.01%)</title><rect x="78.4375%" y="437" width="0.0110%" height="15" fill="rgb(241,111,38)" fg:x="120795208329" fg:w="16972926"/><text x="78.6875%" y="447.50"></text></g><g><title>__free_one_page (130,969,264 samples, 0.09%)</title><rect x="78.3689%" y="453" width="0.0850%" height="15" fill="rgb(252,155,4)" fg:x="120689593183" fg:w="130969264"/><text x="78.6189%" y="463.50"></text></g><g><title>free_unref_page_commit (207,046,499 samples, 0.13%)</title><rect x="78.3580%" y="485" width="0.1344%" height="15" fill="rgb(212,69,32)" fg:x="120672725225" fg:w="207046499"/><text x="78.6080%" y="495.50"></text></g><g><title>free_pcppages_bulk (194,391,006 samples, 0.13%)</title><rect x="78.3662%" y="469" width="0.1262%" height="15" fill="rgb(243,107,47)" fg:x="120685380718" fg:w="194391006"/><text x="78.6162%" y="479.50"></text></g><g><title>__list_del_entry_valid_or_report (59,209,277 samples, 0.04%)</title><rect x="78.4540%" y="453" width="0.0384%" height="15" fill="rgb(247,130,12)" fg:x="120820562447" fg:w="59209277"/><text x="78.7040%" y="463.50"></text></g><g><title>tlb_flush_mmu (921,618,625 samples, 0.60%)</title><rect x="77.8968%" y="565" width="0.5984%" height="15" fill="rgb(233,74,16)" fg:x="119962437442" fg:w="921618625"/><text x="78.1468%" y="575.50"></text></g><g><title>__tlb_batch_free_encoded_pages (921,618,625 samples, 0.60%)</title><rect x="77.8968%" y="549" width="0.5984%" height="15" fill="rgb(208,58,18)" fg:x="119962437442" fg:w="921618625"/><text x="78.1468%" y="559.50"></text></g><g><title>free_pages_and_swap_cache (921,618,625 samples, 0.60%)</title><rect x="77.8968%" y="533" width="0.5984%" height="15" fill="rgb(242,225,1)" fg:x="119962437442" fg:w="921618625"/><text x="78.1468%" y="543.50"></text></g><g><title>folios_put_refs (883,737,125 samples, 0.57%)</title><rect x="77.9214%" y="517" width="0.5738%" height="15" fill="rgb(249,39,40)" fg:x="120000318942" fg:w="883737125"/><text x="78.1714%" y="527.50"></text></g><g><title>free_unref_folios (627,435,026 samples, 0.41%)</title><rect x="78.0878%" y="501" width="0.4074%" height="15" fill="rgb(207,72,44)" fg:x="120256621041" fg:w="627435026"/><text x="78.3378%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (1,158,778,178 samples, 0.75%)</title><rect x="77.7454%" y="693" width="0.7524%" height="15" fill="rgb(215,193,12)" fg:x="119729283525" fg:w="1158778178"/><text x="77.9954%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (1,158,778,178 samples, 0.75%)</title><rect x="77.7454%" y="677" width="0.7524%" height="15" fill="rgb(248,41,39)" fg:x="119729283525" fg:w="1158778178"/><text x="77.9954%" y="687.50"></text></g><g><title>do_group_exit (1,158,778,178 samples, 0.75%)</title><rect x="77.7454%" y="661" width="0.7524%" height="15" fill="rgb(253,85,4)" fg:x="119729283525" fg:w="1158778178"/><text x="77.9954%" y="671.50"></text></g><g><title>do_exit (1,158,778,178 samples, 0.75%)</title><rect x="77.7454%" y="645" width="0.7524%" height="15" fill="rgb(243,70,31)" fg:x="119729283525" fg:w="1158778178"/><text x="77.9954%" y="655.50"></text></g><g><title>__mmput (1,158,778,178 samples, 0.75%)</title><rect x="77.7454%" y="629" width="0.7524%" height="15" fill="rgb(253,195,26)" fg:x="119729283525" fg:w="1158778178"/><text x="77.9954%" y="639.50"></text></g><g><title>exit_mmap (1,158,778,178 samples, 0.75%)</title><rect x="77.7454%" y="613" width="0.7524%" height="15" fill="rgb(243,42,11)" fg:x="119729283525" fg:w="1158778178"/><text x="77.9954%" y="623.50"></text></g><g><title>unmap_vmas (1,145,950,731 samples, 0.74%)</title><rect x="77.7537%" y="597" width="0.7441%" height="15" fill="rgb(239,66,17)" fg:x="119742110972" fg:w="1145950731"/><text x="78.0037%" y="607.50"></text></g><g><title>unmap_page_range (1,145,950,731 samples, 0.74%)</title><rect x="77.7537%" y="581" width="0.7441%" height="15" fill="rgb(217,132,21)" fg:x="119742110972" fg:w="1145950731"/><text x="78.0037%" y="591.50"></text></g><g><title>__futex_queue (58,935,612 samples, 0.04%)</title><rect x="78.6847%" y="613" width="0.0383%" height="15" fill="rgb(252,202,21)" fg:x="121175826427" fg:w="58935612"/><text x="78.9347%" y="623.50"></text></g><g><title>plist_add (51,423,341 samples, 0.03%)</title><rect x="78.6895%" y="597" width="0.0334%" height="15" fill="rgb(233,98,36)" fg:x="121183338698" fg:w="51423341"/><text x="78.9395%" y="607.50"></text></g><g><title>dequeue_task_fair (15,543,178 samples, 0.01%)</title><rect x="78.7574%" y="581" width="0.0101%" height="15" fill="rgb(216,153,54)" fg:x="121287877284" fg:w="15543178"/><text x="79.0074%" y="591.50"></text></g><g><title>raw_spin_rq_lock_nested (69,808,649 samples, 0.05%)</title><rect x="78.7675%" y="581" width="0.0453%" height="15" fill="rgb(250,99,7)" fg:x="121303420462" fg:w="69808649"/><text x="79.0175%" y="591.50"></text></g><g><title>_raw_spin_lock (50,057,290 samples, 0.03%)</title><rect x="78.7803%" y="565" width="0.0325%" height="15" fill="rgb(207,56,50)" fg:x="121323171821" fg:w="50057290"/><text x="79.0303%" y="575.50"></text></g><g><title>rcu_note_context_switch (16,457,558 samples, 0.01%)</title><rect x="78.8128%" y="581" width="0.0107%" height="15" fill="rgb(244,61,34)" fg:x="121373229111" fg:w="16457558"/><text x="79.0628%" y="591.50"></text></g><g><title>__schedule (188,532,254 samples, 0.12%)</title><rect x="78.7307%" y="597" width="0.1224%" height="15" fill="rgb(241,50,38)" fg:x="121246696172" fg:w="188532254"/><text x="78.9807%" y="607.50"></text></g><g><title>update_rq_clock (45,541,757 samples, 0.03%)</title><rect x="78.8235%" y="581" width="0.0296%" height="15" fill="rgb(212,166,30)" fg:x="121389686669" fg:w="45541757"/><text x="79.0735%" y="591.50"></text></g><g><title>schedule (204,334,059 samples, 0.13%)</title><rect x="78.7229%" y="613" width="0.1327%" height="15" fill="rgb(249,127,32)" fg:x="121234762039" fg:w="204334059"/><text x="78.9729%" y="623.50"></text></g><g><title>futex_wait_queue (313,780,569 samples, 0.20%)</title><rect x="78.6543%" y="629" width="0.2038%" height="15" fill="rgb(209,103,0)" fg:x="121129022888" fg:w="313780569"/><text x="78.9043%" y="639.50"></text></g><g><title>futex_get_value_locked (217,706,163 samples, 0.14%)</title><rect x="78.8788%" y="613" width="0.1414%" height="15" fill="rgb(238,209,51)" fg:x="121474787486" fg:w="217706163"/><text x="79.1288%" y="623.50"></text></g><g><title>__get_user_nocheck_4 (197,727,993 samples, 0.13%)</title><rect x="78.8918%" y="597" width="0.1284%" height="15" fill="rgb(237,56,23)" fg:x="121494765656" fg:w="197727993"/><text x="79.1418%" y="607.50"></text></g><g><title>native_queued_spin_lock_slowpath (497,226,682 samples, 0.32%)</title><rect x="79.2728%" y="581" width="0.3229%" height="15" fill="rgb(215,153,46)" fg:x="122081621783" fg:w="497226682"/><text x="79.5228%" y="591.50"></text></g><g><title>_raw_spin_lock (591,246,704 samples, 0.38%)</title><rect x="79.2169%" y="597" width="0.3839%" height="15" fill="rgb(224,49,31)" fg:x="121995528906" fg:w="591246704"/><text x="79.4669%" y="607.50"></text></g><g><title>futex_hash (51,503,964 samples, 0.03%)</title><rect x="79.6009%" y="597" width="0.0334%" height="15" fill="rgb(250,18,42)" fg:x="122586775610" fg:w="51503964"/><text x="79.8509%" y="607.50"></text></g><g><title>futex_q_lock (953,417,725 samples, 0.62%)</title><rect x="79.0202%" y="613" width="0.6191%" height="15" fill="rgb(215,176,39)" fg:x="121692493649" fg:w="953417725"/><text x="79.2702%" y="623.50"></text></g><g><title>futex_q_unlock (38,115,133 samples, 0.02%)</title><rect x="79.6393%" y="613" width="0.0247%" height="15" fill="rgb(223,77,29)" fg:x="122645911374" fg:w="38115133"/><text x="79.8893%" y="623.50"></text></g><g><title>futex_wait_setup (1,269,973,241 samples, 0.82%)</title><rect x="78.8580%" y="629" width="0.8246%" height="15" fill="rgb(234,94,52)" fg:x="121442803457" fg:w="1269973241"/><text x="79.1080%" y="639.50"></text></g><g><title>get_futex_key (28,750,191 samples, 0.02%)</title><rect x="79.6640%" y="613" width="0.0187%" height="15" fill="rgb(220,154,50)" fg:x="122684026507" fg:w="28750191"/><text x="79.9140%" y="623.50"></text></g><g><title>futex_wait (1,817,073,159 samples, 1.18%)</title><rect x="78.5122%" y="661" width="1.1799%" height="15" fill="rgb(212,11,10)" fg:x="120910285032" fg:w="1817073159"/><text x="78.7622%" y="671.50"></text></g><g><title>__futex_wait (1,715,140,029 samples, 1.11%)</title><rect x="78.5784%" y="645" width="1.1137%" height="15" fill="rgb(205,166,19)" fg:x="121012218162" fg:w="1715140029"/><text x="78.8284%" y="655.50"></text></g><g><title>native_queued_spin_lock_slowpath (62,830,420 samples, 0.04%)</title><rect x="79.8034%" y="629" width="0.0408%" height="15" fill="rgb(244,198,16)" fg:x="122898741211" fg:w="62830420"/><text x="80.0534%" y="639.50"></text></g><g><title>_raw_spin_lock (87,357,366 samples, 0.06%)</title><rect x="79.7902%" y="645" width="0.0567%" height="15" fill="rgb(219,69,12)" fg:x="122878438568" fg:w="87357366"/><text x="80.0402%" y="655.50"></text></g><g><title>futex_wake_mark (46,582,002 samples, 0.03%)</title><rect x="79.8545%" y="645" width="0.0302%" height="15" fill="rgb(245,30,7)" fg:x="122977359732" fg:w="46582002"/><text x="80.1045%" y="655.50"></text></g><g><title>__futex_unqueue (17,177,273 samples, 0.01%)</title><rect x="79.8736%" y="629" width="0.0112%" height="15" fill="rgb(218,221,48)" fg:x="123006764461" fg:w="17177273"/><text x="80.1236%" y="639.50"></text></g><g><title>plist_del (17,177,273 samples, 0.01%)</title><rect x="79.8736%" y="613" width="0.0112%" height="15" fill="rgb(216,66,15)" fg:x="123006764461" fg:w="17177273"/><text x="80.1236%" y="623.50"></text></g><g><title>__list_del_entry_valid_or_report (17,177,273 samples, 0.01%)</title><rect x="79.8736%" y="597" width="0.0112%" height="15" fill="rgb(226,122,50)" fg:x="123006764461" fg:w="17177273"/><text x="80.1236%" y="607.50"></text></g><g><title>_raw_spin_lock_irqsave (33,658,095 samples, 0.02%)</title><rect x="79.9222%" y="613" width="0.0219%" height="15" fill="rgb(239,156,16)" fg:x="123081718035" fg:w="33658095"/><text x="80.1722%" y="623.50"></text></g><g><title>do_futex (2,285,157,568 samples, 1.48%)</title><rect x="78.5097%" y="677" width="1.4839%" height="15" fill="rgb(224,27,38)" fg:x="120906412648" fg:w="2285157568"/><text x="78.7597%" y="687.50"></text></g><g><title>futex_wake (464,212,025 samples, 0.30%)</title><rect x="79.6921%" y="661" width="0.3014%" height="15" fill="rgb(224,39,27)" fg:x="122727358191" fg:w="464212025"/><text x="79.9421%" y="671.50"></text></g><g><title>wake_up_q (152,609,745 samples, 0.10%)</title><rect x="79.8945%" y="645" width="0.0991%" height="15" fill="rgb(215,92,29)" fg:x="123038960471" fg:w="152609745"/><text x="80.1445%" y="655.50"></text></g><g><title>try_to_wake_up (152,609,745 samples, 0.10%)</title><rect x="79.8945%" y="629" width="0.0991%" height="15" fill="rgb(207,159,16)" fg:x="123038960471" fg:w="152609745"/><text x="80.1445%" y="639.50"></text></g><g><title>ttwu_queue_wakelist (53,684,213 samples, 0.03%)</title><rect x="79.9587%" y="613" width="0.0349%" height="15" fill="rgb(238,163,47)" fg:x="123137886003" fg:w="53684213"/><text x="80.2087%" y="623.50"></text></g><g><title>__x64_sys_futex (2,303,369,501 samples, 1.50%)</title><rect x="78.4979%" y="693" width="1.4957%" height="15" fill="rgb(219,91,49)" fg:x="120888206302" fg:w="2303369501"/><text x="78.7479%" y="703.50"></text></g><g><title>_copy_to_iter (958,071,902 samples, 0.62%)</title><rect x="80.7412%" y="661" width="0.6221%" height="15" fill="rgb(227,167,31)" fg:x="124342875778" fg:w="958071902"/><text x="80.9912%" y="671.50"></text></g><g><title>check_preemption_disabled (186,888,746 samples, 0.12%)</title><rect x="81.7447%" y="645" width="0.1214%" height="15" fill="rgb(234,80,54)" fg:x="125888330373" fg:w="186888746"/><text x="81.9947%" y="655.50"></text></g><g><title>chacha_permute (2,071,129,906 samples, 1.34%)</title><rect x="82.4788%" y="613" width="1.3449%" height="15" fill="rgb(212,114,2)" fg:x="127018819777" fg:w="2071129906"/><text x="82.7288%" y="623.50"></text></g><g><title>chacha_block_generic (2,409,370,296 samples, 1.56%)</title><rect x="82.2687%" y="629" width="1.5645%" height="15" fill="rgb(234,50,24)" fg:x="126695348519" fg:w="2409370296"/><text x="82.5187%" y="639.50"></text></g><g><title>memcpy (222,791,829 samples, 0.14%)</title><rect x="83.8332%" y="629" width="0.1447%" height="15" fill="rgb(221,68,8)" fg:x="129104718815" fg:w="222791829"/><text x="84.0832%" y="639.50"></text></g><g><title>srso_alias_return_thunk (15,557,138 samples, 0.01%)</title><rect x="83.9779%" y="629" width="0.0101%" height="15" fill="rgb(254,180,31)" fg:x="129327510644" fg:w="15557138"/><text x="84.2279%" y="639.50"></text></g><g><title>srso_alias_safe_ret (15,557,138 samples, 0.01%)</title><rect x="83.9779%" y="613" width="0.0101%" height="15" fill="rgb(247,130,50)" fg:x="129327510644" fg:w="15557138"/><text x="84.2279%" y="623.50"></text></g><g><title>crng_fast_key_erasure (3,271,689,537 samples, 2.12%)</title><rect x="81.8661%" y="645" width="2.1244%" height="15" fill="rgb(211,109,4)" fg:x="126075219119" fg:w="3271689537"/><text x="82.1161%" y="655.50">c..</text></g><g><title>debug_smp_processor_id (93,875,174 samples, 0.06%)</title><rect x="83.9905%" y="645" width="0.0610%" height="15" fill="rgb(238,50,21)" fg:x="129346908656" fg:w="93875174"/><text x="84.2405%" y="655.50"></text></g><g><title>crng_make_state (4,168,214,042 samples, 2.71%)</title><rect x="81.3633%" y="661" width="2.7066%" height="15" fill="rgb(225,57,45)" fg:x="125300947680" fg:w="4168214042"/><text x="81.6133%" y="671.50">cr..</text></g><g><title>srso_alias_return_thunk (28,377,892 samples, 0.02%)</title><rect x="84.0515%" y="645" width="0.0184%" height="15" fill="rgb(209,196,50)" fg:x="129440783830" fg:w="28377892"/><text x="84.3015%" y="655.50"></text></g><g><title>srso_alias_safe_ret (28,377,892 samples, 0.02%)</title><rect x="84.0515%" y="629" width="0.0184%" height="15" fill="rgb(242,140,13)" fg:x="129440783830" fg:w="28377892"/><text x="84.3015%" y="639.50"></text></g><g><title>get_random_bytes_user (6,218,223,880 samples, 4.04%)</title><rect x="80.1151%" y="677" width="4.0378%" height="15" fill="rgb(217,111,7)" fg:x="123378761573" fg:w="6218223880"/><text x="80.3651%" y="687.50">get_..</text></g><g><title>stackleak_track_stack (123,807,838 samples, 0.08%)</title><rect x="84.0725%" y="661" width="0.0804%" height="15" fill="rgb(253,193,51)" fg:x="129473177615" fg:w="123807838"/><text x="84.3225%" y="671.50"></text></g><g><title>import_ubuf (26,586,263 samples, 0.02%)</title><rect x="84.1529%" y="677" width="0.0173%" height="15" fill="rgb(252,70,29)" fg:x="129596985453" fg:w="26586263"/><text x="84.4029%" y="687.50"></text></g><g><title>__x64_sys_getrandom (6,452,502,102 samples, 4.19%)</title><rect x="79.9936%" y="693" width="4.1899%" height="15" fill="rgb(232,127,12)" fg:x="123191575803" fg:w="6452502102"/><text x="80.2436%" y="703.50">__x64..</text></g><g><title>srso_alias_return_thunk (20,506,189 samples, 0.01%)</title><rect x="84.1702%" y="677" width="0.0133%" height="15" fill="rgb(211,180,21)" fg:x="129623571716" fg:w="20506189"/><text x="84.4202%" y="687.50"></text></g><g><title>srso_alias_safe_ret (20,506,189 samples, 0.01%)</title><rect x="84.1702%" y="661" width="0.0133%" height="15" fill="rgb(229,72,13)" fg:x="129623571716" fg:w="20506189"/><text x="84.4202%" y="671.50"></text></g><g><title>can_modify_mm (27,940,826 samples, 0.02%)</title><rect x="84.1985%" y="661" width="0.0181%" height="15" fill="rgb(240,211,49)" fg:x="129667158571" fg:w="27940826"/><text x="84.4485%" y="671.50"></text></g><g><title>down_write_killable (77,519,720 samples, 0.05%)</title><rect x="84.2166%" y="661" width="0.0503%" height="15" fill="rgb(219,149,40)" fg:x="129695099397" fg:w="77519720"/><text x="84.4666%" y="671.50"></text></g><g><title>rwsem_down_write_slowpath (48,786,572 samples, 0.03%)</title><rect x="84.2353%" y="645" width="0.0317%" height="15" fill="rgb(210,127,46)" fg:x="129723832545" fg:w="48786572"/><text x="84.4853%" y="655.50"></text></g><g><title>rwsem_spin_on_owner (45,050,185 samples, 0.03%)</title><rect x="84.2377%" y="629" width="0.0293%" height="15" fill="rgb(220,106,7)" fg:x="129727568932" fg:w="45050185"/><text x="84.4877%" y="639.50"></text></g><g><title>mas_find (22,483,024 samples, 0.01%)</title><rect x="84.2669%" y="661" width="0.0146%" height="15" fill="rgb(249,31,22)" fg:x="129772619117" fg:w="22483024"/><text x="84.5169%" y="671.50"></text></g><g><title>__x64_sys_mprotect (207,604,763 samples, 0.13%)</title><rect x="84.1835%" y="693" width="0.1348%" height="15" fill="rgb(253,1,49)" fg:x="129644077905" fg:w="207604763"/><text x="84.4335%" y="703.50"></text></g><g><title>do_mprotect_pkey (207,604,763 samples, 0.13%)</title><rect x="84.1835%" y="677" width="0.1348%" height="15" fill="rgb(227,144,33)" fg:x="129644077905" fg:w="207604763"/><text x="84.4335%" y="687.50"></text></g><g><title>tlb_gather_mmu (20,549,387 samples, 0.01%)</title><rect x="84.3049%" y="661" width="0.0133%" height="15" fill="rgb(249,163,44)" fg:x="129831133281" fg:w="20549387"/><text x="84.5549%" y="671.50"></text></g><g><title>syscall_exit_to_user_mode (589,414,640 samples, 0.38%)</title><rect x="84.3308%" y="693" width="0.3827%" height="15" fill="rgb(234,15,39)" fg:x="129871011665" fg:w="589414640"/><text x="84.5808%" y="703.50"></text></g><g><title>syscall_exit_to_user_mode_prepare (54,482,448 samples, 0.04%)</title><rect x="84.6782%" y="677" width="0.0354%" height="15" fill="rgb(207,66,16)" fg:x="130405943857" fg:w="54482448"/><text x="84.9282%" y="687.50"></text></g><g><title>do_syscall_64 (11,598,163,266 samples, 7.53%)</title><rect x="77.2188%" y="709" width="7.5312%" height="15" fill="rgb(233,112,24)" fg:x="118918377674" fg:w="11598163266"/><text x="77.4688%" y="719.50">do_syscall..</text></g><g><title>x64_sys_call (56,114,635 samples, 0.04%)</title><rect x="84.7136%" y="693" width="0.0364%" height="15" fill="rgb(230,90,22)" fg:x="130460426305" fg:w="56114635"/><text x="84.9636%" y="703.50"></text></g><g><title>srso_alias_return_thunk (202,352,977 samples, 0.13%)</title><rect x="84.7500%" y="709" width="0.1314%" height="15" fill="rgb(229,61,13)" fg:x="130516540940" fg:w="202352977"/><text x="85.0000%" y="719.50"></text></g><g><title>srso_alias_safe_ret (202,352,977 samples, 0.13%)</title><rect x="84.7500%" y="693" width="0.1314%" height="15" fill="rgb(225,57,24)" fg:x="130516540940" fg:w="202352977"/><text x="85.0000%" y="703.50"></text></g><g><title>srso_alias_safe_ret (23,672,045 samples, 0.02%)</title><rect x="84.8814%" y="709" width="0.0154%" height="15" fill="rgb(208,169,48)" fg:x="130718893917" fg:w="23672045"/><text x="85.1314%" y="719.50"></text></g><g><title>entry_SYSCALL_64 (14,736,262,928 samples, 9.57%)</title><rect x="75.3797%" y="725" width="9.5689%" height="15" fill="rgb(244,218,51)" fg:x="116086048456" fg:w="14736262928"/><text x="75.6297%" y="735.50">entry_SYSCALL_..</text></g><g><title>srso_alias_untrain_ret (79,745,422 samples, 0.05%)</title><rect x="84.8968%" y="709" width="0.0518%" height="15" fill="rgb(214,148,10)" fg:x="130742565962" fg:w="79745422"/><text x="85.1468%" y="719.50"></text></g><g><title>error_entry (51,092,805 samples, 0.03%)</title><rect x="84.9485%" y="725" width="0.0332%" height="15" fill="rgb(225,174,27)" fg:x="130822311384" fg:w="51092805"/><text x="85.1985%" y="735.50"></text></g><g><title>getrandom::imp::getrandom_inner (42,862,163 samples, 0.03%)</title><rect x="84.9817%" y="725" width="0.0278%" height="15" fill="rgb(230,96,26)" fg:x="130873404189" fg:w="42862163"/><text x="85.2317%" y="735.50"></text></g><g><title>getrandom::util_libc::sys_fill_exact (23,413,456 samples, 0.02%)</title><rect x="84.9943%" y="709" width="0.0152%" height="15" fill="rgb(232,10,30)" fg:x="130892852896" fg:w="23413456"/><text x="85.2443%" y="719.50"></text></g><g><title>malloc (649,342,477 samples, 0.42%)</title><rect x="85.0096%" y="725" width="0.4216%" height="15" fill="rgb(222,8,50)" fg:x="130916266352" fg:w="649342477"/><text x="85.2596%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,rpq::pq::PriorityQueue&lt;i32&gt;&gt;&gt;&gt; (16,646,119 samples, 0.01%)</title><rect x="85.5063%" y="709" width="0.0108%" height="15" fill="rgb(213,81,27)" fg:x="131681192794" fg:w="16646119"/><text x="85.7563%" y="719.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16,646,119 samples, 0.01%)</title><rect x="85.5063%" y="693" width="0.0108%" height="15" fill="rgb(245,50,10)" fg:x="131681192794" fg:w="16646119"/><text x="85.7563%" y="703.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read_unlock (16,646,119 samples, 0.01%)</title><rect x="85.5063%" y="677" width="0.0108%" height="15" fill="rgb(216,100,18)" fg:x="131681192794" fg:w="16646119"/><text x="85.7563%" y="687.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (67,458,930 samples, 0.04%)</title><rect x="85.5835%" y="565" width="0.0438%" height="15" fill="rgb(236,147,54)" fg:x="131800145569" fg:w="67458930"/><text x="85.8335%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (130,743,859 samples, 0.08%)</title><rect x="85.5557%" y="581" width="0.0849%" height="15" fill="rgb(205,143,26)" fg:x="131757415917" fg:w="130743859"/><text x="85.8057%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (20,555,277 samples, 0.01%)</title><rect x="85.6273%" y="565" width="0.0133%" height="15" fill="rgb(236,26,9)" fg:x="131867604499" fg:w="20555277"/><text x="85.8773%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (574,044,910 samples, 0.37%)</title><rect x="85.7774%" y="565" width="0.3728%" height="15" fill="rgb(221,165,53)" fg:x="132098792818" fg:w="574044910"/><text x="86.0274%" y="575.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1,337,880,226 samples, 0.87%)</title><rect x="85.5336%" y="629" width="0.8687%" height="15" fill="rgb(214,110,17)" fg:x="131723310432" fg:w="1337880226"/><text x="85.7836%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1,337,880,226 samples, 0.87%)</title><rect x="85.5336%" y="613" width="0.8687%" height="15" fill="rgb(237,197,12)" fg:x="131723310432" fg:w="1337880226"/><text x="85.7836%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1,337,880,226 samples, 0.87%)</title><rect x="85.5336%" y="597" width="0.8687%" height="15" fill="rgb(205,84,17)" fg:x="131723310432" fg:w="1337880226"/><text x="85.7836%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1,173,030,882 samples, 0.76%)</title><rect x="85.6406%" y="581" width="0.7617%" height="15" fill="rgb(237,18,45)" fg:x="131888159776" fg:w="1173030882"/><text x="85.8906%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (388,352,930 samples, 0.25%)</title><rect x="86.1502%" y="565" width="0.2522%" height="15" fill="rgb(221,87,14)" fg:x="132672837728" fg:w="388352930"/><text x="86.4002%" y="575.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (33,972,725 samples, 0.02%)</title><rect x="86.4023%" y="629" width="0.0221%" height="15" fill="rgb(238,186,15)" fg:x="133061190658" fg:w="33972725"/><text x="86.6523%" y="639.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (33,972,725 samples, 0.02%)</title><rect x="86.4023%" y="613" width="0.0221%" height="15" fill="rgb(208,115,11)" fg:x="133061190658" fg:w="33972725"/><text x="86.6523%" y="623.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (33,972,725 samples, 0.02%)</title><rect x="86.4023%" y="597" width="0.0221%" height="15" fill="rgb(254,175,0)" fg:x="133061190658" fg:w="33972725"/><text x="86.6523%" y="607.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (33,972,725 samples, 0.02%)</title><rect x="86.4023%" y="581" width="0.0221%" height="15" fill="rgb(227,24,42)" fg:x="133061190658" fg:w="33972725"/><text x="86.6523%" y="591.50"></text></g><g><title>hashbrown::map::make_hash (1,414,348,054 samples, 0.92%)</title><rect x="85.5308%" y="661" width="0.9184%" height="15" fill="rgb(223,211,37)" fg:x="131719023698" fg:w="1414348054"/><text x="85.7808%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,414,348,054 samples, 0.92%)</title><rect x="85.5308%" y="645" width="0.9184%" height="15" fill="rgb(235,49,27)" fg:x="131719023698" fg:w="1414348054"/><text x="85.7808%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (38,208,369 samples, 0.02%)</title><rect x="86.4244%" y="629" width="0.0248%" height="15" fill="rgb(254,97,51)" fg:x="133095163383" fg:w="38208369"/><text x="86.6744%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (38,208,369 samples, 0.02%)</title><rect x="86.4244%" y="613" width="0.0248%" height="15" fill="rgb(249,51,40)" fg:x="133095163383" fg:w="38208369"/><text x="86.6744%" y="623.50"></text></g><g><title>core::hash::Hasher::write_u64 (38,208,369 samples, 0.02%)</title><rect x="86.4244%" y="597" width="0.0248%" height="15" fill="rgb(210,128,45)" fg:x="133095163383" fg:w="38208369"/><text x="86.6744%" y="607.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (38,208,369 samples, 0.02%)</title><rect x="86.4244%" y="581" width="0.0248%" height="15" fill="rgb(224,137,50)" fg:x="133095163383" fg:w="38208369"/><text x="86.6744%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (38,208,369 samples, 0.02%)</title><rect x="86.4244%" y="565" width="0.0248%" height="15" fill="rgb(242,15,9)" fg:x="133095163383" fg:w="38208369"/><text x="86.6744%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (38,208,369 samples, 0.02%)</title><rect x="86.4244%" y="549" width="0.0248%" height="15" fill="rgb(233,187,41)" fg:x="133095163383" fg:w="38208369"/><text x="86.6744%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (21,130,710 samples, 0.01%)</title><rect x="86.4355%" y="533" width="0.0137%" height="15" fill="rgb(227,2,29)" fg:x="133112241042" fg:w="21130710"/><text x="86.6855%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (21,130,710 samples, 0.01%)</title><rect x="86.4355%" y="517" width="0.0137%" height="15" fill="rgb(222,70,3)" fg:x="133112241042" fg:w="21130710"/><text x="86.6855%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (88,650,027 samples, 0.06%)</title><rect x="86.4936%" y="613" width="0.0576%" height="15" fill="rgb(213,11,42)" fg:x="133201725489" fg:w="88650027"/><text x="86.7436%" y="623.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (37,693,035 samples, 0.02%)</title><rect x="86.5267%" y="597" width="0.0245%" height="15" fill="rgb(225,150,9)" fg:x="133252682481" fg:w="37693035"/><text x="86.7767%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (25,181,664 samples, 0.02%)</title><rect x="86.5512%" y="613" width="0.0164%" height="15" fill="rgb(230,162,45)" fg:x="133290375516" fg:w="25181664"/><text x="86.8012%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (16,616,066 samples, 0.01%)</title><rect x="86.5567%" y="597" width="0.0108%" height="15" fill="rgb(222,14,52)" fg:x="133298941114" fg:w="16616066"/><text x="86.8067%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (16,616,066 samples, 0.01%)</title><rect x="86.5567%" y="581" width="0.0108%" height="15" fill="rgb(254,198,14)" fg:x="133298941114" fg:w="16616066"/><text x="86.8067%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (16,616,066 samples, 0.01%)</title><rect x="86.5567%" y="565" width="0.0108%" height="15" fill="rgb(220,217,30)" fg:x="133298941114" fg:w="16616066"/><text x="86.8067%" y="575.50"></text></g><g><title>hashbrown::raw::h2 (37,923,797 samples, 0.02%)</title><rect x="86.5675%" y="613" width="0.0246%" height="15" fill="rgb(215,146,41)" fg:x="133315557180" fg:w="37923797"/><text x="86.8175%" y="623.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,672,749,158 samples, 1.09%)</title><rect x="85.5171%" y="709" width="1.0862%" height="15" fill="rgb(217,27,36)" fg:x="131697838913" fg:w="1672749158"/><text x="85.7671%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,672,749,158 samples, 1.09%)</title><rect x="85.5171%" y="693" width="1.0862%" height="15" fill="rgb(219,218,39)" fg:x="131697838913" fg:w="1672749158"/><text x="85.7671%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,668,485,008 samples, 1.08%)</title><rect x="85.5198%" y="677" width="1.0834%" height="15" fill="rgb(219,4,42)" fg:x="131702103063" fg:w="1668485008"/><text x="85.7698%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (237,216,319 samples, 0.15%)</title><rect x="86.4492%" y="661" width="0.1540%" height="15" fill="rgb(249,119,36)" fg:x="133133371752" fg:w="237216319"/><text x="86.6992%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (237,216,319 samples, 0.15%)</title><rect x="86.4492%" y="645" width="0.1540%" height="15" fill="rgb(209,23,33)" fg:x="133133371752" fg:w="237216319"/><text x="86.6992%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (237,216,319 samples, 0.15%)</title><rect x="86.4492%" y="629" width="0.1540%" height="15" fill="rgb(211,10,0)" fg:x="133133371752" fg:w="237216319"/><text x="86.6992%" y="639.50"></text></g><g><title>rpq::RPQ&lt;T&gt;::dequeue (1,790,531,510 samples, 1.16%)</title><rect x="85.4510%" y="725" width="1.1627%" height="15" fill="rgb(208,99,37)" fg:x="131596146464" fg:w="1790531510"/><text x="85.7010%" y="735.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (16,089,903 samples, 0.01%)</title><rect x="86.6032%" y="709" width="0.0104%" height="15" fill="rgb(213,132,31)" fg:x="133370588071" fg:w="16089903"/><text x="86.8532%" y="719.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (641,983,903 samples, 0.42%)</title><rect x="86.8357%" y="693" width="0.4169%" height="15" fill="rgb(243,129,40)" fg:x="133728592520" fg:w="641983903"/><text x="87.0857%" y="703.50"></text></g><g><title>&lt;std::time::Instant as core::clone::Clone&gt;::clone (30,952,038 samples, 0.02%)</title><rect x="87.2526%" y="693" width="0.0201%" height="15" fill="rgb(210,66,33)" fg:x="134370576423" fg:w="30952038"/><text x="87.5026%" y="703.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for bool&gt;::clone (45,465,998 samples, 0.03%)</title><rect x="87.2727%" y="693" width="0.0295%" height="15" fill="rgb(209,189,4)" fg:x="134401528461" fg:w="45465998"/><text x="87.5227%" y="703.50"></text></g><g><title>&lt;rpq::pq::Item&lt;T&gt; as core::clone::Clone&gt;::clone (983,718,913 samples, 0.64%)</title><rect x="86.6696%" y="709" width="0.6388%" height="15" fill="rgb(214,107,37)" fg:x="133472767969" fg:w="983718913"/><text x="86.9196%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (134,512,679 samples, 0.09%)</title><rect x="87.5578%" y="565" width="0.0873%" height="15" fill="rgb(245,88,54)" fg:x="134840551532" fg:w="134512679"/><text x="87.8078%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (330,869,906 samples, 0.21%)</title><rect x="87.4803%" y="581" width="0.2148%" height="15" fill="rgb(205,146,20)" fg:x="134721219311" fg:w="330869906"/><text x="87.7303%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (77,025,006 samples, 0.05%)</title><rect x="87.6451%" y="565" width="0.0500%" height="15" fill="rgb(220,161,25)" fg:x="134975064211" fg:w="77025006"/><text x="87.8951%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (679,163,912 samples, 0.44%)</title><rect x="88.0419%" y="565" width="0.4410%" height="15" fill="rgb(215,152,15)" fg:x="135586161750" fg:w="679163912"/><text x="88.2919%" y="575.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (2,100,567,827 samples, 1.36%)</title><rect x="87.3539%" y="629" width="1.3640%" height="15" fill="rgb(233,192,44)" fg:x="134526648947" fg:w="2100567827"/><text x="87.6039%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2,100,567,827 samples, 1.36%)</title><rect x="87.3539%" y="613" width="1.3640%" height="15" fill="rgb(240,170,46)" fg:x="134526648947" fg:w="2100567827"/><text x="87.6039%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2,100,567,827 samples, 1.36%)</title><rect x="87.3539%" y="597" width="1.3640%" height="15" fill="rgb(207,104,33)" fg:x="134526648947" fg:w="2100567827"/><text x="87.6039%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1,575,127,557 samples, 1.02%)</title><rect x="87.6951%" y="581" width="1.0228%" height="15" fill="rgb(219,21,39)" fg:x="135052089217" fg:w="1575127557"/><text x="87.9451%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (361,891,112 samples, 0.23%)</title><rect x="88.4829%" y="565" width="0.2350%" height="15" fill="rgb(214,133,29)" fg:x="136265325662" fg:w="361891112"/><text x="88.7329%" y="575.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (48,990,179 samples, 0.03%)</title><rect x="88.7179%" y="629" width="0.0318%" height="15" fill="rgb(226,93,6)" fg:x="136627216774" fg:w="48990179"/><text x="88.9679%" y="639.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (48,990,179 samples, 0.03%)</title><rect x="88.7179%" y="613" width="0.0318%" height="15" fill="rgb(252,222,34)" fg:x="136627216774" fg:w="48990179"/><text x="88.9679%" y="623.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (48,990,179 samples, 0.03%)</title><rect x="88.7179%" y="597" width="0.0318%" height="15" fill="rgb(252,92,48)" fg:x="136627216774" fg:w="48990179"/><text x="88.9679%" y="607.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (48,990,179 samples, 0.03%)</title><rect x="88.7179%" y="581" width="0.0318%" height="15" fill="rgb(245,223,24)" fg:x="136627216774" fg:w="48990179"/><text x="88.9679%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (30,371,704 samples, 0.02%)</title><rect x="88.7885%" y="517" width="0.0197%" height="15" fill="rgb(205,176,3)" fg:x="136735968308" fg:w="30371704"/><text x="89.0385%" y="527.50"></text></g><g><title>hashbrown::map::make_hash (2,314,054,456 samples, 1.50%)</title><rect x="87.3284%" y="661" width="1.5026%" height="15" fill="rgb(235,151,15)" fg:x="134487297305" fg:w="2314054456"/><text x="87.5784%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,314,054,456 samples, 1.50%)</title><rect x="87.3284%" y="645" width="1.5026%" height="15" fill="rgb(237,209,11)" fg:x="134487297305" fg:w="2314054456"/><text x="87.5784%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (125,144,808 samples, 0.08%)</title><rect x="88.7497%" y="629" width="0.0813%" height="15" fill="rgb(243,227,24)" fg:x="136676206953" fg:w="125144808"/><text x="88.9997%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (108,742,473 samples, 0.07%)</title><rect x="88.7604%" y="613" width="0.0706%" height="15" fill="rgb(239,193,16)" fg:x="136692609288" fg:w="108742473"/><text x="89.0104%" y="623.50"></text></g><g><title>core::hash::Hasher::write_u64 (108,742,473 samples, 0.07%)</title><rect x="88.7604%" y="597" width="0.0706%" height="15" fill="rgb(231,27,9)" fg:x="136692609288" fg:w="108742473"/><text x="89.0104%" y="607.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (108,742,473 samples, 0.07%)</title><rect x="88.7604%" y="581" width="0.0706%" height="15" fill="rgb(219,169,10)" fg:x="136692609288" fg:w="108742473"/><text x="89.0104%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (108,742,473 samples, 0.07%)</title><rect x="88.7604%" y="565" width="0.0706%" height="15" fill="rgb(244,229,43)" fg:x="136692609288" fg:w="108742473"/><text x="89.0104%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (108,742,473 samples, 0.07%)</title><rect x="88.7604%" y="549" width="0.0706%" height="15" fill="rgb(254,38,20)" fg:x="136692609288" fg:w="108742473"/><text x="89.0104%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (84,750,690 samples, 0.06%)</title><rect x="88.7760%" y="533" width="0.0550%" height="15" fill="rgb(250,47,30)" fg:x="136716601071" fg:w="84750690"/><text x="89.0260%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (35,011,749 samples, 0.02%)</title><rect x="88.8083%" y="517" width="0.0227%" height="15" fill="rgb(224,124,36)" fg:x="136766340012" fg:w="35011749"/><text x="89.0583%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (301,027,680 samples, 0.20%)</title><rect x="88.9228%" y="613" width="0.1955%" height="15" fill="rgb(246,68,51)" fg:x="136942774888" fg:w="301027680"/><text x="89.1728%" y="623.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (66,179,388 samples, 0.04%)</title><rect x="89.0753%" y="597" width="0.0430%" height="15" fill="rgb(253,43,49)" fg:x="137177623180" fg:w="66179388"/><text x="89.3253%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (146,080,345 samples, 0.09%)</title><rect x="89.1239%" y="597" width="0.0949%" height="15" fill="rgb(219,54,36)" fg:x="137252510929" fg:w="146080345"/><text x="89.3739%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (146,080,345 samples, 0.09%)</title><rect x="89.1239%" y="581" width="0.0949%" height="15" fill="rgb(227,133,34)" fg:x="137252510929" fg:w="146080345"/><text x="89.3739%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (146,080,345 samples, 0.09%)</title><rect x="89.1239%" y="565" width="0.0949%" height="15" fill="rgb(247,227,15)" fg:x="137252510929" fg:w="146080345"/><text x="89.3739%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (146,080,345 samples, 0.09%)</title><rect x="89.1239%" y="549" width="0.0949%" height="15" fill="rgb(229,96,14)" fg:x="137252510929" fg:w="146080345"/><text x="89.3739%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (428,860,066 samples, 0.28%)</title><rect x="89.1183%" y="613" width="0.2785%" height="15" fill="rgb(220,79,17)" fg:x="137243802568" fg:w="428860066"/><text x="89.3683%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (274,071,360 samples, 0.18%)</title><rect x="89.2188%" y="597" width="0.1780%" height="15" fill="rgb(205,131,53)" fg:x="137398591274" fg:w="274071360"/><text x="89.4688%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (274,071,360 samples, 0.18%)</title><rect x="89.2188%" y="581" width="0.1780%" height="15" fill="rgb(209,50,29)" fg:x="137398591274" fg:w="274071360"/><text x="89.4688%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (274,071,360 samples, 0.18%)</title><rect x="89.2188%" y="565" width="0.1780%" height="15" fill="rgb(245,86,46)" fg:x="137398591274" fg:w="274071360"/><text x="89.4688%" y="575.50"></text></g><g><title>hashbrown::raw::h2 (335,100,001 samples, 0.22%)</title><rect x="89.3968%" y="613" width="0.2176%" height="15" fill="rgb(235,66,46)" fg:x="137672662634" fg:w="335100001"/><text x="89.6468%" y="623.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3,585,450,864 samples, 2.33%)</title><rect x="87.3084%" y="709" width="2.3282%" height="15" fill="rgb(232,148,31)" fg:x="134456486882" fg:w="3585450864"/><text x="87.5584%" y="719.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3,585,450,864 samples, 2.33%)</title><rect x="87.3084%" y="693" width="2.3282%" height="15" fill="rgb(217,149,8)" fg:x="134456486882" fg:w="3585450864"/><text x="87.5584%" y="703.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3,585,450,864 samples, 2.33%)</title><rect x="87.3084%" y="677" width="2.3282%" height="15" fill="rgb(209,183,11)" fg:x="134456486882" fg:w="3585450864"/><text x="87.5584%" y="687.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,240,585,985 samples, 0.81%)</title><rect x="88.8310%" y="661" width="0.8056%" height="15" fill="rgb(208,55,20)" fg:x="136801351761" fg:w="1240585985"/><text x="89.0810%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,240,585,985 samples, 0.81%)</title><rect x="88.8310%" y="645" width="0.8056%" height="15" fill="rgb(218,39,14)" fg:x="136801351761" fg:w="1240585985"/><text x="89.0810%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1,240,585,985 samples, 0.81%)</title><rect x="88.8310%" y="629" width="0.8056%" height="15" fill="rgb(216,169,33)" fg:x="136801351761" fg:w="1240585985"/><text x="89.0810%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (25,189,411 samples, 0.02%)</title><rect x="89.6202%" y="613" width="0.0164%" height="15" fill="rgb(233,80,24)" fg:x="138016748335" fg:w="25189411"/><text x="89.8702%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (25,189,411 samples, 0.02%)</title><rect x="89.6202%" y="597" width="0.0164%" height="15" fill="rgb(213,179,31)" fg:x="138016748335" fg:w="25189411"/><text x="89.8702%" y="607.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (21,291,503 samples, 0.01%)</title><rect x="89.6947%" y="693" width="0.0138%" height="15" fill="rgb(209,19,5)" fg:x="138131493184" fg:w="21291503"/><text x="89.9447%" y="703.50"></text></g><g><title>std::sync::poison::Flag::borrow (21,291,503 samples, 0.01%)</title><rect x="89.6947%" y="677" width="0.0138%" height="15" fill="rgb(219,18,35)" fg:x="138131493184" fg:w="21291503"/><text x="89.9447%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (30,678,416 samples, 0.02%)</title><rect x="91.3332%" y="677" width="0.0199%" height="15" fill="rgb(209,169,16)" fg:x="140654741189" fg:w="30678416"/><text x="91.5832%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (30,678,416 samples, 0.02%)</title><rect x="91.3332%" y="661" width="0.0199%" height="15" fill="rgb(245,90,51)" fg:x="140654741189" fg:w="30678416"/><text x="91.5832%" y="671.50"></text></g><g><title>rpq::RPQ&lt;T&gt;::enqueue (7,304,229,729 samples, 4.74%)</title><rect x="86.6137%" y="725" width="4.7430%" height="15" fill="rgb(220,99,45)" fg:x="133386677974" fg:w="7304229729"/><text x="86.8637%" y="735.50">rpq::R..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (2,648,969,957 samples, 1.72%)</title><rect x="89.6366%" y="709" width="1.7201%" height="15" fill="rgb(249,89,25)" fg:x="138041937746" fg:w="2648969957"/><text x="89.8866%" y="719.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read (2,538,123,016 samples, 1.65%)</title><rect x="89.7085%" y="693" width="1.6481%" height="15" fill="rgb(239,193,0)" fg:x="138152784687" fg:w="2538123016"/><text x="89.9585%" y="703.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::contains (16,508,223 samples, 0.01%)</title><rect x="91.3637%" y="709" width="0.0107%" height="15" fill="rgb(231,126,1)" fg:x="140701832620" fg:w="16508223"/><text x="91.6137%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (16,508,223 samples, 0.01%)</title><rect x="91.3637%" y="693" width="0.0107%" height="15" fill="rgb(243,166,3)" fg:x="140701832620" fg:w="16508223"/><text x="91.6137%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (16,508,223 samples, 0.01%)</title><rect x="91.3637%" y="677" width="0.0107%" height="15" fill="rgb(223,22,34)" fg:x="140701832620" fg:w="16508223"/><text x="91.6137%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (16,508,223 samples, 0.01%)</title><rect x="91.3637%" y="661" width="0.0107%" height="15" fill="rgb(251,52,51)" fg:x="140701832620" fg:w="16508223"/><text x="91.6137%" y="671.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (22,206,564 samples, 0.01%)</title><rect x="91.3833%" y="709" width="0.0144%" height="15" fill="rgb(221,165,28)" fg:x="140732026457" fg:w="22206564"/><text x="91.6333%" y="719.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read (22,206,564 samples, 0.01%)</title><rect x="91.3833%" y="693" width="0.0144%" height="15" fill="rgb(218,121,47)" fg:x="140732026457" fg:w="22206564"/><text x="91.6333%" y="703.50"></text></g><g><title>rpq::bpq::BucketPriorityQueue::add_bucket (66,622,231 samples, 0.04%)</title><rect x="91.3566%" y="725" width="0.0433%" height="15" fill="rgb(209,120,9)" fg:x="140690907703" fg:w="66622231"/><text x="91.6066%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;alloc::collections::vec_deque::VecDeque&lt;rpq::pq::Item&lt;i32&gt;&gt;&gt;&gt; (34,198,466 samples, 0.02%)</title><rect x="91.4142%" y="709" width="0.0222%" height="15" fill="rgb(236,68,12)" fg:x="140779533586" fg:w="34198466"/><text x="91.6642%" y="719.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (34,198,466 samples, 0.02%)</title><rect x="91.4142%" y="693" width="0.0222%" height="15" fill="rgb(225,194,26)" fg:x="140779533586" fg:w="34198466"/><text x="91.6642%" y="703.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::write_unlock (34,198,466 samples, 0.02%)</title><rect x="91.4142%" y="677" width="0.0222%" height="15" fill="rgb(231,84,39)" fg:x="140779533586" fg:w="34198466"/><text x="91.6642%" y="687.50"></text></g><g><title>entry_SYSCALL_64 (27,224,279 samples, 0.02%)</title><rect x="91.4187%" y="661" width="0.0177%" height="15" fill="rgb(210,11,45)" fg:x="140786507773" fg:w="27224279"/><text x="91.6687%" y="671.50"></text></g><g><title>rpq::pq::PriorityQueue&lt;T&gt;::enqueue (53,424,537 samples, 0.03%)</title><rect x="91.4071%" y="725" width="0.0347%" height="15" fill="rgb(224,54,52)" fg:x="140768602525" fg:w="53424537"/><text x="91.6571%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (23,463,908 samples, 0.02%)</title><rect x="91.6494%" y="709" width="0.0152%" height="15" fill="rgb(238,102,14)" fg:x="141141676493" fg:w="23463908"/><text x="91.8994%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (23,463,908 samples, 0.02%)</title><rect x="91.6494%" y="693" width="0.0152%" height="15" fill="rgb(243,160,52)" fg:x="141141676493" fg:w="23463908"/><text x="91.8994%" y="703.50"></text></g><g><title>entry_SYSCALL_64 (22,532,724 samples, 0.01%)</title><rect x="91.6646%" y="709" width="0.0146%" height="15" fill="rgb(216,114,19)" fg:x="141165140401" fg:w="22532724"/><text x="91.9146%" y="719.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_read (52,886,549 samples, 0.03%)</title><rect x="91.6792%" y="709" width="0.0343%" height="15" fill="rgb(244,166,37)" fg:x="141187673125" fg:w="52886549"/><text x="91.9292%" y="719.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_until (52,886,549 samples, 0.03%)</title><rect x="91.6792%" y="693" width="0.0343%" height="15" fill="rgb(246,29,44)" fg:x="141187673125" fg:w="52886549"/><text x="91.9292%" y="703.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read_contended (493,525,583 samples, 0.32%)</title><rect x="91.4455%" y="725" width="0.3205%" height="15" fill="rgb(215,56,53)" fg:x="140827696988" fg:w="493525583"/><text x="91.6955%" y="735.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::is_read_lockable (80,662,897 samples, 0.05%)</title><rect x="91.7136%" y="709" width="0.0524%" height="15" fill="rgb(217,60,2)" fg:x="141240559674" fg:w="80662897"/><text x="91.9636%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (36,428,327 samples, 0.02%)</title><rect x="91.8104%" y="677" width="0.0237%" height="15" fill="rgb(207,26,24)" fg:x="141389682204" fg:w="36428327"/><text x="92.0604%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (36,428,327 samples, 0.02%)</title><rect x="91.8104%" y="661" width="0.0237%" height="15" fill="rgb(252,210,15)" fg:x="141389682204" fg:w="36428327"/><text x="92.0604%" y="671.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::write_contended (116,518,562 samples, 0.08%)</title><rect x="91.7659%" y="725" width="0.0757%" height="15" fill="rgb(253,209,26)" fg:x="141321222571" fg:w="116518562"/><text x="92.0159%" y="735.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_write (103,715,305 samples, 0.07%)</title><rect x="91.7743%" y="709" width="0.0673%" height="15" fill="rgb(238,170,14)" fg:x="141334025828" fg:w="103715305"/><text x="92.0243%" y="719.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_until (103,715,305 samples, 0.07%)</title><rect x="91.7743%" y="693" width="0.0673%" height="15" fill="rgb(216,178,15)" fg:x="141334025828" fg:w="103715305"/><text x="92.0243%" y="703.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (105,423,937 samples, 0.07%)</title><rect x="91.8416%" y="725" width="0.0685%" height="15" fill="rgb(250,197,2)" fg:x="141437741133" fg:w="105423937"/><text x="92.0916%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;rpq::pq::Item&lt;i32&gt;&gt;&gt; (29,584,280 samples, 0.02%)</title><rect x="92.0415%" y="693" width="0.0192%" height="15" fill="rgb(212,70,42)" fg:x="141745522110" fg:w="29584280"/><text x="92.2915%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_add (66,326,352 samples, 0.04%)</title><rect x="92.0607%" y="693" width="0.0431%" height="15" fill="rgb(227,213,9)" fg:x="141775106390" fg:w="66326352"/><text x="92.3107%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_add (66,326,352 samples, 0.04%)</title><rect x="92.0607%" y="677" width="0.0431%" height="15" fill="rgb(245,99,25)" fg:x="141775106390" fg:w="66326352"/><text x="92.3107%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (48,331,309 samples, 0.03%)</title><rect x="92.1037%" y="693" width="0.0314%" height="15" fill="rgb(250,82,29)" fg:x="141841432742" fg:w="48331309"/><text x="92.3537%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (48,331,309 samples, 0.03%)</title><rect x="92.1037%" y="677" width="0.0314%" height="15" fill="rgb(241,226,54)" fg:x="141841432742" fg:w="48331309"/><text x="92.3537%" y="687.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (345,418,577 samples, 0.22%)</title><rect x="91.9157%" y="725" width="0.2243%" height="15" fill="rgb(221,99,41)" fg:x="141551935163" fg:w="345418577"/><text x="92.1657%" y="735.50"></text></g><g><title>rpq::main::_{{closure}} (345,418,577 samples, 0.22%)</title><rect x="91.9157%" y="709" width="0.2243%" height="15" fill="rgb(213,90,21)" fg:x="141551935163" fg:w="345418577"/><text x="92.1657%" y="719.50"></text></g><g><title>syscall (111,888,647 samples, 0.07%)</title><rect x="92.1477%" y="725" width="0.0727%" height="15" fill="rgb(205,208,24)" fg:x="141909155947" fg:w="111888647"/><text x="92.3977%" y="735.50"></text></g><g><title>srso_alias_return_thunk (106,031,870 samples, 0.07%)</title><rect x="95.9309%" y="709" width="0.0689%" height="15" fill="rgb(246,31,12)" fg:x="147735339016" fg:w="106031870"/><text x="96.1809%" y="719.50"></text></g><g><title>srso_alias_safe_ret (106,031,870 samples, 0.07%)</title><rect x="95.9309%" y="693" width="0.0689%" height="15" fill="rgb(213,154,6)" fg:x="147735339016" fg:w="106031870"/><text x="96.1809%" y="703.50"></text></g><g><title>syscall_return_via_sysret (11,577,833,225 samples, 7.52%)</title><rect x="92.2204%" y="725" width="7.5180%" height="15" fill="rgb(222,163,29)" fg:x="142021044594" fg:w="11577833225"/><text x="92.4704%" y="735.50">syscall_re..</text></g><g><title>stackleak_erase (5,754,119,034 samples, 3.74%)</title><rect x="96.0020%" y="709" width="3.7364%" height="15" fill="rgb(227,201,8)" fg:x="147844758785" fg:w="5754119034"/><text x="96.2520%" y="719.50">stac..</text></g><g><title>uuid::fmt::format_hyphenated (29,600,789 samples, 0.02%)</title><rect x="99.7383%" y="725" width="0.0192%" height="15" fill="rgb(233,9,32)" fg:x="153598877819" fg:w="29600789"/><text x="99.9883%" y="735.50"></text></g><g><title>uuid::builder::&lt;impl uuid::Uuid&gt;::from_u128 (105,588,923 samples, 0.07%)</title><rect x="99.7793%" y="709" width="0.0686%" height="15" fill="rgb(217,54,24)" fg:x="153661969421" fg:w="105588923"/><text x="100.0293%" y="719.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (134,368,317 samples, 0.09%)</title><rect x="99.9012%" y="693" width="0.0873%" height="15" fill="rgb(235,192,0)" fg:x="153849641579" fg:w="134368317"/><text x="100.1512%" y="703.50"></text></g><g><title>all (154,001,828,498 samples, 100%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(235,45,9)" fg:x="0" fg:w="154001828498"/><text x="0.2500%" y="767.50"></text></g><g><title>rpq (154,001,822,534 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(246,42,40)" fg:x="5964" fg:w="154001822534"/><text x="0.2500%" y="751.50">rpq</text></g><g><title>uuid::v4::&lt;impl uuid::Uuid&gt;::new_v4 (373,349,890 samples, 0.24%)</title><rect x="99.7576%" y="725" width="0.2424%" height="15" fill="rgb(248,111,24)" fg:x="153628478608" fg:w="373349890"/><text x="100.0076%" y="735.50"></text></g><g><title>uuid::rng::u128 (234,270,154 samples, 0.15%)</title><rect x="99.8479%" y="709" width="0.1521%" height="15" fill="rgb(249,65,22)" fg:x="153767558344" fg:w="234270154"/><text x="100.0979%" y="719.50"></text></g><g><title>getrandom::getrandom (17,818,602 samples, 0.01%)</title><rect x="99.9884%" y="693" width="0.0116%" height="15" fill="rgb(238,111,51)" fg:x="153984009896" fg:w="17818602"/><text x="100.2384%" y="703.50"></text></g><g><title>getrandom::getrandom_uninit (17,818,602 samples, 0.01%)</title><rect x="99.9884%" y="677" width="0.0116%" height="15" fill="rgb(250,118,22)" fg:x="153984009896" fg:w="17818602"/><text x="100.2384%" y="687.50"></text></g></svg></svg>