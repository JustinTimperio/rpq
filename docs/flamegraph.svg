<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1110" onload="init(evt)" viewBox="0 0 1200 1110" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1110" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1093.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1093.00"> </text><svg id="frames" x="10" width="1180" total_samples="137052689532"><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (70,003,345 samples, 0.05%)</title><rect x="0.0028%" y="1013" width="0.0511%" height="15" fill="rgb(227,0,7)" fg:x="3797191" fg:w="70003345"/><text x="0.2528%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (58,121,031 samples, 0.04%)</title><rect x="0.0114%" y="997" width="0.0424%" height="15" fill="rgb(217,0,24)" fg:x="15679505" fg:w="58121031"/><text x="0.2614%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (58,121,031 samples, 0.04%)</title><rect x="0.0114%" y="981" width="0.0424%" height="15" fill="rgb(221,193,54)" fg:x="15679505" fg:w="58121031"/><text x="0.2614%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (58,121,031 samples, 0.04%)</title><rect x="0.0114%" y="965" width="0.0424%" height="15" fill="rgb(248,212,6)" fg:x="15679505" fg:w="58121031"/><text x="0.2614%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (58,121,031 samples, 0.04%)</title><rect x="0.0114%" y="949" width="0.0424%" height="15" fill="rgb(208,68,35)" fg:x="15679505" fg:w="58121031"/><text x="0.2614%" y="959.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (46,962,285 samples, 0.03%)</title><rect x="0.0196%" y="933" width="0.0343%" height="15" fill="rgb(232,128,0)" fg:x="26838251" fg:w="46962285"/><text x="0.2696%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (46,962,285 samples, 0.03%)</title><rect x="0.0196%" y="917" width="0.0343%" height="15" fill="rgb(207,160,47)" fg:x="26838251" fg:w="46962285"/><text x="0.2696%" y="927.50"></text></g><g><title>[libc.so.6] (15,851,463 samples, 0.01%)</title><rect x="0.0593%" y="1013" width="0.0116%" height="15" fill="rgb(228,23,34)" fg:x="81222659" fg:w="15851463"/><text x="0.3093%" y="1023.50"></text></g><g><title>__rust_dealloc (14,359,406 samples, 0.01%)</title><rect x="0.0738%" y="1013" width="0.0105%" height="15" fill="rgb(218,30,26)" fg:x="101106906" fg:w="14359406"/><text x="0.3238%" y="1023.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_down_to_bottom (15,483,613 samples, 0.01%)</title><rect x="0.1097%" y="965" width="0.0113%" height="15" fill="rgb(220,122,19)" fg:x="150283834" fg:w="15483613"/><text x="0.3597%" y="975.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::pop (46,519,795 samples, 0.03%)</title><rect x="0.0899%" y="1013" width="0.0339%" height="15" fill="rgb(250,228,42)" fg:x="123163430" fg:w="46519795"/><text x="0.3399%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (23,687,747 samples, 0.02%)</title><rect x="0.1065%" y="997" width="0.0173%" height="15" fill="rgb(240,193,28)" fg:x="145995478" fg:w="23687747"/><text x="0.3565%" y="1007.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::pop::_{{closure}} (19,399,391 samples, 0.01%)</title><rect x="0.1097%" y="981" width="0.0142%" height="15" fill="rgb(216,20,37)" fg:x="150283834" fg:w="19399391"/><text x="0.3597%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (34,332,295 samples, 0.03%)</title><rect x="0.1238%" y="997" width="0.0251%" height="15" fill="rgb(206,188,39)" fg:x="169683225" fg:w="34332295"/><text x="0.3738%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (38,030,281 samples, 0.03%)</title><rect x="0.1238%" y="1013" width="0.0277%" height="15" fill="rgb(217,207,13)" fg:x="169683225" fg:w="38030281"/><text x="0.3738%" y="1023.50"></text></g><g><title>cfree (18,335,289 samples, 0.01%)</title><rect x="0.1571%" y="1013" width="0.0134%" height="15" fill="rgb(231,73,38)" fg:x="215289326" fg:w="18335289"/><text x="0.4071%" y="1023.50"></text></g><g><title>getrandom::imp::getrandom_inner (106,306,570 samples, 0.08%)</title><rect x="0.1705%" y="1013" width="0.0776%" height="15" fill="rgb(225,20,46)" fg:x="233624615" fg:w="106306570"/><text x="0.4205%" y="1023.50"></text></g><g><title>getrandom::util_libc::sys_fill_exact (89,916,533 samples, 0.07%)</title><rect x="0.1824%" y="997" width="0.0656%" height="15" fill="rgb(210,31,41)" fg:x="250014652" fg:w="89916533"/><text x="0.4324%" y="1007.50"></text></g><g><title>rand::rngs::thread::thread_rng (19,452,108 samples, 0.01%)</title><rect x="0.2480%" y="1013" width="0.0142%" height="15" fill="rgb(221,200,47)" fg:x="339931185" fg:w="19452108"/><text x="0.4980%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (19,452,108 samples, 0.01%)</title><rect x="0.2480%" y="997" width="0.0142%" height="15" fill="rgb(226,26,5)" fg:x="339931185" fg:w="19452108"/><text x="0.4980%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (19,452,108 samples, 0.01%)</title><rect x="0.2480%" y="981" width="0.0142%" height="15" fill="rgb(249,33,26)" fg:x="339931185" fg:w="19452108"/><text x="0.4980%" y="991.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (95,725,836 samples, 0.07%)</title><rect x="0.2622%" y="1013" width="0.0698%" height="15" fill="rgb(235,183,28)" fg:x="359383293" fg:w="95725836"/><text x="0.5122%" y="1023.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (95,725,836 samples, 0.07%)</title><rect x="0.2622%" y="997" width="0.0698%" height="15" fill="rgb(221,5,38)" fg:x="359383293" fg:w="95725836"/><text x="0.5122%" y="1007.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (95,725,836 samples, 0.07%)</title><rect x="0.2622%" y="981" width="0.0698%" height="15" fill="rgb(247,18,42)" fg:x="359383293" fg:w="95725836"/><text x="0.5122%" y="991.50"></text></g><g><title>rand_chacha::guts::round (48,378,363 samples, 0.04%)</title><rect x="0.2968%" y="965" width="0.0353%" height="15" fill="rgb(241,131,45)" fg:x="406730766" fg:w="48378363"/><text x="0.5468%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (16,204,412 samples, 0.01%)</title><rect x="0.4018%" y="869" width="0.0118%" height="15" fill="rgb(249,31,29)" fg:x="550739149" fg:w="16204412"/><text x="0.6518%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (16,204,412 samples, 0.01%)</title><rect x="0.4018%" y="853" width="0.0118%" height="15" fill="rgb(225,111,53)" fg:x="550739149" fg:w="16204412"/><text x="0.6518%" y="863.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (172,758,844 samples, 0.13%)</title><rect x="0.4804%" y="853" width="0.1261%" height="15" fill="rgb(238,160,17)" fg:x="658465629" fg:w="172758844"/><text x="0.7304%" y="863.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (398,153,625 samples, 0.29%)</title><rect x="0.3844%" y="917" width="0.2905%" height="15" fill="rgb(214,148,48)" fg:x="526803018" fg:w="398153625"/><text x="0.6344%" y="927.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (398,153,625 samples, 0.29%)</title><rect x="0.3844%" y="901" width="0.2905%" height="15" fill="rgb(232,36,49)" fg:x="526803018" fg:w="398153625"/><text x="0.6344%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (398,153,625 samples, 0.29%)</title><rect x="0.3844%" y="885" width="0.2905%" height="15" fill="rgb(209,103,24)" fg:x="526803018" fg:w="398153625"/><text x="0.6344%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (358,013,082 samples, 0.26%)</title><rect x="0.4137%" y="869" width="0.2612%" height="15" fill="rgb(229,88,8)" fg:x="566943561" fg:w="358013082"/><text x="0.6637%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (93,732,170 samples, 0.07%)</title><rect x="0.6065%" y="853" width="0.0684%" height="15" fill="rgb(213,181,19)" fg:x="831224473" fg:w="93732170"/><text x="0.8565%" y="863.50"></text></g><g><title>hashbrown::map::make_hash (425,051,767 samples, 0.31%)</title><rect x="0.3844%" y="949" width="0.3101%" height="15" fill="rgb(254,191,54)" fg:x="526803018" fg:w="425051767"/><text x="0.6344%" y="959.50"></text></g><g><title>core::hash::BuildHasher::hash_one (425,051,767 samples, 0.31%)</title><rect x="0.3844%" y="933" width="0.3101%" height="15" fill="rgb(241,83,37)" fg:x="526803018" fg:w="425051767"/><text x="0.6344%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (23,800,276 samples, 0.02%)</title><rect x="0.6772%" y="917" width="0.0174%" height="15" fill="rgb(233,36,39)" fg:x="928054509" fg:w="23800276"/><text x="0.9272%" y="927.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (23,800,276 samples, 0.02%)</title><rect x="0.6772%" y="901" width="0.0174%" height="15" fill="rgb(226,3,54)" fg:x="928054509" fg:w="23800276"/><text x="0.9272%" y="911.50"></text></g><g><title>core::hash::Hasher::write_u64 (23,800,276 samples, 0.02%)</title><rect x="0.6772%" y="885" width="0.0174%" height="15" fill="rgb(245,192,40)" fg:x="928054509" fg:w="23800276"/><text x="0.9272%" y="895.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (23,800,276 samples, 0.02%)</title><rect x="0.6772%" y="869" width="0.0174%" height="15" fill="rgb(238,167,29)" fg:x="928054509" fg:w="23800276"/><text x="0.9272%" y="879.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (23,800,276 samples, 0.02%)</title><rect x="0.6772%" y="853" width="0.0174%" height="15" fill="rgb(232,182,51)" fg:x="928054509" fg:w="23800276"/><text x="0.9272%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (23,800,276 samples, 0.02%)</title><rect x="0.6772%" y="837" width="0.0174%" height="15" fill="rgb(231,60,39)" fg:x="928054509" fg:w="23800276"/><text x="0.9272%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (23,800,276 samples, 0.02%)</title><rect x="0.6772%" y="821" width="0.0174%" height="15" fill="rgb(208,69,12)" fg:x="928054509" fg:w="23800276"/><text x="0.9272%" y="831.50"></text></g><g><title>hashbrown::raw::h2 (29,393,623 samples, 0.02%)</title><rect x="0.7094%" y="901" width="0.0214%" height="15" fill="rgb(235,93,37)" fg:x="972236378" fg:w="29393623"/><text x="0.9594%" y="911.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (493,223,886 samples, 0.36%)</title><rect x="0.3735%" y="997" width="0.3599%" height="15" fill="rgb(213,116,39)" fg:x="511939545" fg:w="493223886"/><text x="0.6235%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (493,223,886 samples, 0.36%)</title><rect x="0.3735%" y="981" width="0.3599%" height="15" fill="rgb(222,207,29)" fg:x="511939545" fg:w="493223886"/><text x="0.6235%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (493,223,886 samples, 0.36%)</title><rect x="0.3735%" y="965" width="0.3599%" height="15" fill="rgb(206,96,30)" fg:x="511939545" fg:w="493223886"/><text x="0.6235%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (53,308,646 samples, 0.04%)</title><rect x="0.6945%" y="949" width="0.0389%" height="15" fill="rgb(218,138,4)" fg:x="951854785" fg:w="53308646"/><text x="0.9445%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (53,308,646 samples, 0.04%)</title><rect x="0.6945%" y="933" width="0.0389%" height="15" fill="rgb(250,191,14)" fg:x="951854785" fg:w="53308646"/><text x="0.9445%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (53,308,646 samples, 0.04%)</title><rect x="0.6945%" y="917" width="0.0389%" height="15" fill="rgb(239,60,40)" fg:x="951854785" fg:w="53308646"/><text x="0.9445%" y="927.50"></text></g><g><title>rpq::RPQ&lt;T&gt;::dequeue (596,494,685 samples, 0.44%)</title><rect x="0.3321%" y="1013" width="0.4352%" height="15" fill="rgb(206,27,48)" fg:x="455109129" fg:w="596494685"/><text x="0.5821%" y="1023.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (46,440,383 samples, 0.03%)</title><rect x="0.7334%" y="997" width="0.0339%" height="15" fill="rgb(225,35,8)" fg:x="1005163431" fg:w="46440383"/><text x="0.9834%" y="1007.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read (43,462,740 samples, 0.03%)</title><rect x="0.7356%" y="981" width="0.0317%" height="15" fill="rgb(250,213,24)" fg:x="1008141074" fg:w="43462740"/><text x="0.9856%" y="991.50"></text></g><g><title>&lt;rpq::schema::Item&lt;T&gt; as core::clone::Clone&gt;::clone (26,504,073 samples, 0.02%)</title><rect x="0.7786%" y="997" width="0.0193%" height="15" fill="rgb(247,123,22)" fg:x="1067114343" fg:w="26504073"/><text x="1.0286%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpq::schema::Item&lt;u64&gt;&gt; (18,834,031 samples, 0.01%)</title><rect x="0.7980%" y="997" width="0.0137%" height="15" fill="rgb(231,138,38)" fg:x="1093618416" fg:w="18834031"/><text x="1.0480%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (18,834,031 samples, 0.01%)</title><rect x="0.7980%" y="981" width="0.0137%" height="15" fill="rgb(231,145,46)" fg:x="1093618416" fg:w="18834031"/><text x="1.0480%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,rpq::pq::PriorityQueue&lt;u64&gt;&gt;&gt;&gt; (27,097,670 samples, 0.02%)</title><rect x="0.8117%" y="997" width="0.0198%" height="15" fill="rgb(251,118,11)" fg:x="1112452447" fg:w="27097670"/><text x="1.0617%" y="1007.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (27,097,670 samples, 0.02%)</title><rect x="0.8117%" y="981" width="0.0198%" height="15" fill="rgb(217,147,25)" fg:x="1112452447" fg:w="27097670"/><text x="1.0617%" y="991.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read_unlock (27,097,670 samples, 0.02%)</title><rect x="0.8117%" y="965" width="0.0198%" height="15" fill="rgb(247,81,37)" fg:x="1112452447" fg:w="27097670"/><text x="1.0617%" y="975.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (76,022,756 samples, 0.06%)</title><rect x="0.8983%" y="853" width="0.0555%" height="15" fill="rgb(209,12,38)" fg:x="1231162648" fg:w="76022756"/><text x="1.1483%" y="863.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (191,382,976 samples, 0.14%)</title><rect x="0.8342%" y="917" width="0.1396%" height="15" fill="rgb(227,1,9)" fg:x="1143228187" fg:w="191382976"/><text x="1.0842%" y="927.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (191,382,976 samples, 0.14%)</title><rect x="0.8342%" y="901" width="0.1396%" height="15" fill="rgb(248,47,43)" fg:x="1143228187" fg:w="191382976"/><text x="1.0842%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (191,382,976 samples, 0.14%)</title><rect x="0.8342%" y="885" width="0.1396%" height="15" fill="rgb(221,10,30)" fg:x="1143228187" fg:w="191382976"/><text x="1.0842%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (130,664,976 samples, 0.10%)</title><rect x="0.8785%" y="869" width="0.0953%" height="15" fill="rgb(210,229,1)" fg:x="1203946187" fg:w="130664976"/><text x="1.1285%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (27,425,759 samples, 0.02%)</title><rect x="0.9538%" y="853" width="0.0200%" height="15" fill="rgb(222,148,37)" fg:x="1307185404" fg:w="27425759"/><text x="1.2038%" y="863.50"></text></g><g><title>hashbrown::map::make_hash (195,043,831 samples, 0.14%)</title><rect x="0.8342%" y="949" width="0.1423%" height="15" fill="rgb(234,67,33)" fg:x="1143228187" fg:w="195043831"/><text x="1.0842%" y="959.50"></text></g><g><title>core::hash::BuildHasher::hash_one (195,043,831 samples, 0.14%)</title><rect x="0.8342%" y="933" width="0.1423%" height="15" fill="rgb(247,98,35)" fg:x="1143228187" fg:w="195043831"/><text x="1.0842%" y="943.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (217,885,876 samples, 0.16%)</title><rect x="0.8315%" y="997" width="0.1590%" height="15" fill="rgb(247,138,52)" fg:x="1139550117" fg:w="217885876"/><text x="1.0815%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (217,885,876 samples, 0.16%)</title><rect x="0.8315%" y="981" width="0.1590%" height="15" fill="rgb(213,79,30)" fg:x="1139550117" fg:w="217885876"/><text x="1.0815%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (217,885,876 samples, 0.16%)</title><rect x="0.8315%" y="965" width="0.1590%" height="15" fill="rgb(246,177,23)" fg:x="1139550117" fg:w="217885876"/><text x="1.0815%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (19,163,975 samples, 0.01%)</title><rect x="0.9765%" y="949" width="0.0140%" height="15" fill="rgb(230,62,27)" fg:x="1338272018" fg:w="19163975"/><text x="1.2265%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (19,163,975 samples, 0.01%)</title><rect x="0.9765%" y="933" width="0.0140%" height="15" fill="rgb(216,154,8)" fg:x="1338272018" fg:w="19163975"/><text x="1.2265%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (19,163,975 samples, 0.01%)</title><rect x="0.9765%" y="917" width="0.0140%" height="15" fill="rgb(244,35,45)" fg:x="1338272018" fg:w="19163975"/><text x="1.2265%" y="927.50"></text></g><g><title>rpq::RPQ&lt;T&gt;::enqueue (340,635,106 samples, 0.25%)</title><rect x="0.7673%" y="1013" width="0.2485%" height="15" fill="rgb(251,115,12)" fg:x="1051603814" fg:w="340635106"/><text x="1.0173%" y="1023.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (34,802,927 samples, 0.03%)</title><rect x="0.9904%" y="997" width="0.0254%" height="15" fill="rgb(240,54,50)" fg:x="1357435993" fg:w="34802927"/><text x="1.2404%" y="1007.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read (34,802,927 samples, 0.03%)</title><rect x="0.9904%" y="981" width="0.0254%" height="15" fill="rgb(233,84,52)" fg:x="1357435993" fg:w="34802927"/><text x="1.2404%" y="991.50"></text></g><g><title>rpq::bpq::BucketPriorityQueue::peek (42,041,602 samples, 0.03%)</title><rect x="1.0187%" y="1013" width="0.0307%" height="15" fill="rgb(207,117,47)" fg:x="1396094058" fg:w="42041602"/><text x="1.2687%" y="1023.50"></text></g><g><title>rpq::pq::PriorityQueue&lt;T&gt;::dequeue (20,791,729 samples, 0.02%)</title><rect x="1.0493%" y="1013" width="0.0152%" height="15" fill="rgb(249,43,39)" fg:x="1438135660" fg:w="20791729"/><text x="1.2993%" y="1023.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (92,562,397 samples, 0.07%)</title><rect x="1.0957%" y="965" width="0.0675%" height="15" fill="rgb(209,38,44)" fg:x="1501706207" fg:w="92562397"/><text x="1.3457%" y="975.50"></text></g><g><title>core::ptr::read (92,562,397 samples, 0.07%)</title><rect x="1.0957%" y="949" width="0.0675%" height="15" fill="rgb(236,212,23)" fg:x="1501706207" fg:w="92562397"/><text x="1.3457%" y="959.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (30,413,196 samples, 0.02%)</title><rect x="1.1633%" y="965" width="0.0222%" height="15" fill="rgb(242,79,21)" fg:x="1594268604" fg:w="30413196"/><text x="1.4133%" y="975.50"></text></g><g><title>core::cmp::PartialOrd::le (30,413,196 samples, 0.02%)</title><rect x="1.1633%" y="949" width="0.0222%" height="15" fill="rgb(211,96,35)" fg:x="1594268604" fg:w="30413196"/><text x="1.4133%" y="959.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_up (168,685,410 samples, 0.12%)</title><rect x="1.0762%" y="981" width="0.1231%" height="15" fill="rgb(253,215,40)" fg:x="1474985671" fg:w="168685410"/><text x="1.3262%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::Hole&lt;rpq::schema::Item&lt;u64&gt;&gt;&gt; (18,989,281 samples, 0.01%)</title><rect x="1.1854%" y="965" width="0.0139%" height="15" fill="rgb(211,81,21)" fg:x="1624681800" fg:w="18989281"/><text x="1.4354%" y="975.50"></text></g><g><title>&lt;alloc::collections::binary_heap::Hole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18,989,281 samples, 0.01%)</title><rect x="1.1854%" y="949" width="0.0139%" height="15" fill="rgb(208,190,38)" fg:x="1624681800" fg:w="18989281"/><text x="1.4354%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (18,989,281 samples, 0.01%)</title><rect x="1.1854%" y="933" width="0.0139%" height="15" fill="rgb(235,213,38)" fg:x="1624681800" fg:w="18989281"/><text x="1.4354%" y="943.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::push (184,458,619 samples, 0.13%)</title><rect x="1.0762%" y="997" width="0.1346%" height="15" fill="rgb(237,122,38)" fg:x="1474985671" fg:w="184458619"/><text x="1.3262%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (15,773,209 samples, 0.01%)</title><rect x="1.1993%" y="981" width="0.0115%" height="15" fill="rgb(244,218,35)" fg:x="1643671081" fg:w="15773209"/><text x="1.4493%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;alloc::collections::binary_heap::BinaryHeap&lt;rpq::schema::Item&lt;u64&gt;&gt;&gt;&gt; (36,432,837 samples, 0.03%)</title><rect x="1.2136%" y="997" width="0.0266%" height="15" fill="rgb(240,68,47)" fg:x="1663252482" fg:w="36432837"/><text x="1.4636%" y="1007.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (36,432,837 samples, 0.03%)</title><rect x="1.2136%" y="981" width="0.0266%" height="15" fill="rgb(210,16,53)" fg:x="1663252482" fg:w="36432837"/><text x="1.4636%" y="991.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::write_unlock (36,432,837 samples, 0.03%)</title><rect x="1.2136%" y="965" width="0.0266%" height="15" fill="rgb(235,124,12)" fg:x="1663252482" fg:w="36432837"/><text x="1.4636%" y="975.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (19,566,842 samples, 0.01%)</title><rect x="1.2402%" y="997" width="0.0143%" height="15" fill="rgb(224,169,11)" fg:x="1699685319" fg:w="19566842"/><text x="1.4902%" y="1007.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock (15,893,824 samples, 0.01%)</title><rect x="1.2428%" y="981" width="0.0116%" height="15" fill="rgb(250,166,2)" fg:x="1703358337" fg:w="15893824"/><text x="1.4928%" y="991.50"></text></g><g><title>rpq::pq::PriorityQueue&lt;T&gt;::enqueue (288,382,424 samples, 0.21%)</title><rect x="1.0645%" y="1013" width="0.2104%" height="15" fill="rgb(242,216,29)" fg:x="1458927389" fg:w="288382424"/><text x="1.3145%" y="1023.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (28,057,652 samples, 0.02%)</title><rect x="1.2544%" y="997" width="0.0205%" height="15" fill="rgb(230,116,27)" fg:x="1719252161" fg:w="28057652"/><text x="1.5044%" y="1007.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::write (22,802,961 samples, 0.02%)</title><rect x="1.2583%" y="981" width="0.0166%" height="15" fill="rgb(228,99,48)" fg:x="1724506852" fg:w="22802961"/><text x="1.5083%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (15,236,154 samples, 0.01%)</title><rect x="1.2638%" y="965" width="0.0111%" height="15" fill="rgb(253,11,6)" fg:x="1732073659" fg:w="15236154"/><text x="1.5138%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (15,236,154 samples, 0.01%)</title><rect x="1.2638%" y="949" width="0.0111%" height="15" fill="rgb(247,143,39)" fg:x="1732073659" fg:w="15236154"/><text x="1.5138%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::collections::binary_heap::BinaryHeap&lt;rpq::schema::Item&lt;u64&gt;&gt;&gt;&gt; (29,802,869 samples, 0.02%)</title><rect x="1.2827%" y="997" width="0.0217%" height="15" fill="rgb(236,97,10)" fg:x="1757987698" fg:w="29802869"/><text x="1.5327%" y="1007.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (29,802,869 samples, 0.02%)</title><rect x="1.2827%" y="981" width="0.0217%" height="15" fill="rgb(233,208,19)" fg:x="1757987698" fg:w="29802869"/><text x="1.5327%" y="991.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read_unlock (29,802,869 samples, 0.02%)</title><rect x="1.2827%" y="965" width="0.0217%" height="15" fill="rgb(216,164,2)" fg:x="1757987698" fg:w="29802869"/><text x="1.5327%" y="975.50"></text></g><g><title>std::sync::poison::Flag::borrow (17,593,788 samples, 0.01%)</title><rect x="1.3045%" y="965" width="0.0128%" height="15" fill="rgb(220,129,5)" fg:x="1787790567" fg:w="17593788"/><text x="1.5545%" y="975.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (21,716,839 samples, 0.02%)</title><rect x="1.3045%" y="981" width="0.0158%" height="15" fill="rgb(242,17,10)" fg:x="1787790567" fg:w="21716839"/><text x="1.5545%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (33,407,558 samples, 0.02%)</title><rect x="1.3480%" y="965" width="0.0244%" height="15" fill="rgb(242,107,0)" fg:x="1847494116" fg:w="33407558"/><text x="1.5980%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (33,407,558 samples, 0.02%)</title><rect x="1.3480%" y="949" width="0.0244%" height="15" fill="rgb(251,28,31)" fg:x="1847494116" fg:w="33407558"/><text x="1.5980%" y="959.50"></text></g><g><title>rpq::pq::PriorityQueue&lt;T&gt;::len (143,831,790 samples, 0.10%)</title><rect x="1.2749%" y="1013" width="0.1049%" height="15" fill="rgb(233,223,10)" fg:x="1747309813" fg:w="143831790"/><text x="1.5249%" y="1023.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (103,351,036 samples, 0.08%)</title><rect x="1.3045%" y="997" width="0.0754%" height="15" fill="rgb(215,21,27)" fg:x="1787790567" fg:w="103351036"/><text x="1.5545%" y="1007.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read (81,634,197 samples, 0.06%)</title><rect x="1.3203%" y="981" width="0.0596%" height="15" fill="rgb(232,23,21)" fg:x="1809507406" fg:w="81634197"/><text x="1.5703%" y="991.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (46,811,168 samples, 0.03%)</title><rect x="1.4198%" y="997" width="0.0342%" height="15" fill="rgb(244,5,23)" fg:x="1945873373" fg:w="46811168"/><text x="1.6698%" y="1007.50"></text></g><g><title>core::hint::spin_loop (21,577,567 samples, 0.02%)</title><rect x="1.6312%" y="981" width="0.0157%" height="15" fill="rgb(226,81,46)" fg:x="2235594653" fg:w="21577567"/><text x="1.8812%" y="991.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (21,577,567 samples, 0.02%)</title><rect x="1.6312%" y="965" width="0.0157%" height="15" fill="rgb(247,70,30)" fg:x="2235594653" fg:w="21577567"/><text x="1.8812%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (52,960,677 samples, 0.04%)</title><rect x="1.6469%" y="981" width="0.0386%" height="15" fill="rgb(212,68,19)" fg:x="2257172220" fg:w="52960677"/><text x="1.8969%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_load (52,960,677 samples, 0.04%)</title><rect x="1.6469%" y="965" width="0.0386%" height="15" fill="rgb(240,187,13)" fg:x="2257172220" fg:w="52960677"/><text x="1.8969%" y="975.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock_contended (426,610,099 samples, 0.31%)</title><rect x="1.3799%" y="1013" width="0.3113%" height="15" fill="rgb(223,113,26)" fg:x="1891141603" fg:w="426610099"/><text x="1.6299%" y="1023.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::spin (325,067,161 samples, 0.24%)</title><rect x="1.4540%" y="997" width="0.2372%" height="15" fill="rgb(206,192,2)" fg:x="1992684541" fg:w="325067161"/><text x="1.7040%" y="1007.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read_contended (29,143,085 samples, 0.02%)</title><rect x="1.6911%" y="1013" width="0.0213%" height="15" fill="rgb(241,108,4)" fg:x="2317751702" fg:w="29143085"/><text x="1.9411%" y="1023.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (28,034,847 samples, 0.02%)</title><rect x="1.7124%" y="1013" width="0.0205%" height="15" fill="rgb(247,173,49)" fg:x="2346894787" fg:w="28034847"/><text x="1.9624%" y="1023.50"></text></g><g><title>uuid::builder::&lt;impl uuid::Uuid&gt;::from_u128 (91,793,137 samples, 0.07%)</title><rect x="1.7525%" y="997" width="0.0670%" height="15" fill="rgb(224,114,35)" fg:x="2401810741" fg:w="91793137"/><text x="2.0025%" y="1007.50"></text></g><g><title>[[heap]] (2,632,645,803 samples, 1.92%)</title><rect x="0.0028%" y="1029" width="1.9209%" height="15" fill="rgb(245,159,27)" fg:x="3797191" fg:w="2632645803"/><text x="0.2528%" y="1039.50">[..</text></g><g><title>uuid::v4::&lt;impl uuid::Uuid&gt;::new_v4 (249,914,800 samples, 0.18%)</title><rect x="1.7413%" y="1013" width="0.1823%" height="15" fill="rgb(245,172,44)" fg:x="2386528194" fg:w="249914800"/><text x="1.9913%" y="1023.50"></text></g><g><title>uuid::rng::u128 (142,839,116 samples, 0.10%)</title><rect x="1.8194%" y="997" width="0.1042%" height="15" fill="rgb(236,23,11)" fg:x="2493603878" fg:w="142839116"/><text x="2.0694%" y="1007.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (73,023,743 samples, 0.05%)</title><rect x="1.8704%" y="981" width="0.0533%" height="15" fill="rgb(205,117,38)" fg:x="2563419251" fg:w="73023743"/><text x="2.1204%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (19,385,992 samples, 0.01%)</title><rect x="1.9474%" y="885" width="0.0141%" height="15" fill="rgb(237,72,25)" fg:x="2668997252" fg:w="19385992"/><text x="2.1974%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (19,385,992 samples, 0.01%)</title><rect x="1.9474%" y="869" width="0.0141%" height="15" fill="rgb(244,70,9)" fg:x="2668997252" fg:w="19385992"/><text x="2.1974%" y="879.50"></text></g><g><title>alloc::alloc::alloc (19,385,992 samples, 0.01%)</title><rect x="1.9474%" y="853" width="0.0141%" height="15" fill="rgb(217,125,39)" fg:x="2668997252" fg:w="19385992"/><text x="2.1974%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (43,218,144 samples, 0.03%)</title><rect x="1.9328%" y="933" width="0.0315%" height="15" fill="rgb(235,36,10)" fg:x="2648906425" fg:w="43218144"/><text x="2.1828%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (43,218,144 samples, 0.03%)</title><rect x="1.9328%" y="917" width="0.0315%" height="15" fill="rgb(251,123,47)" fg:x="2648906425" fg:w="43218144"/><text x="2.1828%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (43,218,144 samples, 0.03%)</title><rect x="1.9328%" y="901" width="0.0315%" height="15" fill="rgb(221,13,13)" fg:x="2648906425" fg:w="43218144"/><text x="2.1828%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (159,686,079 samples, 0.12%)</title><rect x="1.9237%" y="1013" width="0.1165%" height="15" fill="rgb(238,131,9)" fg:x="2636442994" fg:w="159686079"/><text x="2.1737%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (147,222,648 samples, 0.11%)</title><rect x="1.9328%" y="997" width="0.1074%" height="15" fill="rgb(211,50,8)" fg:x="2648906425" fg:w="147222648"/><text x="2.1828%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (147,222,648 samples, 0.11%)</title><rect x="1.9328%" y="981" width="0.1074%" height="15" fill="rgb(245,182,24)" fg:x="2648906425" fg:w="147222648"/><text x="2.1828%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (147,222,648 samples, 0.11%)</title><rect x="1.9328%" y="965" width="0.1074%" height="15" fill="rgb(242,14,37)" fg:x="2648906425" fg:w="147222648"/><text x="2.1828%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (147,222,648 samples, 0.11%)</title><rect x="1.9328%" y="949" width="0.1074%" height="15" fill="rgb(246,228,12)" fg:x="2648906425" fg:w="147222648"/><text x="2.1828%" y="959.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (104,004,504 samples, 0.08%)</title><rect x="1.9643%" y="933" width="0.0759%" height="15" fill="rgb(213,55,15)" fg:x="2692124569" fg:w="104004504"/><text x="2.2143%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (104,004,504 samples, 0.08%)</title><rect x="1.9643%" y="917" width="0.0759%" height="15" fill="rgb(209,9,3)" fg:x="2692124569" fg:w="104004504"/><text x="2.2143%" y="927.50"></text></g><g><title>entry_SYSCALL_64 (18,822,422 samples, 0.01%)</title><rect x="2.0265%" y="901" width="0.0137%" height="15" fill="rgb(230,59,30)" fg:x="2777306651" fg:w="18822422"/><text x="2.2765%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (55,605,587 samples, 0.04%)</title><rect x="2.0402%" y="1013" width="0.0406%" height="15" fill="rgb(209,121,21)" fg:x="2796129073" fg:w="55605587"/><text x="2.2902%" y="1023.50"></text></g><g><title>alloc::string::String::push_str (35,898,879 samples, 0.03%)</title><rect x="2.0546%" y="997" width="0.0262%" height="15" fill="rgb(220,109,13)" fg:x="2815835781" fg:w="35898879"/><text x="2.3046%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (35,898,879 samples, 0.03%)</title><rect x="2.0546%" y="981" width="0.0262%" height="15" fill="rgb(232,18,1)" fg:x="2815835781" fg:w="35898879"/><text x="2.3046%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (35,898,879 samples, 0.03%)</title><rect x="2.0546%" y="965" width="0.0262%" height="15" fill="rgb(215,41,42)" fg:x="2815835781" fg:w="35898879"/><text x="2.3046%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (35,898,879 samples, 0.03%)</title><rect x="2.0546%" y="949" width="0.0262%" height="15" fill="rgb(224,123,36)" fg:x="2815835781" fg:w="35898879"/><text x="2.3046%" y="959.50"></text></g><g><title>[libc.so.6] (67,117,506 samples, 0.05%)</title><rect x="2.0808%" y="1013" width="0.0490%" height="15" fill="rgb(240,125,3)" fg:x="2851734660" fg:w="67117506"/><text x="2.3308%" y="1023.50"></text></g><g><title>__rdl_alloc (60,441,305 samples, 0.04%)</title><rect x="2.1297%" y="1013" width="0.0441%" height="15" fill="rgb(205,98,50)" fg:x="2918852166" fg:w="60441305"/><text x="2.3797%" y="1023.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (49,334,051 samples, 0.04%)</title><rect x="2.1378%" y="997" width="0.0360%" height="15" fill="rgb(205,185,37)" fg:x="2929959420" fg:w="49334051"/><text x="2.3878%" y="1007.50"></text></g><g><title>__rust_dealloc (23,127,081 samples, 0.02%)</title><rect x="2.1827%" y="1013" width="0.0169%" height="15" fill="rgb(238,207,15)" fg:x="2991424562" fg:w="23127081"/><text x="2.4327%" y="1023.50"></text></g><g><title>__vdso_clock_gettime (18,921,893 samples, 0.01%)</title><rect x="2.1996%" y="1013" width="0.0138%" height="15" fill="rgb(213,199,42)" fg:x="3014551643" fg:w="18921893"/><text x="2.4496%" y="1023.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (69,428,700 samples, 0.05%)</title><rect x="2.2560%" y="933" width="0.0507%" height="15" fill="rgb(235,201,11)" fg:x="3091957406" fg:w="69428700"/><text x="2.5060%" y="943.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::move_to (78,002,821 samples, 0.06%)</title><rect x="2.2560%" y="949" width="0.0569%" height="15" fill="rgb(207,46,11)" fg:x="3091957406" fg:w="78002821"/><text x="2.5060%" y="959.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_down_to_bottom (93,589,468 samples, 0.07%)</title><rect x="2.2529%" y="965" width="0.0683%" height="15" fill="rgb(241,35,35)" fg:x="3087669038" fg:w="93589468"/><text x="2.5029%" y="975.50"></text></g><g><title>core::ptr::read (16,213,646 samples, 0.01%)</title><rect x="2.3212%" y="901" width="0.0118%" height="15" fill="rgb(243,32,47)" fg:x="3181258506" fg:w="16213646"/><text x="2.5712%" y="911.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::pop (170,626,367 samples, 0.12%)</title><rect x="2.2134%" y="1013" width="0.1245%" height="15" fill="rgb(247,202,23)" fg:x="3033473536" fg:w="170626367"/><text x="2.4634%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (134,094,759 samples, 0.10%)</title><rect x="2.2400%" y="997" width="0.0978%" height="15" fill="rgb(219,102,11)" fg:x="3070005144" fg:w="134094759"/><text x="2.4900%" y="1007.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::pop::_{{closure}} (116,430,865 samples, 0.08%)</title><rect x="2.2529%" y="981" width="0.0850%" height="15" fill="rgb(243,110,44)" fg:x="3087669038" fg:w="116430865"/><text x="2.5029%" y="991.50"></text></g><g><title>core::mem::swap (22,841,397 samples, 0.02%)</title><rect x="2.3212%" y="965" width="0.0167%" height="15" fill="rgb(222,74,54)" fg:x="3181258506" fg:w="22841397"/><text x="2.5712%" y="975.50"></text></g><g><title>core::ptr::swap_nonoverlapping (22,841,397 samples, 0.02%)</title><rect x="2.3212%" y="949" width="0.0167%" height="15" fill="rgb(216,99,12)" fg:x="3181258506" fg:w="22841397"/><text x="2.5712%" y="959.50"></text></g><g><title>core::ptr::swap_nonoverlapping_simple_untyped (22,841,397 samples, 0.02%)</title><rect x="2.3212%" y="933" width="0.0167%" height="15" fill="rgb(226,22,26)" fg:x="3181258506" fg:w="22841397"/><text x="2.5712%" y="943.50"></text></g><g><title>core::mem::swap_simple (22,841,397 samples, 0.02%)</title><rect x="2.3212%" y="917" width="0.0167%" height="15" fill="rgb(217,163,10)" fg:x="3181258506" fg:w="22841397"/><text x="2.5712%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (40,561,405 samples, 0.03%)</title><rect x="2.3379%" y="1013" width="0.0296%" height="15" fill="rgb(213,25,53)" fg:x="3204099903" fg:w="40561405"/><text x="2.5879%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (40,561,405 samples, 0.03%)</title><rect x="2.3379%" y="997" width="0.0296%" height="15" fill="rgb(252,105,26)" fg:x="3204099903" fg:w="40561405"/><text x="2.5879%" y="1007.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (20,280,026 samples, 0.01%)</title><rect x="2.3527%" y="981" width="0.0148%" height="15" fill="rgb(220,39,43)" fg:x="3224381282" fg:w="20280026"/><text x="2.6027%" y="991.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (20,280,026 samples, 0.01%)</title><rect x="2.3527%" y="965" width="0.0148%" height="15" fill="rgb(229,68,48)" fg:x="3224381282" fg:w="20280026"/><text x="2.6027%" y="975.50"></text></g><g><title>alloc::raw_vec::finish_grow (75,765,121 samples, 0.06%)</title><rect x="2.3675%" y="1013" width="0.0553%" height="15" fill="rgb(252,8,32)" fg:x="3244661308" fg:w="75765121"/><text x="2.6175%" y="1023.50"></text></g><g><title>cfree (15,844,493 samples, 0.01%)</title><rect x="2.4227%" y="1013" width="0.0116%" height="15" fill="rgb(223,20,43)" fg:x="3320426429" fg:w="15844493"/><text x="2.6727%" y="1023.50"></text></g><g><title>core::ops::function::Fn::call (78,263,074 samples, 0.06%)</title><rect x="2.5269%" y="805" width="0.0571%" height="15" fill="rgb(229,81,49)" fg:x="3463151170" fg:w="78263074"/><text x="2.7769%" y="815.50"></text></g><g><title>getrandom::util_libc::getrandom_syscall (78,263,074 samples, 0.06%)</title><rect x="2.5269%" y="789" width="0.0571%" height="15" fill="rgb(236,28,36)" fg:x="3463151170" fg:w="78263074"/><text x="2.7769%" y="799.50"></text></g><g><title>getrandom::imp::getrandom_inner (160,500,399 samples, 0.12%)</title><rect x="2.4696%" y="837" width="0.1171%" height="15" fill="rgb(249,185,26)" fg:x="3384587630" fg:w="160500399"/><text x="2.7196%" y="847.50"></text></g><g><title>getrandom::util_libc::sys_fill_exact (141,284,521 samples, 0.10%)</title><rect x="2.4836%" y="821" width="0.1031%" height="15" fill="rgb(249,174,33)" fg:x="3403803508" fg:w="141284521"/><text x="2.7336%" y="831.50"></text></g><g><title>&lt;u64 as rand::distributions::utils::WideningMultiply&gt;::wmul (14,990,523 samples, 0.01%)</title><rect x="2.6445%" y="773" width="0.0109%" height="15" fill="rgb(233,201,37)" fg:x="3624402800" fg:w="14990523"/><text x="2.8945%" y="783.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (47,491,390 samples, 0.03%)</title><rect x="2.6555%" y="773" width="0.0347%" height="15" fill="rgb(221,78,26)" fg:x="3639393323" fg:w="47491390"/><text x="2.9055%" y="783.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (35,966,090 samples, 0.03%)</title><rect x="2.6901%" y="773" width="0.0262%" height="15" fill="rgb(250,127,30)" fg:x="3686884713" fg:w="35966090"/><text x="2.9401%" y="783.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_sub (15,352,158 samples, 0.01%)</title><rect x="2.7164%" y="773" width="0.0112%" height="15" fill="rgb(230,49,44)" fg:x="3722850803" fg:w="15352158"/><text x="2.9664%" y="783.50"></text></g><g><title>rand::rng::Rng::gen_range (235,759,684 samples, 0.17%)</title><rect x="2.5867%" y="837" width="0.1720%" height="15" fill="rgb(229,67,23)" fg:x="3545088029" fg:w="235759684"/><text x="2.8367%" y="847.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::sample_single (196,884,046 samples, 0.14%)</title><rect x="2.6150%" y="821" width="0.1437%" height="15" fill="rgb(249,83,47)" fg:x="3583963667" fg:w="196884046"/><text x="2.8650%" y="831.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u64&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (196,884,046 samples, 0.14%)</title><rect x="2.6150%" y="805" width="0.1437%" height="15" fill="rgb(215,43,3)" fg:x="3583963667" fg:w="196884046"/><text x="2.8650%" y="815.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u64&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single_inclusive (196,884,046 samples, 0.14%)</title><rect x="2.6150%" y="789" width="0.1437%" height="15" fill="rgb(238,154,13)" fg:x="3583963667" fg:w="196884046"/><text x="2.8650%" y="799.50"></text></g><g><title>rand::rng::Rng::gen (42,644,752 samples, 0.03%)</title><rect x="2.7276%" y="773" width="0.0311%" height="15" fill="rgb(219,56,2)" fg:x="3738202961" fg:w="42644752"/><text x="2.9776%" y="783.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u64&gt; for rand::distributions::Standard&gt;::sample (42,644,752 samples, 0.03%)</title><rect x="2.7276%" y="757" width="0.0311%" height="15" fill="rgb(233,0,4)" fg:x="3738202961" fg:w="42644752"/><text x="2.9776%" y="767.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (42,644,752 samples, 0.03%)</title><rect x="2.7276%" y="741" width="0.0311%" height="15" fill="rgb(235,30,7)" fg:x="3738202961" fg:w="42644752"/><text x="2.9776%" y="751.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (42,644,752 samples, 0.03%)</title><rect x="2.7276%" y="725" width="0.0311%" height="15" fill="rgb(250,79,13)" fg:x="3738202961" fg:w="42644752"/><text x="2.9776%" y="735.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (42,644,752 samples, 0.03%)</title><rect x="2.7276%" y="709" width="0.0311%" height="15" fill="rgb(211,146,34)" fg:x="3738202961" fg:w="42644752"/><text x="2.9776%" y="719.50"></text></g><g><title>asm_exc_page_fault (20,614,832 samples, 0.02%)</title><rect x="2.7587%" y="821" width="0.0150%" height="15" fill="rgb(228,22,38)" fg:x="3780847713" fg:w="20614832"/><text x="3.0087%" y="831.50"></text></g><g><title>getrandom::imp::getrandom_inner (428,390,769 samples, 0.31%)</title><rect x="2.4696%" y="901" width="0.3126%" height="15" fill="rgb(235,168,5)" fg:x="3384587630" fg:w="428390769"/><text x="2.7196%" y="911.50"></text></g><g><title>getrandom::util_libc::sys_fill_exact (428,390,769 samples, 0.31%)</title><rect x="2.4696%" y="885" width="0.3126%" height="15" fill="rgb(221,155,16)" fg:x="3384587630" fg:w="428390769"/><text x="2.7196%" y="895.50"></text></g><g><title>core::ops::function::Fn::call (428,390,769 samples, 0.31%)</title><rect x="2.4696%" y="869" width="0.3126%" height="15" fill="rgb(215,215,53)" fg:x="3384587630" fg:w="428390769"/><text x="2.7196%" y="879.50"></text></g><g><title>getrandom::util_libc::getrandom_syscall (428,390,769 samples, 0.31%)</title><rect x="2.4696%" y="853" width="0.3126%" height="15" fill="rgb(223,4,10)" fg:x="3384587630" fg:w="428390769"/><text x="2.7196%" y="863.50"></text></g><g><title>syscall (32,130,686 samples, 0.02%)</title><rect x="2.7587%" y="837" width="0.0234%" height="15" fill="rgb(234,103,6)" fg:x="3780847713" fg:w="32130686"/><text x="3.0087%" y="847.50"></text></g><g><title>clock_gettime (492,059,254 samples, 0.36%)</title><rect x="2.4343%" y="1013" width="0.3590%" height="15" fill="rgb(227,97,0)" fg:x="3336270922" fg:w="492059254"/><text x="2.6843%" y="1023.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (443,742,546 samples, 0.32%)</title><rect x="2.4696%" y="997" width="0.3238%" height="15" fill="rgb(234,150,53)" fg:x="3384587630" fg:w="443742546"/><text x="2.7196%" y="1007.50"></text></g><g><title>alloc::string::String::push_str (443,742,546 samples, 0.32%)</title><rect x="2.4696%" y="981" width="0.3238%" height="15" fill="rgb(228,201,54)" fg:x="3384587630" fg:w="443742546"/><text x="2.7196%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (443,742,546 samples, 0.32%)</title><rect x="2.4696%" y="965" width="0.3238%" height="15" fill="rgb(222,22,37)" fg:x="3384587630" fg:w="443742546"/><text x="2.7196%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (443,742,546 samples, 0.32%)</title><rect x="2.4696%" y="949" width="0.3238%" height="15" fill="rgb(237,53,32)" fg:x="3384587630" fg:w="443742546"/><text x="2.7196%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (443,742,546 samples, 0.32%)</title><rect x="2.4696%" y="933" width="0.3238%" height="15" fill="rgb(233,25,53)" fg:x="3384587630" fg:w="443742546"/><text x="2.7196%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (443,742,546 samples, 0.32%)</title><rect x="2.4696%" y="917" width="0.3238%" height="15" fill="rgb(210,40,34)" fg:x="3384587630" fg:w="443742546"/><text x="2.7196%" y="927.50"></text></g><g><title>core::ops::function::Fn::call (63,342,872 samples, 0.05%)</title><rect x="3.1240%" y="981" width="0.0462%" height="15" fill="rgb(241,220,44)" fg:x="4281521886" fg:w="63342872"/><text x="3.3740%" y="991.50"></text></g><g><title>getrandom::util_libc::getrandom_syscall (63,342,872 samples, 0.05%)</title><rect x="3.1240%" y="965" width="0.0462%" height="15" fill="rgb(235,28,35)" fg:x="4281521886" fg:w="63342872"/><text x="3.3740%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_mut (89,839,499 samples, 0.07%)</title><rect x="3.1702%" y="981" width="0.0656%" height="15" fill="rgb(210,56,17)" fg:x="4344864758" fg:w="89839499"/><text x="3.4202%" y="991.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_mut (89,839,499 samples, 0.07%)</title><rect x="3.1702%" y="965" width="0.0656%" height="15" fill="rgb(224,130,29)" fg:x="4344864758" fg:w="89839499"/><text x="3.4202%" y="975.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_mut (89,839,499 samples, 0.07%)</title><rect x="3.1702%" y="949" width="0.0656%" height="15" fill="rgb(235,212,8)" fg:x="4344864758" fg:w="89839499"/><text x="3.4202%" y="959.50"></text></g><g><title>getrandom::imp::getrandom_inner (662,964,733 samples, 0.48%)</title><rect x="2.7993%" y="1013" width="0.4837%" height="15" fill="rgb(223,33,50)" fg:x="3836450033" fg:w="662964733"/><text x="3.0493%" y="1023.50"></text></g><g><title>getrandom::util_libc::sys_fill_exact (554,093,677 samples, 0.40%)</title><rect x="2.8787%" y="997" width="0.4043%" height="15" fill="rgb(219,149,13)" fg:x="3945321089" fg:w="554093677"/><text x="3.1287%" y="1007.50"></text></g><g><title>entry_SYSCALL_64 (64,710,509 samples, 0.05%)</title><rect x="3.2358%" y="981" width="0.0472%" height="15" fill="rgb(250,156,29)" fg:x="4434704257" fg:w="64710509"/><text x="3.4858%" y="991.50"></text></g><g><title>malloc (33,433,021 samples, 0.02%)</title><rect x="3.2830%" y="1013" width="0.0244%" height="15" fill="rgb(216,193,19)" fg:x="4499414766" fg:w="33433021"/><text x="3.5330%" y="1023.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::is_empty (20,021,896 samples, 0.01%)</title><rect x="3.3338%" y="997" width="0.0146%" height="15" fill="rgb(216,135,14)" fg:x="4569027163" fg:w="20021896"/><text x="3.5838%" y="1007.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u64&gt;::lt (20,021,896 samples, 0.01%)</title><rect x="3.3338%" y="981" width="0.0146%" height="15" fill="rgb(241,47,5)" fg:x="4569027163" fg:w="20021896"/><text x="3.5838%" y="991.50"></text></g><g><title>rand::rng::Rng::gen_range (145,375,340 samples, 0.11%)</title><rect x="3.3074%" y="1013" width="0.1061%" height="15" fill="rgb(233,42,35)" fg:x="4532847787" fg:w="145375340"/><text x="3.5574%" y="1023.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::sample_single (89,174,068 samples, 0.07%)</title><rect x="3.3484%" y="997" width="0.0651%" height="15" fill="rgb(231,13,6)" fg:x="4589049059" fg:w="89174068"/><text x="3.5984%" y="1007.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u64&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (89,174,068 samples, 0.07%)</title><rect x="3.3484%" y="981" width="0.0651%" height="15" fill="rgb(207,181,40)" fg:x="4589049059" fg:w="89174068"/><text x="3.5984%" y="991.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u64&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single_inclusive (85,016,473 samples, 0.06%)</title><rect x="3.3514%" y="965" width="0.0620%" height="15" fill="rgb(254,173,49)" fg:x="4593206654" fg:w="85016473"/><text x="3.6014%" y="975.50"></text></g><g><title>rand::rng::Rng::gen (35,349,701 samples, 0.03%)</title><rect x="3.3877%" y="949" width="0.0258%" height="15" fill="rgb(221,1,38)" fg:x="4642873426" fg:w="35349701"/><text x="3.6377%" y="959.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u64&gt; for rand::distributions::Standard&gt;::sample (35,349,701 samples, 0.03%)</title><rect x="3.3877%" y="933" width="0.0258%" height="15" fill="rgb(206,124,46)" fg:x="4642873426" fg:w="35349701"/><text x="3.6377%" y="943.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (35,349,701 samples, 0.03%)</title><rect x="3.3877%" y="917" width="0.0258%" height="15" fill="rgb(249,21,11)" fg:x="4642873426" fg:w="35349701"/><text x="3.6377%" y="927.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (35,349,701 samples, 0.03%)</title><rect x="3.3877%" y="901" width="0.0258%" height="15" fill="rgb(222,201,40)" fg:x="4642873426" fg:w="35349701"/><text x="3.6377%" y="911.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (35,349,701 samples, 0.03%)</title><rect x="3.3877%" y="885" width="0.0258%" height="15" fill="rgb(235,61,29)" fg:x="4642873426" fg:w="35349701"/><text x="3.6377%" y="895.50"></text></g><g><title>rand::rngs::thread::thread_rng (26,674,839 samples, 0.02%)</title><rect x="3.4134%" y="1013" width="0.0195%" height="15" fill="rgb(219,207,3)" fg:x="4678223127" fg:w="26674839"/><text x="3.6634%" y="1023.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (57,741,620 samples, 0.04%)</title><rect x="3.4329%" y="1013" width="0.0421%" height="15" fill="rgb(222,56,46)" fg:x="4704897966" fg:w="57741620"/><text x="3.6829%" y="1023.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (57,741,620 samples, 0.04%)</title><rect x="3.4329%" y="997" width="0.0421%" height="15" fill="rgb(239,76,54)" fg:x="4704897966" fg:w="57741620"/><text x="3.6829%" y="1007.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (57,741,620 samples, 0.04%)</title><rect x="3.4329%" y="981" width="0.0421%" height="15" fill="rgb(231,124,27)" fg:x="4704897966" fg:w="57741620"/><text x="3.6829%" y="991.50"></text></g><g><title>rand_chacha::guts::round (30,678,530 samples, 0.02%)</title><rect x="3.4527%" y="965" width="0.0224%" height="15" fill="rgb(249,195,6)" fg:x="4731961056" fg:w="30678530"/><text x="3.7027%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (13,954,307 samples, 0.01%)</title><rect x="3.5054%" y="869" width="0.0102%" height="15" fill="rgb(237,174,47)" fg:x="4804268366" fg:w="13954307"/><text x="3.7554%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (58,252,181 samples, 0.04%)</title><rect x="3.5720%" y="853" width="0.0425%" height="15" fill="rgb(206,201,31)" fg:x="4895563651" fg:w="58252181"/><text x="3.8220%" y="863.50"></text></g><g><title>hashbrown::map::make_hash (195,410,324 samples, 0.14%)</title><rect x="3.4929%" y="949" width="0.1426%" height="15" fill="rgb(231,57,52)" fg:x="4787116119" fg:w="195410324"/><text x="3.7429%" y="959.50"></text></g><g><title>core::hash::BuildHasher::hash_one (195,410,324 samples, 0.14%)</title><rect x="3.4929%" y="933" width="0.1426%" height="15" fill="rgb(248,177,22)" fg:x="4787116119" fg:w="195410324"/><text x="3.7429%" y="943.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (195,410,324 samples, 0.14%)</title><rect x="3.4929%" y="917" width="0.1426%" height="15" fill="rgb(215,211,37)" fg:x="4787116119" fg:w="195410324"/><text x="3.7429%" y="927.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (195,410,324 samples, 0.14%)</title><rect x="3.4929%" y="901" width="0.1426%" height="15" fill="rgb(241,128,51)" fg:x="4787116119" fg:w="195410324"/><text x="3.7429%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (195,410,324 samples, 0.14%)</title><rect x="3.4929%" y="885" width="0.1426%" height="15" fill="rgb(227,165,31)" fg:x="4787116119" fg:w="195410324"/><text x="3.7429%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (164,303,770 samples, 0.12%)</title><rect x="3.5156%" y="869" width="0.1199%" height="15" fill="rgb(228,167,24)" fg:x="4818222673" fg:w="164303770"/><text x="3.7656%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (28,710,611 samples, 0.02%)</title><rect x="3.6145%" y="853" width="0.0209%" height="15" fill="rgb(228,143,12)" fg:x="4953815832" fg:w="28710611"/><text x="3.8645%" y="863.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (210,388,802 samples, 0.15%)</title><rect x="3.4876%" y="997" width="0.1535%" height="15" fill="rgb(249,149,8)" fg:x="4779792015" fg:w="210388802"/><text x="3.7376%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (210,388,802 samples, 0.15%)</title><rect x="3.4876%" y="981" width="0.1535%" height="15" fill="rgb(243,35,44)" fg:x="4779792015" fg:w="210388802"/><text x="3.7376%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (210,388,802 samples, 0.15%)</title><rect x="3.4876%" y="965" width="0.1535%" height="15" fill="rgb(246,89,9)" fg:x="4779792015" fg:w="210388802"/><text x="3.7376%" y="975.50"></text></g><g><title>rpq::RPQ&lt;T&gt;::dequeue (246,166,443 samples, 0.18%)</title><rect x="3.4750%" y="1013" width="0.1796%" height="15" fill="rgb(233,213,13)" fg:x="4762639586" fg:w="246166443"/><text x="3.7250%" y="1023.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (18,625,212 samples, 0.01%)</title><rect x="3.6411%" y="997" width="0.0136%" height="15" fill="rgb(233,141,41)" fg:x="4990180817" fg:w="18625212"/><text x="3.8911%" y="1007.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read (18,625,212 samples, 0.01%)</title><rect x="3.6411%" y="981" width="0.0136%" height="15" fill="rgb(239,167,4)" fg:x="4990180817" fg:w="18625212"/><text x="3.8911%" y="991.50"></text></g><g><title>&lt;rpq::schema::Item&lt;T&gt; as core::clone::Clone&gt;::clone (26,140,025 samples, 0.02%)</title><rect x="3.6629%" y="997" width="0.0191%" height="15" fill="rgb(209,217,16)" fg:x="5020084186" fg:w="26140025"/><text x="3.9129%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpq::schema::Item&lt;u64&gt;&gt; (46,663,395 samples, 0.03%)</title><rect x="3.6820%" y="997" width="0.0340%" height="15" fill="rgb(219,88,35)" fg:x="5046224211" fg:w="46663395"/><text x="3.9320%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (46,663,395 samples, 0.03%)</title><rect x="3.6820%" y="981" width="0.0340%" height="15" fill="rgb(220,193,23)" fg:x="5046224211" fg:w="46663395"/><text x="3.9320%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (15,436,236 samples, 0.01%)</title><rect x="3.7047%" y="965" width="0.0113%" height="15" fill="rgb(230,90,52)" fg:x="5077451370" fg:w="15436236"/><text x="3.9547%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (15,436,236 samples, 0.01%)</title><rect x="3.7047%" y="949" width="0.0113%" height="15" fill="rgb(252,106,19)" fg:x="5077451370" fg:w="15436236"/><text x="3.9547%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (15,436,236 samples, 0.01%)</title><rect x="3.7047%" y="933" width="0.0113%" height="15" fill="rgb(206,74,20)" fg:x="5077451370" fg:w="15436236"/><text x="3.9547%" y="943.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15,436,236 samples, 0.01%)</title><rect x="3.7047%" y="917" width="0.0113%" height="15" fill="rgb(230,138,44)" fg:x="5077451370" fg:w="15436236"/><text x="3.9547%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,rpq::pq::PriorityQueue&lt;u64&gt;&gt;&gt;&gt; (19,834,821 samples, 0.01%)</title><rect x="3.7160%" y="997" width="0.0145%" height="15" fill="rgb(235,182,43)" fg:x="5092887606" fg:w="19834821"/><text x="3.9660%" y="1007.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19,834,821 samples, 0.01%)</title><rect x="3.7160%" y="981" width="0.0145%" height="15" fill="rgb(242,16,51)" fg:x="5092887606" fg:w="19834821"/><text x="3.9660%" y="991.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read_unlock (19,834,821 samples, 0.01%)</title><rect x="3.7160%" y="965" width="0.0145%" height="15" fill="rgb(248,9,4)" fg:x="5092887606" fg:w="19834821"/><text x="3.9660%" y="975.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (23,148,042 samples, 0.02%)</title><rect x="3.7911%" y="853" width="0.0169%" height="15" fill="rgb(210,31,22)" fg:x="5195795348" fg:w="23148042"/><text x="4.0411%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (46,103,524 samples, 0.03%)</title><rect x="3.7800%" y="869" width="0.0336%" height="15" fill="rgb(239,54,39)" fg:x="5180591939" fg:w="46103524"/><text x="4.0300%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (221,936,024 samples, 0.16%)</title><rect x="3.8460%" y="853" width="0.1619%" height="15" fill="rgb(230,99,41)" fg:x="5271057194" fg:w="221936024"/><text x="4.0960%" y="863.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (108,327,068 samples, 0.08%)</title><rect x="4.0079%" y="853" width="0.0790%" height="15" fill="rgb(253,106,12)" fg:x="5492993218" fg:w="108327068"/><text x="4.2579%" y="863.50"></text></g><g><title>entry_SYSCALL_64 (16,133,891 samples, 0.01%)</title><rect x="4.0752%" y="837" width="0.0118%" height="15" fill="rgb(213,46,41)" fg:x="5585186395" fg:w="16133891"/><text x="4.3252%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (382,448,235 samples, 0.28%)</title><rect x="3.8136%" y="869" width="0.2791%" height="15" fill="rgb(215,133,35)" fg:x="5226695463" fg:w="382448235"/><text x="4.0636%" y="879.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (496,435,236 samples, 0.36%)</title><rect x="3.7333%" y="917" width="0.3622%" height="15" fill="rgb(213,28,5)" fg:x="5116602142" fg:w="496435236"/><text x="3.9833%" y="927.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (496,435,236 samples, 0.36%)</title><rect x="3.7333%" y="901" width="0.3622%" height="15" fill="rgb(215,77,49)" fg:x="5116602142" fg:w="496435236"/><text x="3.9833%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (496,435,236 samples, 0.36%)</title><rect x="3.7333%" y="885" width="0.3622%" height="15" fill="rgb(248,100,22)" fg:x="5116602142" fg:w="496435236"/><text x="3.9833%" y="895.50"></text></g><g><title>hashbrown::map::make_hash (503,978,988 samples, 0.37%)</title><rect x="3.7333%" y="949" width="0.3677%" height="15" fill="rgb(208,67,9)" fg:x="5116602142" fg:w="503978988"/><text x="3.9833%" y="959.50"></text></g><g><title>core::hash::BuildHasher::hash_one (503,978,988 samples, 0.37%)</title><rect x="3.7333%" y="933" width="0.3677%" height="15" fill="rgb(219,133,21)" fg:x="5116602142" fg:w="503978988"/><text x="3.9833%" y="943.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (535,594,781 samples, 0.39%)</title><rect x="3.7333%" y="997" width="0.3908%" height="15" fill="rgb(246,46,29)" fg:x="5116602142" fg:w="535594781"/><text x="3.9833%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (535,594,781 samples, 0.39%)</title><rect x="3.7333%" y="981" width="0.3908%" height="15" fill="rgb(246,185,52)" fg:x="5116602142" fg:w="535594781"/><text x="3.9833%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (535,594,781 samples, 0.39%)</title><rect x="3.7333%" y="965" width="0.3908%" height="15" fill="rgb(252,136,11)" fg:x="5116602142" fg:w="535594781"/><text x="3.9833%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (31,615,793 samples, 0.02%)</title><rect x="4.1010%" y="949" width="0.0231%" height="15" fill="rgb(219,138,53)" fg:x="5620581130" fg:w="31615793"/><text x="4.3510%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (31,615,793 samples, 0.02%)</title><rect x="4.1010%" y="933" width="0.0231%" height="15" fill="rgb(211,51,23)" fg:x="5620581130" fg:w="31615793"/><text x="4.3510%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (31,615,793 samples, 0.02%)</title><rect x="4.1010%" y="917" width="0.0231%" height="15" fill="rgb(247,221,28)" fg:x="5620581130" fg:w="31615793"/><text x="4.3510%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (17,875,752 samples, 0.01%)</title><rect x="4.1111%" y="901" width="0.0130%" height="15" fill="rgb(251,222,45)" fg:x="5634321171" fg:w="17875752"/><text x="4.3611%" y="911.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (17,875,752 samples, 0.01%)</title><rect x="4.1111%" y="885" width="0.0130%" height="15" fill="rgb(217,162,53)" fg:x="5634321171" fg:w="17875752"/><text x="4.3611%" y="895.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (17,875,752 samples, 0.01%)</title><rect x="4.1111%" y="869" width="0.0130%" height="15" fill="rgb(229,93,14)" fg:x="5634321171" fg:w="17875752"/><text x="4.3611%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (17,875,752 samples, 0.01%)</title><rect x="4.1111%" y="853" width="0.0130%" height="15" fill="rgb(209,67,49)" fg:x="5634321171" fg:w="17875752"/><text x="4.3611%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (17,875,752 samples, 0.01%)</title><rect x="4.1111%" y="837" width="0.0130%" height="15" fill="rgb(213,87,29)" fg:x="5634321171" fg:w="17875752"/><text x="4.3611%" y="847.50"></text></g><g><title>rpq::RPQ&lt;T&gt;::enqueue (803,595,116 samples, 0.59%)</title><rect x="3.6547%" y="1013" width="0.5863%" height="15" fill="rgb(205,151,52)" fg:x="5008806029" fg:w="803595116"/><text x="3.9047%" y="1023.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (160,204,222 samples, 0.12%)</title><rect x="4.1241%" y="997" width="0.1169%" height="15" fill="rgb(253,215,39)" fg:x="5652196923" fg:w="160204222"/><text x="4.3741%" y="1007.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read (160,204,222 samples, 0.12%)</title><rect x="4.1241%" y="981" width="0.1169%" height="15" fill="rgb(221,220,41)" fg:x="5652196923" fg:w="160204222"/><text x="4.3741%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (15,977,939 samples, 0.01%)</title><rect x="4.3179%" y="917" width="0.0117%" height="15" fill="rgb(218,133,21)" fg:x="5917775180" fg:w="15977939"/><text x="4.5679%" y="927.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15,977,939 samples, 0.01%)</title><rect x="4.3179%" y="901" width="0.0117%" height="15" fill="rgb(221,193,43)" fg:x="5917775180" fg:w="15977939"/><text x="4.5679%" y="911.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (15,977,939 samples, 0.01%)</title><rect x="4.3179%" y="885" width="0.0117%" height="15" fill="rgb(240,128,52)" fg:x="5917775180" fg:w="15977939"/><text x="4.5679%" y="895.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (39,966,525 samples, 0.03%)</title><rect x="4.3295%" y="917" width="0.0292%" height="15" fill="rgb(253,114,12)" fg:x="5933753119" fg:w="39966525"/><text x="4.5795%" y="927.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (94,651,518 samples, 0.07%)</title><rect x="4.3009%" y="965" width="0.0691%" height="15" fill="rgb(215,223,47)" fg:x="5894451699" fg:w="94651518"/><text x="4.5509%" y="975.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (94,651,518 samples, 0.07%)</title><rect x="4.3009%" y="949" width="0.0691%" height="15" fill="rgb(248,225,23)" fg:x="5894451699" fg:w="94651518"/><text x="4.5509%" y="959.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (94,651,518 samples, 0.07%)</title><rect x="4.3009%" y="933" width="0.0691%" height="15" fill="rgb(250,108,0)" fg:x="5894451699" fg:w="94651518"/><text x="4.5509%" y="943.50"></text></g><g><title>entry_SYSCALL_64 (15,383,573 samples, 0.01%)</title><rect x="4.3587%" y="917" width="0.0112%" height="15" fill="rgb(228,208,7)" fg:x="5973719644" fg:w="15383573"/><text x="4.6087%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (103,579,751 samples, 0.08%)</title><rect x="4.3009%" y="997" width="0.0756%" height="15" fill="rgb(244,45,10)" fg:x="5894451699" fg:w="103579751"/><text x="4.5509%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (103,579,751 samples, 0.08%)</title><rect x="4.3009%" y="981" width="0.0756%" height="15" fill="rgb(207,125,25)" fg:x="5894451699" fg:w="103579751"/><text x="4.5509%" y="991.50"></text></g><g><title>std::sync::poison::Flag::guard (51,424,520 samples, 0.04%)</title><rect x="4.3901%" y="965" width="0.0375%" height="15" fill="rgb(210,195,18)" fg:x="6016692434" fg:w="51424520"/><text x="4.6401%" y="975.50"></text></g><g><title>std::thread::panicking (40,199,505 samples, 0.03%)</title><rect x="4.3982%" y="949" width="0.0293%" height="15" fill="rgb(249,80,12)" fg:x="6027917449" fg:w="40199505"/><text x="4.6482%" y="959.50"></text></g><g><title>std::panicking::panicking (40,199,505 samples, 0.03%)</title><rect x="4.3982%" y="933" width="0.0293%" height="15" fill="rgb(221,65,9)" fg:x="6027917449" fg:w="40199505"/><text x="4.6482%" y="943.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (40,199,505 samples, 0.03%)</title><rect x="4.3982%" y="917" width="0.0293%" height="15" fill="rgb(235,49,36)" fg:x="6027917449" fg:w="40199505"/><text x="4.6482%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (40,199,505 samples, 0.03%)</title><rect x="4.3982%" y="901" width="0.0293%" height="15" fill="rgb(225,32,20)" fg:x="6027917449" fg:w="40199505"/><text x="4.6482%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_load (40,199,505 samples, 0.03%)</title><rect x="4.3982%" y="885" width="0.0293%" height="15" fill="rgb(215,141,46)" fg:x="6027917449" fg:w="40199505"/><text x="4.6482%" y="895.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (56,464,287 samples, 0.04%)</title><rect x="4.3901%" y="981" width="0.0412%" height="15" fill="rgb(250,160,47)" fg:x="6016692434" fg:w="56464287"/><text x="4.6401%" y="991.50"></text></g><g><title>rpq::bpq::BucketPriorityQueue::add_bucket (285,408,739 samples, 0.21%)</title><rect x="4.2410%" y="1013" width="0.2082%" height="15" fill="rgb(216,222,40)" fg:x="5812401145" fg:w="285408739"/><text x="4.4910%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (81,117,450 samples, 0.06%)</title><rect x="4.3901%" y="997" width="0.0592%" height="15" fill="rgb(234,217,39)" fg:x="6016692434" fg:w="81117450"/><text x="4.6401%" y="1007.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock (24,653,163 samples, 0.02%)</title><rect x="4.4313%" y="981" width="0.0180%" height="15" fill="rgb(207,178,40)" fg:x="6073156721" fg:w="24653163"/><text x="4.6813%" y="991.50"></text></g><g><title>rpq::bpq::BucketPriorityQueue::peek (92,601,215 samples, 0.07%)</title><rect x="4.4492%" y="1013" width="0.0676%" height="15" fill="rgb(221,136,13)" fg:x="6097809884" fg:w="92601215"/><text x="4.6992%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (24,835,694 samples, 0.02%)</title><rect x="4.4987%" y="997" width="0.0181%" height="15" fill="rgb(249,199,10)" fg:x="6165575405" fg:w="24835694"/><text x="4.7487%" y="1007.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock (14,881,659 samples, 0.01%)</title><rect x="4.5060%" y="981" width="0.0109%" height="15" fill="rgb(249,222,13)" fg:x="6175529440" fg:w="14881659"/><text x="4.7560%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;alloc::collections::binary_heap::BinaryHeap&lt;rpq::schema::Item&lt;u64&gt;&gt;&gt;&gt; (16,683,762 samples, 0.01%)</title><rect x="4.5642%" y="997" width="0.0122%" height="15" fill="rgb(244,185,38)" fg:x="6255391453" fg:w="16683762"/><text x="4.8142%" y="1007.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16,683,762 samples, 0.01%)</title><rect x="4.5642%" y="981" width="0.0122%" height="15" fill="rgb(236,202,9)" fg:x="6255391453" fg:w="16683762"/><text x="4.8142%" y="991.50"></text></g><g><title>rpq::pq::PriorityQueue&lt;T&gt;::dequeue (95,685,941 samples, 0.07%)</title><rect x="4.5168%" y="1013" width="0.0698%" height="15" fill="rgb(250,229,37)" fg:x="6190411099" fg:w="95685941"/><text x="4.7668%" y="1023.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (112,577,782 samples, 0.08%)</title><rect x="4.6039%" y="965" width="0.0821%" height="15" fill="rgb(206,174,23)" fg:x="6309788568" fg:w="112577782"/><text x="4.8539%" y="975.50"></text></g><g><title>core::ptr::read (112,577,782 samples, 0.08%)</title><rect x="4.6039%" y="949" width="0.0821%" height="15" fill="rgb(211,33,43)" fg:x="6309788568" fg:w="112577782"/><text x="4.8539%" y="959.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (27,902,166 samples, 0.02%)</title><rect x="4.6861%" y="965" width="0.0204%" height="15" fill="rgb(245,58,50)" fg:x="6422366350" fg:w="27902166"/><text x="4.9361%" y="975.50"></text></g><g><title>core::cmp::PartialOrd::le (27,902,166 samples, 0.02%)</title><rect x="4.6861%" y="949" width="0.0204%" height="15" fill="rgb(244,68,36)" fg:x="6422366350" fg:w="27902166"/><text x="4.9361%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::Hole&lt;rpq::schema::Item&lt;u64&gt;&gt;&gt; (34,434,586 samples, 0.03%)</title><rect x="4.7064%" y="965" width="0.0251%" height="15" fill="rgb(232,229,15)" fg:x="6450268516" fg:w="34434586"/><text x="4.9564%" y="975.50"></text></g><g><title>&lt;alloc::collections::binary_heap::Hole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (34,434,586 samples, 0.03%)</title><rect x="4.7064%" y="949" width="0.0251%" height="15" fill="rgb(254,30,23)" fg:x="6450268516" fg:w="34434586"/><text x="4.9564%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (34,434,586 samples, 0.03%)</title><rect x="4.7064%" y="933" width="0.0251%" height="15" fill="rgb(235,160,14)" fg:x="6450268516" fg:w="34434586"/><text x="4.9564%" y="943.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_up (193,997,755 samples, 0.14%)</title><rect x="4.5957%" y="981" width="0.1415%" height="15" fill="rgb(212,155,44)" fg:x="6298496979" fg:w="193997755"/><text x="4.8457%" y="991.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::push (231,204,313 samples, 0.17%)</title><rect x="4.5957%" y="997" width="0.1687%" height="15" fill="rgb(226,2,50)" fg:x="6298496979" fg:w="231204313"/><text x="4.8457%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (37,206,558 samples, 0.03%)</title><rect x="4.7372%" y="981" width="0.0271%" height="15" fill="rgb(234,177,6)" fg:x="6492494734" fg:w="37206558"/><text x="4.9872%" y="991.50"></text></g><g><title>core::ptr::write (33,367,268 samples, 0.02%)</title><rect x="4.7400%" y="965" width="0.0243%" height="15" fill="rgb(217,24,9)" fg:x="6496334024" fg:w="33367268"/><text x="4.9900%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (23,819,166 samples, 0.02%)</title><rect x="4.7644%" y="997" width="0.0174%" height="15" fill="rgb(220,13,46)" fg:x="6529701292" fg:w="23819166"/><text x="5.0144%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23,819,166 samples, 0.02%)</title><rect x="4.7644%" y="981" width="0.0174%" height="15" fill="rgb(239,221,27)" fg:x="6529701292" fg:w="23819166"/><text x="5.0144%" y="991.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::unlock (19,428,548 samples, 0.01%)</title><rect x="4.7676%" y="965" width="0.0142%" height="15" fill="rgb(222,198,25)" fg:x="6534091910" fg:w="19428548"/><text x="5.0176%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (26,686,707 samples, 0.02%)</title><rect x="4.8120%" y="949" width="0.0195%" height="15" fill="rgb(211,99,13)" fg:x="6594991173" fg:w="26686707"/><text x="5.0620%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_sub (26,686,707 samples, 0.02%)</title><rect x="4.8120%" y="933" width="0.0195%" height="15" fill="rgb(232,111,31)" fg:x="6594991173" fg:w="26686707"/><text x="5.0620%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;alloc::collections::binary_heap::BinaryHeap&lt;rpq::schema::Item&lt;u64&gt;&gt;&gt;&gt; (80,787,893 samples, 0.06%)</title><rect x="4.7818%" y="997" width="0.0589%" height="15" fill="rgb(245,82,37)" fg:x="6553520458" fg:w="80787893"/><text x="5.0318%" y="1007.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (80,787,893 samples, 0.06%)</title><rect x="4.7818%" y="981" width="0.0589%" height="15" fill="rgb(227,149,46)" fg:x="6553520458" fg:w="80787893"/><text x="5.0318%" y="991.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::write_unlock (80,787,893 samples, 0.06%)</title><rect x="4.7818%" y="965" width="0.0589%" height="15" fill="rgb(218,36,50)" fg:x="6553520458" fg:w="80787893"/><text x="5.0318%" y="975.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (54,653,047 samples, 0.04%)</title><rect x="4.8462%" y="997" width="0.0399%" height="15" fill="rgb(226,80,48)" fg:x="6641882211" fg:w="54653047"/><text x="5.0962%" y="1007.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock (46,609,909 samples, 0.03%)</title><rect x="4.8521%" y="981" width="0.0340%" height="15" fill="rgb(238,224,15)" fg:x="6649925349" fg:w="46609909"/><text x="5.1021%" y="991.50"></text></g><g><title>rpq::pq::PriorityQueue&lt;T&gt;::enqueue (468,308,656 samples, 0.34%)</title><rect x="4.5866%" y="1013" width="0.3417%" height="15" fill="rgb(241,136,10)" fg:x="6286097040" fg:w="468308656"/><text x="4.8366%" y="1023.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (57,870,438 samples, 0.04%)</title><rect x="4.8861%" y="997" width="0.0422%" height="15" fill="rgb(208,32,45)" fg:x="6696535258" fg:w="57870438"/><text x="5.1361%" y="1007.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::write (49,493,561 samples, 0.04%)</title><rect x="4.8922%" y="981" width="0.0361%" height="15" fill="rgb(207,135,9)" fg:x="6704912135" fg:w="49493561"/><text x="5.1422%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (30,090,753 samples, 0.02%)</title><rect x="4.9064%" y="965" width="0.0220%" height="15" fill="rgb(206,86,44)" fg:x="6724314943" fg:w="30090753"/><text x="5.1564%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (30,090,753 samples, 0.02%)</title><rect x="4.9064%" y="949" width="0.0220%" height="15" fill="rgb(245,177,15)" fg:x="6724314943" fg:w="30090753"/><text x="5.1564%" y="959.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (15,440,849 samples, 0.01%)</title><rect x="5.0377%" y="997" width="0.0113%" height="15" fill="rgb(206,64,50)" fg:x="6904295026" fg:w="15440849"/><text x="5.2877%" y="1007.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock_contended (296,461,853 samples, 0.22%)</title><rect x="4.9315%" y="1013" width="0.2163%" height="15" fill="rgb(234,36,40)" fg:x="6758693835" fg:w="296461853"/><text x="5.1815%" y="1023.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::spin (135,419,813 samples, 0.10%)</title><rect x="5.0490%" y="997" width="0.0988%" height="15" fill="rgb(213,64,8)" fg:x="6919735875" fg:w="135419813"/><text x="5.2990%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (17,905,515 samples, 0.01%)</title><rect x="5.1347%" y="981" width="0.0131%" height="15" fill="rgb(210,75,36)" fg:x="7037250173" fg:w="17905515"/><text x="5.3847%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_load (17,905,515 samples, 0.01%)</title><rect x="5.1347%" y="965" width="0.0131%" height="15" fill="rgb(229,88,21)" fg:x="7037250173" fg:w="17905515"/><text x="5.3847%" y="975.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read_contended (37,375,509 samples, 0.03%)</title><rect x="5.1533%" y="1013" width="0.0273%" height="15" fill="rgb(252,204,47)" fg:x="7062745084" fg:w="37375509"/><text x="5.4033%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (14,991,128 samples, 0.01%)</title><rect x="5.1696%" y="997" width="0.0109%" height="15" fill="rgb(208,77,27)" fg:x="7085129465" fg:w="14991128"/><text x="5.4196%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (14,991,128 samples, 0.01%)</title><rect x="5.1696%" y="981" width="0.0109%" height="15" fill="rgb(221,76,26)" fg:x="7085129465" fg:w="14991128"/><text x="5.4196%" y="991.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (47,961,303 samples, 0.03%)</title><rect x="5.1806%" y="1013" width="0.0350%" height="15" fill="rgb(225,139,18)" fg:x="7100120593" fg:w="47961303"/><text x="5.4306%" y="1023.50"></text></g><g><title>alloc::string::String::new (138,889,439 samples, 0.10%)</title><rect x="5.3715%" y="965" width="0.1013%" height="15" fill="rgb(230,137,11)" fg:x="7361759627" fg:w="138889439"/><text x="5.6215%" y="975.50"></text></g><g><title>entry_SYSCALL_64 (13,997,024 samples, 0.01%)</title><rect x="5.4626%" y="949" width="0.0102%" height="15" fill="rgb(212,28,1)" fg:x="7486652042" fg:w="13997024"/><text x="5.7126%" y="959.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (155,068,499 samples, 0.11%)</title><rect x="5.3628%" y="981" width="0.1131%" height="15" fill="rgb(248,164,17)" fg:x="7349920962" fg:w="155068499"/><text x="5.6128%" y="991.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (25,326,448 samples, 0.02%)</title><rect x="5.4760%" y="981" width="0.0185%" height="15" fill="rgb(222,171,42)" fg:x="7504989461" fg:w="25326448"/><text x="5.7260%" y="991.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (25,326,448 samples, 0.02%)</title><rect x="5.4760%" y="965" width="0.0185%" height="15" fill="rgb(243,84,45)" fg:x="7504989461" fg:w="25326448"/><text x="5.7260%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_add (39,173,435 samples, 0.03%)</title><rect x="5.4945%" y="981" width="0.0286%" height="15" fill="rgb(252,49,23)" fg:x="7530315909" fg:w="39173435"/><text x="5.7445%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_add (39,173,435 samples, 0.03%)</title><rect x="5.4945%" y="965" width="0.0286%" height="15" fill="rgb(215,19,7)" fg:x="7530315909" fg:w="39173435"/><text x="5.7445%" y="975.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (433,816,594 samples, 0.32%)</title><rect x="5.2156%" y="1013" width="0.3165%" height="15" fill="rgb(238,81,41)" fg:x="7148081896" fg:w="433816594"/><text x="5.4656%" y="1023.50"></text></g><g><title>rpq::main::_{{closure}} (433,816,594 samples, 0.32%)</title><rect x="5.2156%" y="997" width="0.3165%" height="15" fill="rgb(210,199,37)" fg:x="7148081896" fg:w="433816594"/><text x="5.4656%" y="1007.50"></text></g><g><title>syscall (958,060,097 samples, 0.70%)</title><rect x="5.5384%" y="1013" width="0.6990%" height="15" fill="rgb(244,192,49)" fg:x="7590463847" fg:w="958060097"/><text x="5.7884%" y="1023.50"></text></g><g><title>uuid::fmt::&lt;impl core::fmt::Display for uuid::Uuid&gt;::fmt (39,387,896 samples, 0.03%)</title><rect x="6.2374%" y="1013" width="0.0287%" height="15" fill="rgb(226,211,11)" fg:x="8548523944" fg:w="39387896"/><text x="6.4874%" y="1023.50"></text></g><g><title>uuid::fmt::&lt;impl core::fmt::LowerHex for uuid::Uuid&gt;::fmt (35,607,344 samples, 0.03%)</title><rect x="6.2402%" y="997" width="0.0260%" height="15" fill="rgb(236,162,54)" fg:x="8552304496" fg:w="35607344"/><text x="6.4902%" y="1007.50"></text></g><g><title>&lt;uuid::fmt::Hyphenated as core::fmt::LowerHex&gt;::fmt (35,607,344 samples, 0.03%)</title><rect x="6.2402%" y="981" width="0.0260%" height="15" fill="rgb(220,229,9)" fg:x="8552304496" fg:w="35607344"/><text x="6.4902%" y="991.50"></text></g><g><title>uuid::fmt::format_hyphenated (87,574,192 samples, 0.06%)</title><rect x="6.2661%" y="1013" width="0.0639%" height="15" fill="rgb(250,87,22)" fg:x="8587911840" fg:w="87574192"/><text x="6.5161%" y="1023.50"></text></g><g><title>uuid::builder::&lt;impl uuid::Uuid&gt;::from_u128 (36,565,086 samples, 0.03%)</title><rect x="6.3515%" y="997" width="0.0267%" height="15" fill="rgb(239,43,17)" fg:x="8704887184" fg:w="36565086"/><text x="6.6015%" y="1007.50"></text></g><g><title>entry_SYSCALL_64 (17,654,428 samples, 0.01%)</title><rect x="6.3653%" y="981" width="0.0129%" height="15" fill="rgb(231,177,25)" fg:x="8723797842" fg:w="17654428"/><text x="6.6153%" y="991.50"></text></g><g><title>[anon] (6,120,757,052 samples, 4.47%)</title><rect x="1.9237%" y="1029" width="4.4660%" height="15" fill="rgb(219,179,1)" fg:x="2636442994" fg:w="6120757052"/><text x="2.1737%" y="1039.50">[anon]</text></g><g><title>uuid::v4::&lt;impl uuid::Uuid&gt;::new_v4 (81,714,014 samples, 0.06%)</title><rect x="6.3300%" y="1013" width="0.0596%" height="15" fill="rgb(238,219,53)" fg:x="8675486032" fg:w="81714014"/><text x="6.5800%" y="1023.50"></text></g><g><title>uuid::rng::u128 (15,747,776 samples, 0.01%)</title><rect x="6.3782%" y="997" width="0.0115%" height="15" fill="rgb(232,167,36)" fg:x="8741452270" fg:w="15747776"/><text x="6.6282%" y="1007.50"></text></g><g><title>alloc::string::String::new (288,205,381 samples, 0.21%)</title><rect x="7.5159%" y="789" width="0.2103%" height="15" fill="rgb(244,19,51)" fg:x="10300753587" fg:w="288205381"/><text x="7.7659%" y="799.50"></text></g><g><title>core::fmt::Formatter::new (71,922,111 samples, 0.05%)</title><rect x="7.7262%" y="789" width="0.0525%" height="15" fill="rgb(224,6,22)" fg:x="10588958968" fg:w="71922111"/><text x="7.9762%" y="799.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (54,260,954 samples, 0.04%)</title><rect x="7.7846%" y="789" width="0.0396%" height="15" fill="rgb(224,145,5)" fg:x="10669056239" fg:w="54260954"/><text x="8.0346%" y="799.50"></text></g><g><title>rpq::main::_{{closure}} (54,260,954 samples, 0.04%)</title><rect x="7.7846%" y="773" width="0.0396%" height="15" fill="rgb(234,130,49)" fg:x="10669056239" fg:w="54260954"/><text x="8.0346%" y="783.50"></text></g><g><title>syscall (23,376,094 samples, 0.02%)</title><rect x="7.8242%" y="789" width="0.0171%" height="15" fill="rgb(254,6,2)" fg:x="10723317193" fg:w="23376094"/><text x="8.0742%" y="799.50"></text></g><g><title>[libc.so.6] (38,694,440 samples, 0.03%)</title><rect x="8.0820%" y="581" width="0.0282%" height="15" fill="rgb(208,96,46)" fg:x="11076656871" fg:w="38694440"/><text x="8.3320%" y="591.50"></text></g><g><title>__rdl_alloc (43,492,408 samples, 0.03%)</title><rect x="8.1103%" y="581" width="0.0317%" height="15" fill="rgb(239,3,39)" fg:x="11115351311" fg:w="43492408"/><text x="8.3603%" y="591.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (26,114,836 samples, 0.02%)</title><rect x="8.1230%" y="565" width="0.0191%" height="15" fill="rgb(233,210,1)" fg:x="11132728883" fg:w="26114836"/><text x="8.3730%" y="575.50"></text></g><g><title>malloc (1,434,033,998 samples, 1.05%)</title><rect x="8.1591%" y="581" width="1.0463%" height="15" fill="rgb(244,137,37)" fg:x="11182325956" fg:w="1434033998"/><text x="8.4091%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,641,385,252 samples, 1.20%)</title><rect x="8.0281%" y="597" width="1.1976%" height="15" fill="rgb(240,136,2)" fg:x="11002707817" fg:w="1641385252"/><text x="8.2781%" y="607.50"></text></g><g><title>rand::rng::Rng::gen_range (27,733,115 samples, 0.02%)</title><rect x="9.2055%" y="581" width="0.0202%" height="15" fill="rgb(239,18,37)" fg:x="12616359954" fg:w="27733115"/><text x="9.4555%" y="591.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::sample_single (23,698,234 samples, 0.02%)</title><rect x="9.2084%" y="565" width="0.0173%" height="15" fill="rgb(218,185,22)" fg:x="12620394835" fg:w="23698234"/><text x="9.4584%" y="575.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u64&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (23,698,234 samples, 0.02%)</title><rect x="9.2084%" y="549" width="0.0173%" height="15" fill="rgb(225,218,4)" fg:x="12620394835" fg:w="23698234"/><text x="9.4584%" y="559.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u64&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single_inclusive (19,448,092 samples, 0.01%)</title><rect x="9.2115%" y="533" width="0.0142%" height="15" fill="rgb(230,182,32)" fg:x="12624644977" fg:w="19448092"/><text x="9.4615%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,676,775,629 samples, 1.22%)</title><rect x="8.0078%" y="629" width="1.2235%" height="15" fill="rgb(242,56,43)" fg:x="10974852905" fg:w="1676775629"/><text x="8.2578%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,665,706,905 samples, 1.22%)</title><rect x="8.0158%" y="613" width="1.2154%" height="15" fill="rgb(233,99,24)" fg:x="10985921629" fg:w="1665706905"/><text x="8.2658%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (31,918,104 samples, 0.02%)</title><rect x="9.2428%" y="549" width="0.0233%" height="15" fill="rgb(234,209,42)" fg:x="12667460916" fg:w="31918104"/><text x="9.4928%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (31,918,104 samples, 0.02%)</title><rect x="9.2428%" y="533" width="0.0233%" height="15" fill="rgb(227,7,12)" fg:x="12667460916" fg:w="31918104"/><text x="9.4928%" y="543.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (31,918,104 samples, 0.02%)</title><rect x="9.2428%" y="517" width="0.0233%" height="15" fill="rgb(245,203,43)" fg:x="12667460916" fg:w="31918104"/><text x="9.4928%" y="527.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (31,918,104 samples, 0.02%)</title><rect x="9.2428%" y="501" width="0.0233%" height="15" fill="rgb(238,205,33)" fg:x="12667460916" fg:w="31918104"/><text x="9.4928%" y="511.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (31,918,104 samples, 0.02%)</title><rect x="9.2428%" y="485" width="0.0233%" height="15" fill="rgb(231,56,7)" fg:x="12667460916" fg:w="31918104"/><text x="9.4928%" y="495.50"></text></g><g><title>std::sync::poison::Flag::guard (68,740,638 samples, 0.05%)</title><rect x="9.2688%" y="517" width="0.0502%" height="15" fill="rgb(244,186,29)" fg:x="12703185923" fg:w="68740638"/><text x="9.5188%" y="527.50"></text></g><g><title>std::thread::panicking (64,946,978 samples, 0.05%)</title><rect x="9.2716%" y="501" width="0.0474%" height="15" fill="rgb(234,111,31)" fg:x="12706979583" fg:w="64946978"/><text x="9.5216%" y="511.50"></text></g><g><title>std::panicking::panicking (64,946,978 samples, 0.05%)</title><rect x="9.2716%" y="485" width="0.0474%" height="15" fill="rgb(241,149,10)" fg:x="12706979583" fg:w="64946978"/><text x="9.5216%" y="495.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (64,946,978 samples, 0.05%)</title><rect x="9.2716%" y="469" width="0.0474%" height="15" fill="rgb(249,206,44)" fg:x="12706979583" fg:w="64946978"/><text x="9.5216%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (45,409,475 samples, 0.03%)</title><rect x="9.2859%" y="453" width="0.0331%" height="15" fill="rgb(251,153,30)" fg:x="12726517086" fg:w="45409475"/><text x="9.5359%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_load (45,409,475 samples, 0.03%)</title><rect x="9.2859%" y="437" width="0.0331%" height="15" fill="rgb(239,152,38)" fg:x="12726517086" fg:w="45409475"/><text x="9.5359%" y="447.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (72,559,528 samples, 0.05%)</title><rect x="9.2688%" y="533" width="0.0529%" height="15" fill="rgb(249,139,47)" fg:x="12703185923" fg:w="72559528"/><text x="9.5188%" y="543.50"></text></g><g><title>rpq::bpq::BucketPriorityQueue::add_bucket (132,110,933 samples, 0.10%)</title><rect x="9.2340%" y="565" width="0.0964%" height="15" fill="rgb(244,64,35)" fg:x="12655378734" fg:w="132110933"/><text x="9.4840%" y="575.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (84,303,744 samples, 0.06%)</title><rect x="9.2688%" y="549" width="0.0615%" height="15" fill="rgb(216,46,15)" fg:x="12703185923" fg:w="84303744"/><text x="9.5188%" y="559.50"></text></g><g><title>getrandom::imp::getrandom_inner (147,343,057 samples, 0.11%)</title><rect x="9.2312%" y="629" width="0.1075%" height="15" fill="rgb(250,74,19)" fg:x="12651628534" fg:w="147343057"/><text x="9.4812%" y="639.50"></text></g><g><title>getrandom::util_libc::sys_fill_exact (147,343,057 samples, 0.11%)</title><rect x="9.2312%" y="613" width="0.1075%" height="15" fill="rgb(249,42,33)" fg:x="12651628534" fg:w="147343057"/><text x="9.4812%" y="623.50"></text></g><g><title>core::ops::function::Fn::call (147,343,057 samples, 0.11%)</title><rect x="9.2312%" y="597" width="0.1075%" height="15" fill="rgb(242,149,17)" fg:x="12651628534" fg:w="147343057"/><text x="9.4812%" y="607.50"></text></g><g><title>getrandom::util_libc::getrandom_syscall (147,343,057 samples, 0.11%)</title><rect x="9.2312%" y="581" width="0.1075%" height="15" fill="rgb(244,29,21)" fg:x="12651628534" fg:w="147343057"/><text x="9.4812%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,831,646,268 samples, 1.34%)</title><rect x="8.0050%" y="661" width="1.3365%" height="15" fill="rgb(220,130,37)" fg:x="10971113827" fg:w="1831646268"/><text x="8.2550%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,831,646,268 samples, 1.34%)</title><rect x="8.0050%" y="645" width="1.3365%" height="15" fill="rgb(211,67,2)" fg:x="10971113827" fg:w="1831646268"/><text x="8.2550%" y="655.50"></text></g><g><title>[libc.so.6] (59,171,758 samples, 0.04%)</title><rect x="9.3415%" y="645" width="0.0432%" height="15" fill="rgb(235,68,52)" fg:x="12802760095" fg:w="59171758"/><text x="9.5915%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (62,935,816 samples, 0.05%)</title><rect x="9.3415%" y="661" width="0.0459%" height="15" fill="rgb(246,142,3)" fg:x="12802760095" fg:w="62935816"/><text x="9.5915%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1,913,034,375 samples, 1.40%)</title><rect x="7.9945%" y="741" width="1.3958%" height="15" fill="rgb(241,25,7)" fg:x="10956682049" fg:w="1913034375"/><text x="8.2445%" y="751.50"></text></g><g><title>alloc::string::String::push_str (1,902,086,371 samples, 1.39%)</title><rect x="8.0025%" y="725" width="1.3879%" height="15" fill="rgb(242,119,39)" fg:x="10967630053" fg:w="1902086371"/><text x="8.2525%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1,902,086,371 samples, 1.39%)</title><rect x="8.0025%" y="709" width="1.3879%" height="15" fill="rgb(241,98,45)" fg:x="10967630053" fg:w="1902086371"/><text x="8.2525%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1,902,086,371 samples, 1.39%)</title><rect x="8.0025%" y="693" width="1.3879%" height="15" fill="rgb(254,28,30)" fg:x="10967630053" fg:w="1902086371"/><text x="8.2525%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1,902,086,371 samples, 1.39%)</title><rect x="8.0025%" y="677" width="1.3879%" height="15" fill="rgb(241,142,54)" fg:x="10967630053" fg:w="1902086371"/><text x="8.2525%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_str (223,968,130 samples, 0.16%)</title><rect x="9.3931%" y="741" width="0.1634%" height="15" fill="rgb(222,85,15)" fg:x="12873532098" fg:w="223968130"/><text x="9.6431%" y="751.50"></text></g><g><title>syscall (19,297,879 samples, 0.01%)</title><rect x="9.5665%" y="709" width="0.0141%" height="15" fill="rgb(210,85,47)" fg:x="13111163931" fg:w="19297879"/><text x="9.8165%" y="719.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (3,177,092,868 samples, 2.32%)</title><rect x="7.4813%" y="805" width="2.3182%" height="15" fill="rgb(224,206,25)" fg:x="10253284156" fg:w="3177092868"/><text x="7.7313%" y="815.50">&lt;..</text></g><g><title>uuid::fmt::&lt;impl core::fmt::Display for uuid::Uuid&gt;::fmt (2,683,683,737 samples, 1.96%)</title><rect x="7.8413%" y="789" width="1.9581%" height="15" fill="rgb(243,201,19)" fg:x="10746693287" fg:w="2683683737"/><text x="8.0913%" y="799.50">u..</text></g><g><title>uuid::fmt::&lt;impl core::fmt::LowerHex for uuid::Uuid&gt;::fmt (2,511,337,383 samples, 1.83%)</title><rect x="7.9670%" y="773" width="1.8324%" height="15" fill="rgb(236,59,4)" fg:x="10919039641" fg:w="2511337383"/><text x="8.2170%" y="783.50">u..</text></g><g><title>&lt;uuid::fmt::Hyphenated as core::fmt::LowerHex&gt;::fmt (2,511,337,383 samples, 1.83%)</title><rect x="7.9670%" y="757" width="1.8324%" height="15" fill="rgb(254,179,45)" fg:x="10919039641" fg:w="2511337383"/><text x="8.2170%" y="767.50">&lt;..</text></g><g><title>uuid::fmt::Hyphenated::encode_lower (324,537,483 samples, 0.24%)</title><rect x="9.5626%" y="741" width="0.2368%" height="15" fill="rgb(226,14,10)" fg:x="13105839541" fg:w="324537483"/><text x="9.8126%" y="751.50"></text></g><g><title>uuid::fmt::encode_hyphenated (324,537,483 samples, 0.24%)</title><rect x="9.5626%" y="725" width="0.2368%" height="15" fill="rgb(244,27,41)" fg:x="13105839541" fg:w="324537483"/><text x="9.8126%" y="735.50"></text></g><g><title>uuid::fmt::format_hyphenated (299,915,214 samples, 0.22%)</title><rect x="9.5806%" y="709" width="0.2188%" height="15" fill="rgb(235,35,32)" fg:x="13130461810" fg:w="299915214"/><text x="9.8306%" y="719.50"></text></g><g><title>__rdl_dealloc (78,275,448 samples, 0.06%)</title><rect x="9.8051%" y="805" width="0.0571%" height="15" fill="rgb(218,68,31)" fg:x="13438120936" fg:w="78275448"/><text x="10.0551%" y="815.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (78,275,448 samples, 0.06%)</title><rect x="9.8051%" y="789" width="0.0571%" height="15" fill="rgb(207,120,37)" fg:x="13438120936" fg:w="78275448"/><text x="10.0551%" y="799.50"></text></g><g><title>__rust_dealloc (45,588,174 samples, 0.03%)</title><rect x="9.8622%" y="805" width="0.0333%" height="15" fill="rgb(227,98,0)" fg:x="13516396384" fg:w="45588174"/><text x="10.1122%" y="815.50"></text></g><g><title>[libc.so.6] (35,970,399 samples, 0.03%)</title><rect x="10.2460%" y="789" width="0.0262%" height="15" fill="rgb(207,7,3)" fg:x="14042376151" fg:w="35970399"/><text x="10.4960%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,rpq::pq::PriorityQueue&lt;u64&gt;&gt;&gt;&gt; (16,967,633 samples, 0.01%)</title><rect x="10.2865%" y="773" width="0.0124%" height="15" fill="rgb(206,98,19)" fg:x="14097900992" fg:w="16967633"/><text x="10.5365%" y="783.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16,967,633 samples, 0.01%)</title><rect x="10.2865%" y="757" width="0.0124%" height="15" fill="rgb(217,5,26)" fg:x="14097900992" fg:w="16967633"/><text x="10.5365%" y="767.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read_unlock (16,967,633 samples, 0.01%)</title><rect x="10.2865%" y="741" width="0.0124%" height="15" fill="rgb(235,190,38)" fg:x="14097900992" fg:w="16967633"/><text x="10.5365%" y="751.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (116,901,390 samples, 0.09%)</title><rect x="10.4389%" y="629" width="0.0853%" height="15" fill="rgb(247,86,24)" fg:x="14306736894" fg:w="116901390"/><text x="10.6889%" y="639.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (314,102,127 samples, 0.23%)</title><rect x="10.3303%" y="693" width="0.2292%" height="15" fill="rgb(205,101,16)" fg:x="14157903115" fg:w="314102127"/><text x="10.5803%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (314,102,127 samples, 0.23%)</title><rect x="10.3303%" y="677" width="0.2292%" height="15" fill="rgb(246,168,33)" fg:x="14157903115" fg:w="314102127"/><text x="10.5803%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (314,102,127 samples, 0.23%)</title><rect x="10.3303%" y="661" width="0.2292%" height="15" fill="rgb(231,114,1)" fg:x="14157903115" fg:w="314102127"/><text x="10.5803%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (285,137,676 samples, 0.21%)</title><rect x="10.3514%" y="645" width="0.2080%" height="15" fill="rgb(207,184,53)" fg:x="14186867566" fg:w="285137676"/><text x="10.6014%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (48,366,958 samples, 0.04%)</title><rect x="10.5242%" y="629" width="0.0353%" height="15" fill="rgb(224,95,51)" fg:x="14423638284" fg:w="48366958"/><text x="10.7742%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (323,700,788 samples, 0.24%)</title><rect x="10.3303%" y="725" width="0.2362%" height="15" fill="rgb(212,188,45)" fg:x="14157903115" fg:w="323700788"/><text x="10.5803%" y="735.50"></text></g><g><title>core::hash::BuildHasher::hash_one (323,700,788 samples, 0.24%)</title><rect x="10.3303%" y="709" width="0.2362%" height="15" fill="rgb(223,154,38)" fg:x="14157903115" fg:w="323700788"/><text x="10.5803%" y="719.50"></text></g><g><title>hashbrown::raw::h2 (33,221,171 samples, 0.02%)</title><rect x="10.5819%" y="677" width="0.0242%" height="15" fill="rgb(251,22,52)" fg:x="14502758858" fg:w="33221171"/><text x="10.8319%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (424,337,581 samples, 0.31%)</title><rect x="10.2989%" y="773" width="0.3096%" height="15" fill="rgb(229,209,22)" fg:x="14114868625" fg:w="424337581"/><text x="10.5489%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (424,337,581 samples, 0.31%)</title><rect x="10.2989%" y="757" width="0.3096%" height="15" fill="rgb(234,138,34)" fg:x="14114868625" fg:w="424337581"/><text x="10.5489%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (424,337,581 samples, 0.31%)</title><rect x="10.2989%" y="741" width="0.3096%" height="15" fill="rgb(212,95,11)" fg:x="14114868625" fg:w="424337581"/><text x="10.5489%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (57,602,303 samples, 0.04%)</title><rect x="10.5664%" y="725" width="0.0420%" height="15" fill="rgb(240,179,47)" fg:x="14481603903" fg:w="57602303"/><text x="10.8164%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (57,602,303 samples, 0.04%)</title><rect x="10.5664%" y="709" width="0.0420%" height="15" fill="rgb(240,163,11)" fg:x="14481603903" fg:w="57602303"/><text x="10.8164%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (57,602,303 samples, 0.04%)</title><rect x="10.5664%" y="693" width="0.0420%" height="15" fill="rgb(236,37,12)" fg:x="14481603903" fg:w="57602303"/><text x="10.8164%" y="703.50"></text></g><g><title>rpq::RPQ&lt;T&gt;::dequeue (499,267,184 samples, 0.36%)</title><rect x="10.2750%" y="789" width="0.3643%" height="15" fill="rgb(232,164,16)" fg:x="14082128844" fg:w="499267184"/><text x="10.5250%" y="799.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (42,189,822 samples, 0.03%)</title><rect x="10.6085%" y="773" width="0.0308%" height="15" fill="rgb(244,205,15)" fg:x="14539206206" fg:w="42189822"/><text x="10.8585%" y="783.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read (42,189,822 samples, 0.03%)</title><rect x="10.6085%" y="757" width="0.0308%" height="15" fill="rgb(223,117,47)" fg:x="14539206206" fg:w="42189822"/><text x="10.8585%" y="767.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (19,763,305 samples, 0.01%)</title><rect x="10.6421%" y="741" width="0.0144%" height="15" fill="rgb(244,107,35)" fg:x="14585224154" fg:w="19763305"/><text x="10.8921%" y="751.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (19,763,305 samples, 0.01%)</title><rect x="10.6421%" y="725" width="0.0144%" height="15" fill="rgb(205,140,8)" fg:x="14585224154" fg:w="19763305"/><text x="10.8921%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (19,763,305 samples, 0.01%)</title><rect x="10.6421%" y="709" width="0.0144%" height="15" fill="rgb(228,84,46)" fg:x="14585224154" fg:w="19763305"/><text x="10.8921%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (27,236,731 samples, 0.02%)</title><rect x="10.6421%" y="773" width="0.0199%" height="15" fill="rgb(254,188,9)" fg:x="14585224154" fg:w="27236731"/><text x="10.8921%" y="783.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (27,236,731 samples, 0.02%)</title><rect x="10.6421%" y="757" width="0.0199%" height="15" fill="rgb(206,112,54)" fg:x="14585224154" fg:w="27236731"/><text x="10.8921%" y="767.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (65,141,082 samples, 0.05%)</title><rect x="10.6619%" y="757" width="0.0475%" height="15" fill="rgb(216,84,49)" fg:x="14612460885" fg:w="65141082"/><text x="10.9119%" y="767.50"></text></g><g><title>std::sync::poison::Flag::guard (65,141,082 samples, 0.05%)</title><rect x="10.6619%" y="741" width="0.0475%" height="15" fill="rgb(214,194,35)" fg:x="14612460885" fg:w="65141082"/><text x="10.9119%" y="751.50"></text></g><g><title>std::thread::panicking (61,336,006 samples, 0.04%)</title><rect x="10.6647%" y="725" width="0.0448%" height="15" fill="rgb(249,28,3)" fg:x="14616265961" fg:w="61336006"/><text x="10.9147%" y="735.50"></text></g><g><title>std::panicking::panicking (61,336,006 samples, 0.04%)</title><rect x="10.6647%" y="709" width="0.0448%" height="15" fill="rgb(222,56,52)" fg:x="14616265961" fg:w="61336006"/><text x="10.9147%" y="719.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (61,336,006 samples, 0.04%)</title><rect x="10.6647%" y="693" width="0.0448%" height="15" fill="rgb(245,217,50)" fg:x="14616265961" fg:w="61336006"/><text x="10.9147%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (57,109,979 samples, 0.04%)</title><rect x="10.6678%" y="677" width="0.0417%" height="15" fill="rgb(213,201,24)" fg:x="14620491988" fg:w="57109979"/><text x="10.9178%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (57,109,979 samples, 0.04%)</title><rect x="10.6678%" y="661" width="0.0417%" height="15" fill="rgb(248,116,28)" fg:x="14620491988" fg:w="57109979"/><text x="10.9178%" y="671.50"></text></g><g><title>cfree (1,127,393,053 samples, 0.82%)</title><rect x="9.8982%" y="805" width="0.8226%" height="15" fill="rgb(219,72,43)" fg:x="13565783320" fg:w="1127393053"/><text x="10.1482%" y="815.50"></text></g><g><title>rpq::bpq::BucketPriorityQueue::add_bucket (111,780,345 samples, 0.08%)</title><rect x="10.6393%" y="789" width="0.0816%" height="15" fill="rgb(209,138,14)" fg:x="14581396028" fg:w="111780345"/><text x="10.8893%" y="799.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (80,715,488 samples, 0.06%)</title><rect x="10.6619%" y="773" width="0.0589%" height="15" fill="rgb(222,18,33)" fg:x="14612460885" fg:w="80715488"/><text x="10.9119%" y="783.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock (15,574,406 samples, 0.01%)</title><rect x="10.7095%" y="757" width="0.0114%" height="15" fill="rgb(213,199,7)" fg:x="14677601967" fg:w="15574406"/><text x="10.9595%" y="767.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (608,258,118 samples, 0.44%)</title><rect x="10.7208%" y="805" width="0.4438%" height="15" fill="rgb(250,110,10)" fg:x="14693176373" fg:w="608258118"/><text x="10.9708%" y="815.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (608,258,118 samples, 0.44%)</title><rect x="10.7208%" y="789" width="0.4438%" height="15" fill="rgb(248,123,6)" fg:x="14693176373" fg:w="608258118"/><text x="10.9708%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u64&gt;::lt (608,258,118 samples, 0.44%)</title><rect x="10.7208%" y="773" width="0.4438%" height="15" fill="rgb(206,91,31)" fg:x="14693176373" fg:w="608258118"/><text x="10.9708%" y="783.50"></text></g><g><title>[libc.so.6] (85,174,601 samples, 0.06%)</title><rect x="11.1738%" y="677" width="0.0621%" height="15" fill="rgb(211,154,13)" fg:x="15313966134" fg:w="85174601"/><text x="11.4238%" y="687.50"></text></g><g><title>[libc.so.6] (49,681,263 samples, 0.04%)</title><rect x="11.3360%" y="661" width="0.0362%" height="15" fill="rgb(225,148,7)" fg:x="15536255428" fg:w="49681263"/><text x="11.5860%" y="671.50"></text></g><g><title>cfree (30,855,641 samples, 0.02%)</title><rect x="11.3858%" y="661" width="0.0225%" height="15" fill="rgb(220,160,43)" fg:x="15604544046" fg:w="30855641"/><text x="11.6358%" y="671.50"></text></g><g><title>cfree (260,530,934 samples, 0.19%)</title><rect x="11.2359%" y="677" width="0.1901%" height="15" fill="rgb(213,52,39)" fg:x="15399140735" fg:w="260530934"/><text x="11.4859%" y="687.50"></text></g><g><title>rpq::pq::PriorityQueue&lt;T&gt;::dequeue (24,271,982 samples, 0.02%)</title><rect x="11.4083%" y="661" width="0.0177%" height="15" fill="rgb(243,137,7)" fg:x="15635399687" fg:w="24271982"/><text x="11.6583%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::collections::vec_deque::VecDeque&lt;alloc::boxed::Box&lt;u64&gt;&gt;&gt;&gt; (18,490,575 samples, 0.01%)</title><rect x="11.4494%" y="661" width="0.0135%" height="15" fill="rgb(230,79,13)" fg:x="15691707830" fg:w="18490575"/><text x="11.6994%" y="671.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18,490,575 samples, 0.01%)</title><rect x="11.4494%" y="645" width="0.0135%" height="15" fill="rgb(247,105,23)" fg:x="15691707830" fg:w="18490575"/><text x="11.6994%" y="655.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::unlock (15,103,431 samples, 0.01%)</title><rect x="11.4519%" y="629" width="0.0110%" height="15" fill="rgb(223,179,41)" fg:x="15695094974" fg:w="15103431"/><text x="11.7019%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (15,103,431 samples, 0.01%)</title><rect x="11.4519%" y="613" width="0.0110%" height="15" fill="rgb(218,9,34)" fg:x="15695094974" fg:w="15103431"/><text x="11.7019%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_swap (15,103,431 samples, 0.01%)</title><rect x="11.4519%" y="597" width="0.0110%" height="15" fill="rgb(222,106,8)" fg:x="15695094974" fg:w="15103431"/><text x="11.7019%" y="607.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (28,929,588 samples, 0.02%)</title><rect x="11.4629%" y="645" width="0.0211%" height="15" fill="rgb(211,220,0)" fg:x="15710198405" fg:w="28929588"/><text x="11.7129%" y="655.50"></text></g><g><title>std::sync::poison::Flag::guard (28,929,588 samples, 0.02%)</title><rect x="11.4629%" y="629" width="0.0211%" height="15" fill="rgb(229,52,16)" fg:x="15710198405" fg:w="28929588"/><text x="11.7129%" y="639.50"></text></g><g><title>std::thread::panicking (25,685,068 samples, 0.02%)</title><rect x="11.4653%" y="613" width="0.0187%" height="15" fill="rgb(212,155,18)" fg:x="15713442925" fg:w="25685068"/><text x="11.7153%" y="623.50"></text></g><g><title>std::panicking::panicking (25,685,068 samples, 0.02%)</title><rect x="11.4653%" y="597" width="0.0187%" height="15" fill="rgb(242,21,14)" fg:x="15713442925" fg:w="25685068"/><text x="11.7153%" y="607.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (25,685,068 samples, 0.02%)</title><rect x="11.4653%" y="581" width="0.0187%" height="15" fill="rgb(222,19,48)" fg:x="15713442925" fg:w="25685068"/><text x="11.7153%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (25,685,068 samples, 0.02%)</title><rect x="11.4653%" y="565" width="0.0187%" height="15" fill="rgb(232,45,27)" fg:x="15713442925" fg:w="25685068"/><text x="11.7153%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_load (25,685,068 samples, 0.02%)</title><rect x="11.4653%" y="549" width="0.0187%" height="15" fill="rgb(249,103,42)" fg:x="15713442925" fg:w="25685068"/><text x="11.7153%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpq::schema::Item&lt;u64&gt;&gt; (460,850,763 samples, 0.34%)</title><rect x="11.1738%" y="805" width="0.3363%" height="15" fill="rgb(246,81,33)" fg:x="15313966134" fg:w="460850763"/><text x="11.4238%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (460,850,763 samples, 0.34%)</title><rect x="11.1738%" y="789" width="0.3363%" height="15" fill="rgb(252,33,42)" fg:x="15313966134" fg:w="460850763"/><text x="11.4238%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (460,850,763 samples, 0.34%)</title><rect x="11.1738%" y="773" width="0.3363%" height="15" fill="rgb(209,212,41)" fg:x="15313966134" fg:w="460850763"/><text x="11.4238%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (460,850,763 samples, 0.34%)</title><rect x="11.1738%" y="757" width="0.3363%" height="15" fill="rgb(207,154,6)" fg:x="15313966134" fg:w="460850763"/><text x="11.4238%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (460,850,763 samples, 0.34%)</title><rect x="11.1738%" y="741" width="0.3363%" height="15" fill="rgb(223,64,47)" fg:x="15313966134" fg:w="460850763"/><text x="11.4238%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (460,850,763 samples, 0.34%)</title><rect x="11.1738%" y="725" width="0.3363%" height="15" fill="rgb(211,161,38)" fg:x="15313966134" fg:w="460850763"/><text x="11.4238%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (460,850,763 samples, 0.34%)</title><rect x="11.1738%" y="709" width="0.3363%" height="15" fill="rgb(219,138,40)" fg:x="15313966134" fg:w="460850763"/><text x="11.4238%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (460,850,763 samples, 0.34%)</title><rect x="11.1738%" y="693" width="0.3363%" height="15" fill="rgb(241,228,46)" fg:x="15313966134" fg:w="460850763"/><text x="11.4238%" y="703.50"></text></g><g><title>rpq::bpq::BucketPriorityQueue::peek (115,145,228 samples, 0.08%)</title><rect x="11.4260%" y="677" width="0.0840%" height="15" fill="rgb(223,209,38)" fg:x="15659671669" fg:w="115145228"/><text x="11.6760%" y="687.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (64,618,492 samples, 0.05%)</title><rect x="11.4629%" y="661" width="0.0471%" height="15" fill="rgb(236,164,45)" fg:x="15710198405" fg:w="64618492"/><text x="11.7129%" y="671.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock (35,688,904 samples, 0.03%)</title><rect x="11.4840%" y="645" width="0.0260%" height="15" fill="rgb(231,15,5)" fg:x="15739127993" fg:w="35688904"/><text x="11.7340%" y="655.50"></text></g><g><title>rand_chacha::guts::round (26,755,519 samples, 0.02%)</title><rect x="11.5704%" y="549" width="0.0195%" height="15" fill="rgb(252,35,15)" fg:x="15857509951" fg:w="26755519"/><text x="11.8204%" y="559.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (15,415,772 samples, 0.01%)</title><rect x="11.5786%" y="533" width="0.0112%" height="15" fill="rgb(248,181,18)" fg:x="15868849698" fg:w="15415772"/><text x="11.8286%" y="543.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (15,415,772 samples, 0.01%)</title><rect x="11.5786%" y="517" width="0.0112%" height="15" fill="rgb(233,39,42)" fg:x="15868849698" fg:w="15415772"/><text x="11.8286%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (15,415,772 samples, 0.01%)</title><rect x="11.5786%" y="501" width="0.0112%" height="15" fill="rgb(238,110,33)" fg:x="15868849698" fg:w="15415772"/><text x="11.8286%" y="511.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (54,640,049 samples, 0.04%)</title><rect x="11.5531%" y="597" width="0.0399%" height="15" fill="rgb(233,195,10)" fg:x="15833779022" fg:w="54640049"/><text x="11.8031%" y="607.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (54,640,049 samples, 0.04%)</title><rect x="11.5531%" y="581" width="0.0399%" height="15" fill="rgb(254,105,3)" fg:x="15833779022" fg:w="54640049"/><text x="11.8031%" y="591.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (54,640,049 samples, 0.04%)</title><rect x="11.5531%" y="565" width="0.0399%" height="15" fill="rgb(221,225,9)" fg:x="15833779022" fg:w="54640049"/><text x="11.8031%" y="575.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (58,358,328 samples, 0.04%)</title><rect x="11.5531%" y="629" width="0.0426%" height="15" fill="rgb(224,227,45)" fg:x="15833779022" fg:w="58358328"/><text x="11.8031%" y="639.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (58,358,328 samples, 0.04%)</title><rect x="11.5531%" y="613" width="0.0426%" height="15" fill="rgb(229,198,43)" fg:x="15833779022" fg:w="58358328"/><text x="11.8031%" y="623.50"></text></g><g><title>rand::rng::Rng::gen_range (106,889,750 samples, 0.08%)</title><rect x="11.5223%" y="805" width="0.0780%" height="15" fill="rgb(206,209,35)" fg:x="15791661663" fg:w="106889750"/><text x="11.7723%" y="815.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::sample_single (91,754,193 samples, 0.07%)</title><rect x="11.5334%" y="789" width="0.0669%" height="15" fill="rgb(245,195,53)" fg:x="15806797220" fg:w="91754193"/><text x="11.7834%" y="799.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u64&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (91,754,193 samples, 0.07%)</title><rect x="11.5334%" y="773" width="0.0669%" height="15" fill="rgb(240,92,26)" fg:x="15806797220" fg:w="91754193"/><text x="11.7834%" y="783.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u64&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single_inclusive (91,754,193 samples, 0.07%)</title><rect x="11.5334%" y="757" width="0.0669%" height="15" fill="rgb(207,40,23)" fg:x="15806797220" fg:w="91754193"/><text x="11.7834%" y="767.50"></text></g><g><title>rand::rng::Rng::gen (76,142,786 samples, 0.06%)</title><rect x="11.5448%" y="741" width="0.0556%" height="15" fill="rgb(223,111,35)" fg:x="15822408627" fg:w="76142786"/><text x="11.7948%" y="751.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u64&gt; for rand::distributions::Standard&gt;::sample (76,142,786 samples, 0.06%)</title><rect x="11.5448%" y="725" width="0.0556%" height="15" fill="rgb(229,147,28)" fg:x="15822408627" fg:w="76142786"/><text x="11.7948%" y="735.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (76,142,786 samples, 0.06%)</title><rect x="11.5448%" y="709" width="0.0556%" height="15" fill="rgb(211,29,28)" fg:x="15822408627" fg:w="76142786"/><text x="11.7948%" y="719.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (76,142,786 samples, 0.06%)</title><rect x="11.5448%" y="693" width="0.0556%" height="15" fill="rgb(228,72,33)" fg:x="15822408627" fg:w="76142786"/><text x="11.7948%" y="703.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (76,142,786 samples, 0.06%)</title><rect x="11.5448%" y="677" width="0.0556%" height="15" fill="rgb(205,214,31)" fg:x="15822408627" fg:w="76142786"/><text x="11.7948%" y="687.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (64,772,391 samples, 0.05%)</title><rect x="11.5531%" y="661" width="0.0473%" height="15" fill="rgb(224,111,15)" fg:x="15833779022" fg:w="64772391"/><text x="11.8031%" y="671.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (64,772,391 samples, 0.05%)</title><rect x="11.5531%" y="645" width="0.0473%" height="15" fill="rgb(253,21,26)" fg:x="15833779022" fg:w="64772391"/><text x="11.8031%" y="655.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (19,699,984 samples, 0.01%)</title><rect x="11.6679%" y="789" width="0.0144%" height="15" fill="rgb(245,139,43)" fg:x="15991119802" fg:w="19699984"/><text x="11.9179%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,rpq::pq::PriorityQueue&lt;u64&gt;&gt;&gt;&gt; (71,868,901 samples, 0.05%)</title><rect x="11.6899%" y="789" width="0.0524%" height="15" fill="rgb(252,170,7)" fg:x="16021254394" fg:w="71868901"/><text x="11.9399%" y="799.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (71,868,901 samples, 0.05%)</title><rect x="11.6899%" y="773" width="0.0524%" height="15" fill="rgb(231,118,14)" fg:x="16021254394" fg:w="71868901"/><text x="11.9399%" y="783.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read_unlock (71,868,901 samples, 0.05%)</title><rect x="11.6899%" y="757" width="0.0524%" height="15" fill="rgb(238,83,0)" fg:x="16021254394" fg:w="71868901"/><text x="11.9399%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (19,547,940 samples, 0.01%)</title><rect x="11.7280%" y="741" width="0.0143%" height="15" fill="rgb(221,39,39)" fg:x="16073575355" fg:w="19547940"/><text x="11.9780%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_sub (19,547,940 samples, 0.01%)</title><rect x="11.7280%" y="725" width="0.0143%" height="15" fill="rgb(222,119,46)" fg:x="16073575355" fg:w="19547940"/><text x="11.9780%" y="735.50"></text></g><g><title>rpq::bpq::BucketPriorityQueue::peek (43,507,307 samples, 0.03%)</title><rect x="11.7423%" y="789" width="0.0317%" height="15" fill="rgb(222,165,49)" fg:x="16093123295" fg:w="43507307"/><text x="11.9923%" y="799.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (32,564,095 samples, 0.02%)</title><rect x="11.7503%" y="773" width="0.0238%" height="15" fill="rgb(219,113,52)" fg:x="16104066507" fg:w="32564095"/><text x="12.0003%" y="783.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock (24,291,852 samples, 0.02%)</title><rect x="11.7563%" y="757" width="0.0177%" height="15" fill="rgb(214,7,15)" fg:x="16112338750" fg:w="24291852"/><text x="12.0063%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (13,952,181 samples, 0.01%)</title><rect x="11.7639%" y="741" width="0.0102%" height="15" fill="rgb(235,32,4)" fg:x="16122678421" fg:w="13952181"/><text x="12.0139%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (13,952,181 samples, 0.01%)</title><rect x="11.7639%" y="725" width="0.0102%" height="15" fill="rgb(238,90,54)" fg:x="16122678421" fg:w="13952181"/><text x="12.0139%" y="735.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (15,278,320 samples, 0.01%)</title><rect x="11.9204%" y="693" width="0.0111%" height="15" fill="rgb(213,208,19)" fg:x="16337212553" fg:w="15278320"/><text x="12.1704%" y="703.50"></text></g><g><title>core::ptr::read (15,278,320 samples, 0.01%)</title><rect x="11.9204%" y="677" width="0.0111%" height="15" fill="rgb(233,156,4)" fg:x="16337212553" fg:w="15278320"/><text x="12.1704%" y="687.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_up (85,884,111 samples, 0.06%)</title><rect x="11.9137%" y="709" width="0.0627%" height="15" fill="rgb(207,194,5)" fg:x="16328098703" fg:w="85884111"/><text x="12.1637%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::Hole&lt;rpq::schema::Item&lt;u64&gt;&gt;&gt; (61,491,941 samples, 0.04%)</title><rect x="11.9315%" y="693" width="0.0449%" height="15" fill="rgb(206,111,30)" fg:x="16352490873" fg:w="61491941"/><text x="12.1815%" y="703.50"></text></g><g><title>&lt;alloc::collections::binary_heap::Hole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (61,491,941 samples, 0.04%)</title><rect x="11.9315%" y="677" width="0.0449%" height="15" fill="rgb(243,70,54)" fg:x="16352490873" fg:w="61491941"/><text x="12.1815%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (61,491,941 samples, 0.04%)</title><rect x="11.9315%" y="661" width="0.0449%" height="15" fill="rgb(242,28,8)" fg:x="16352490873" fg:w="61491941"/><text x="12.1815%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (658,986,929 samples, 0.48%)</title><rect x="11.9764%" y="693" width="0.4808%" height="15" fill="rgb(219,106,18)" fg:x="16413982814" fg:w="658986929"/><text x="12.2264%" y="703.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::move_to (727,337,445 samples, 0.53%)</title><rect x="11.9764%" y="709" width="0.5307%" height="15" fill="rgb(244,222,10)" fg:x="16413982814" fg:w="727337445"/><text x="12.2264%" y="719.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (68,350,516 samples, 0.05%)</title><rect x="12.4572%" y="693" width="0.0499%" height="15" fill="rgb(236,179,52)" fg:x="17072969743" fg:w="68350516"/><text x="12.7072%" y="703.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (27,714,161 samples, 0.02%)</title><rect x="12.5071%" y="709" width="0.0202%" height="15" fill="rgb(213,23,39)" fg:x="17141320259" fg:w="27714161"/><text x="12.7571%" y="719.50"></text></g><g><title>core::ptr::read (27,714,161 samples, 0.02%)</title><rect x="12.5071%" y="693" width="0.0202%" height="15" fill="rgb(238,48,10)" fg:x="17141320259" fg:w="27714161"/><text x="12.7571%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (43,889,972 samples, 0.03%)</title><rect x="12.5273%" y="709" width="0.0320%" height="15" fill="rgb(251,196,23)" fg:x="17169034420" fg:w="43889972"/><text x="12.7773%" y="719.50"></text></g><g><title>core::cmp::PartialOrd::le (39,613,636 samples, 0.03%)</title><rect x="12.5304%" y="693" width="0.0289%" height="15" fill="rgb(250,152,24)" fg:x="17173310756" fg:w="39613636"/><text x="12.7804%" y="703.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_down_to_bottom (1,030,186,183 samples, 0.75%)</title><rect x="11.8486%" y="725" width="0.7517%" height="15" fill="rgb(209,150,17)" fg:x="16238852359" fg:w="1030186183"/><text x="12.0986%" y="735.50"></text></g><g><title>core::mem::drop (56,114,150 samples, 0.04%)</title><rect x="12.5593%" y="709" width="0.0409%" height="15" fill="rgb(234,202,34)" fg:x="17212924392" fg:w="56114150"/><text x="12.8093%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::Hole&lt;rpq::schema::Item&lt;u64&gt;&gt;&gt; (56,114,150 samples, 0.04%)</title><rect x="12.5593%" y="693" width="0.0409%" height="15" fill="rgb(253,148,53)" fg:x="17212924392" fg:w="56114150"/><text x="12.8093%" y="703.50"></text></g><g><title>&lt;alloc::collections::binary_heap::Hole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (56,114,150 samples, 0.04%)</title><rect x="12.5593%" y="677" width="0.0409%" height="15" fill="rgb(218,129,16)" fg:x="17212924392" fg:w="56114150"/><text x="12.8093%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (56,114,150 samples, 0.04%)</title><rect x="12.5593%" y="661" width="0.0409%" height="15" fill="rgb(216,85,19)" fg:x="17212924392" fg:w="56114150"/><text x="12.8093%" y="671.50"></text></g><g><title>core::ptr::read (59,280,505 samples, 0.04%)</title><rect x="12.6003%" y="661" width="0.0433%" height="15" fill="rgb(235,228,7)" fg:x="17269038542" fg:w="59280505"/><text x="12.8503%" y="671.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::pop (1,223,058,166 samples, 0.89%)</title><rect x="11.7834%" y="773" width="0.8924%" height="15" fill="rgb(245,175,0)" fg:x="16149447683" fg:w="1223058166"/><text x="12.0334%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,190,661,131 samples, 0.87%)</title><rect x="11.8070%" y="757" width="0.8688%" height="15" fill="rgb(208,168,36)" fg:x="16181844718" fg:w="1190661131"/><text x="12.0570%" y="767.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::pop::_{{closure}} (1,133,653,490 samples, 0.83%)</title><rect x="11.8486%" y="741" width="0.8272%" height="15" fill="rgb(246,171,24)" fg:x="16238852359" fg:w="1133653490"/><text x="12.0986%" y="751.50"></text></g><g><title>core::mem::swap (103,467,307 samples, 0.08%)</title><rect x="12.6003%" y="725" width="0.0755%" height="15" fill="rgb(215,142,24)" fg:x="17269038542" fg:w="103467307"/><text x="12.8503%" y="735.50"></text></g><g><title>core::ptr::swap_nonoverlapping (103,467,307 samples, 0.08%)</title><rect x="12.6003%" y="709" width="0.0755%" height="15" fill="rgb(250,187,7)" fg:x="17269038542" fg:w="103467307"/><text x="12.8503%" y="719.50"></text></g><g><title>core::ptr::swap_nonoverlapping_simple_untyped (103,467,307 samples, 0.08%)</title><rect x="12.6003%" y="693" width="0.0755%" height="15" fill="rgb(228,66,33)" fg:x="17269038542" fg:w="103467307"/><text x="12.8503%" y="703.50"></text></g><g><title>core::mem::swap_simple (103,467,307 samples, 0.08%)</title><rect x="12.6003%" y="677" width="0.0755%" height="15" fill="rgb(234,215,21)" fg:x="17269038542" fg:w="103467307"/><text x="12.8503%" y="687.50"></text></g><g><title>core::ptr::write (44,186,802 samples, 0.03%)</title><rect x="12.6435%" y="661" width="0.0322%" height="15" fill="rgb(222,191,20)" fg:x="17328319047" fg:w="44186802"/><text x="12.8935%" y="671.50"></text></g><g><title>rpq::pq::PriorityQueue&lt;T&gt;::dequeue (17,754,009 samples, 0.01%)</title><rect x="12.6882%" y="741" width="0.0130%" height="15" fill="rgb(245,79,54)" fg:x="17389578593" fg:w="17754009"/><text x="12.9382%" y="751.50"></text></g><g><title>futex_wait_queue (16,749,084 samples, 0.01%)</title><rect x="12.7035%" y="597" width="0.0122%" height="15" fill="rgb(240,10,37)" fg:x="17410472848" fg:w="16749084"/><text x="12.9535%" y="607.50"></text></g><g><title>schedule (16,749,084 samples, 0.01%)</title><rect x="12.7035%" y="581" width="0.0122%" height="15" fill="rgb(214,192,32)" fg:x="17410472848" fg:w="16749084"/><text x="12.9535%" y="591.50"></text></g><g><title>__schedule (16,749,084 samples, 0.01%)</title><rect x="12.7035%" y="565" width="0.0122%" height="15" fill="rgb(209,36,54)" fg:x="17410472848" fg:w="16749084"/><text x="12.9535%" y="575.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (24,022,909 samples, 0.02%)</title><rect x="12.7035%" y="725" width="0.0175%" height="15" fill="rgb(220,10,11)" fg:x="17410472848" fg:w="24022909"/><text x="12.9535%" y="735.50"></text></g><g><title>syscall (24,022,909 samples, 0.02%)</title><rect x="12.7035%" y="709" width="0.0175%" height="15" fill="rgb(221,106,17)" fg:x="17410472848" fg:w="24022909"/><text x="12.9535%" y="719.50"></text></g><g><title>entry_SYSCALL_64 (24,022,909 samples, 0.02%)</title><rect x="12.7035%" y="693" width="0.0175%" height="15" fill="rgb(251,142,44)" fg:x="17410472848" fg:w="24022909"/><text x="12.9535%" y="703.50"></text></g><g><title>do_syscall_64 (24,022,909 samples, 0.02%)</title><rect x="12.7035%" y="677" width="0.0175%" height="15" fill="rgb(238,13,15)" fg:x="17410472848" fg:w="24022909"/><text x="12.9535%" y="687.50"></text></g><g><title>__x64_sys_futex (24,022,909 samples, 0.02%)</title><rect x="12.7035%" y="661" width="0.0175%" height="15" fill="rgb(208,107,27)" fg:x="17410472848" fg:w="24022909"/><text x="12.9535%" y="671.50"></text></g><g><title>do_futex (24,022,909 samples, 0.02%)</title><rect x="12.7035%" y="645" width="0.0175%" height="15" fill="rgb(205,136,37)" fg:x="17410472848" fg:w="24022909"/><text x="12.9535%" y="655.50"></text></g><g><title>futex_wait (24,022,909 samples, 0.02%)</title><rect x="12.7035%" y="629" width="0.0175%" height="15" fill="rgb(250,205,27)" fg:x="17410472848" fg:w="24022909"/><text x="12.9535%" y="639.50"></text></g><g><title>__futex_wait (24,022,909 samples, 0.02%)</title><rect x="12.7035%" y="613" width="0.0175%" height="15" fill="rgb(210,80,43)" fg:x="17410472848" fg:w="24022909"/><text x="12.9535%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (76,147,522 samples, 0.06%)</title><rect x="12.6832%" y="773" width="0.0556%" height="15" fill="rgb(247,160,36)" fg:x="17382731427" fg:w="76147522"/><text x="12.9332%" y="783.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock (76,147,522 samples, 0.06%)</title><rect x="12.6832%" y="757" width="0.0556%" height="15" fill="rgb(234,13,49)" fg:x="17382731427" fg:w="76147522"/><text x="12.9332%" y="767.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock_contended (51,546,347 samples, 0.04%)</title><rect x="12.7012%" y="741" width="0.0376%" height="15" fill="rgb(234,122,0)" fg:x="17407332602" fg:w="51546347"/><text x="12.9512%" y="751.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::spin (24,383,192 samples, 0.02%)</title><rect x="12.7210%" y="725" width="0.0178%" height="15" fill="rgb(207,146,38)" fg:x="17434495757" fg:w="24383192"/><text x="12.9710%" y="735.50"></text></g><g><title>rpq::pq::PriorityQueue&lt;T&gt;::dequeue (1,328,373,428 samples, 0.97%)</title><rect x="11.7740%" y="789" width="0.9692%" height="15" fill="rgb(207,177,25)" fg:x="16136630602" fg:w="1328373428"/><text x="12.0240%" y="799.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (32,798,070 samples, 0.02%)</title><rect x="13.0159%" y="645" width="0.0239%" height="15" fill="rgb(211,178,42)" fg:x="17838615018" fg:w="32798070"/><text x="13.2659%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (94,665,108 samples, 0.07%)</title><rect x="12.9893%" y="661" width="0.0691%" height="15" fill="rgb(230,69,54)" fg:x="17802141144" fg:w="94665108"/><text x="13.2393%" y="671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (25,393,164 samples, 0.02%)</title><rect x="13.0398%" y="645" width="0.0185%" height="15" fill="rgb(214,135,41)" fg:x="17871413088" fg:w="25393164"/><text x="13.2898%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (731,411,521 samples, 0.53%)</title><rect x="13.4400%" y="645" width="0.5337%" height="15" fill="rgb(237,67,25)" fg:x="18419875954" fg:w="731411521"/><text x="13.6900%" y="655.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (2,012,656,591 samples, 1.47%)</title><rect x="12.8616%" y="709" width="1.4685%" height="15" fill="rgb(222,189,50)" fg:x="17627118108" fg:w="2012656591"/><text x="13.1116%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2,012,656,591 samples, 1.47%)</title><rect x="12.8616%" y="693" width="1.4685%" height="15" fill="rgb(245,148,34)" fg:x="17627118108" fg:w="2012656591"/><text x="13.1116%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2,012,656,591 samples, 1.47%)</title><rect x="12.8616%" y="677" width="1.4685%" height="15" fill="rgb(222,29,6)" fg:x="17627118108" fg:w="2012656591"/><text x="13.1116%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1,742,968,447 samples, 1.27%)</title><rect x="13.0583%" y="661" width="1.2718%" height="15" fill="rgb(221,189,43)" fg:x="17896806252" fg:w="1742968447"/><text x="13.3083%" y="671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (488,487,224 samples, 0.36%)</title><rect x="13.9737%" y="645" width="0.3564%" height="15" fill="rgb(207,36,27)" fg:x="19151287475" fg:w="488487224"/><text x="14.2237%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (24,515,349 samples, 0.02%)</title><rect x="14.3490%" y="597" width="0.0179%" height="15" fill="rgb(217,90,24)" fg:x="19665728848" fg:w="24515349"/><text x="14.5990%" y="607.50"></text></g><g><title>hashbrown::map::make_hash (2,088,856,583 samples, 1.52%)</title><rect x="12.8592%" y="741" width="1.5241%" height="15" fill="rgb(224,66,35)" fg:x="17623942705" fg:w="2088856583"/><text x="13.1092%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,088,856,583 samples, 1.52%)</title><rect x="12.8592%" y="725" width="1.5241%" height="15" fill="rgb(221,13,50)" fg:x="17623942705" fg:w="2088856583"/><text x="13.1092%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (65,253,293 samples, 0.05%)</title><rect x="14.3358%" y="709" width="0.0476%" height="15" fill="rgb(236,68,49)" fg:x="19647545995" fg:w="65253293"/><text x="14.5858%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (65,253,293 samples, 0.05%)</title><rect x="14.3358%" y="693" width="0.0476%" height="15" fill="rgb(229,146,28)" fg:x="19647545995" fg:w="65253293"/><text x="14.5858%" y="703.50"></text></g><g><title>core::hash::Hasher::write_u64 (65,253,293 samples, 0.05%)</title><rect x="14.3358%" y="677" width="0.0476%" height="15" fill="rgb(225,31,38)" fg:x="19647545995" fg:w="65253293"/><text x="14.5858%" y="687.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (65,253,293 samples, 0.05%)</title><rect x="14.3358%" y="661" width="0.0476%" height="15" fill="rgb(250,208,3)" fg:x="19647545995" fg:w="65253293"/><text x="14.5858%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (65,253,293 samples, 0.05%)</title><rect x="14.3358%" y="645" width="0.0476%" height="15" fill="rgb(246,54,23)" fg:x="19647545995" fg:w="65253293"/><text x="14.5858%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (65,253,293 samples, 0.05%)</title><rect x="14.3358%" y="629" width="0.0476%" height="15" fill="rgb(243,76,11)" fg:x="19647545995" fg:w="65253293"/><text x="14.5858%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (53,394,274 samples, 0.04%)</title><rect x="14.3444%" y="613" width="0.0390%" height="15" fill="rgb(245,21,50)" fg:x="19659405014" fg:w="53394274"/><text x="14.5944%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (22,555,091 samples, 0.02%)</title><rect x="14.3669%" y="597" width="0.0165%" height="15" fill="rgb(228,9,43)" fg:x="19690244197" fg:w="22555091"/><text x="14.6169%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (18,253,515 samples, 0.01%)</title><rect x="14.4074%" y="693" width="0.0133%" height="15" fill="rgb(208,100,47)" fg:x="19745725713" fg:w="18253515"/><text x="14.6574%" y="703.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (33,305,912 samples, 0.02%)</title><rect x="14.4207%" y="677" width="0.0243%" height="15" fill="rgb(232,26,8)" fg:x="19763984573" fg:w="33305912"/><text x="14.6707%" y="687.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (33,305,912 samples, 0.02%)</title><rect x="14.4207%" y="661" width="0.0243%" height="15" fill="rgb(216,166,38)" fg:x="19763984573" fg:w="33305912"/><text x="14.6707%" y="671.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (33,305,912 samples, 0.02%)</title><rect x="14.4207%" y="645" width="0.0243%" height="15" fill="rgb(251,202,51)" fg:x="19763984573" fg:w="33305912"/><text x="14.6707%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (33,305,912 samples, 0.02%)</title><rect x="14.4207%" y="629" width="0.0243%" height="15" fill="rgb(254,216,34)" fg:x="19763984573" fg:w="33305912"/><text x="14.6707%" y="639.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (18,839,272 samples, 0.01%)</title><rect x="14.4450%" y="677" width="0.0137%" height="15" fill="rgb(251,32,27)" fg:x="19797290485" fg:w="18839272"/><text x="14.6950%" y="687.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (18,839,272 samples, 0.01%)</title><rect x="14.4450%" y="661" width="0.0137%" height="15" fill="rgb(208,127,28)" fg:x="19797290485" fg:w="18839272"/><text x="14.6950%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (18,839,272 samples, 0.01%)</title><rect x="14.4450%" y="645" width="0.0137%" height="15" fill="rgb(224,137,22)" fg:x="19797290485" fg:w="18839272"/><text x="14.6950%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (18,839,272 samples, 0.01%)</title><rect x="14.4450%" y="629" width="0.0137%" height="15" fill="rgb(254,70,32)" fg:x="19797290485" fg:w="18839272"/><text x="14.6950%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (56,122,564 samples, 0.04%)</title><rect x="14.4207%" y="693" width="0.0409%" height="15" fill="rgb(229,75,37)" fg:x="19763984573" fg:w="56122564"/><text x="14.6707%" y="703.50"></text></g><g><title>hashbrown::raw::h2 (105,695,661 samples, 0.08%)</title><rect x="14.4617%" y="693" width="0.0771%" height="15" fill="rgb(252,64,23)" fg:x="19820107137" fg:w="105695661"/><text x="14.7117%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2,451,654,422 samples, 1.79%)</title><rect x="12.7508%" y="789" width="1.7888%" height="15" fill="rgb(232,162,48)" fg:x="17475372461" fg:w="2451654422"/><text x="13.0008%" y="799.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2,451,654,422 samples, 1.79%)</title><rect x="12.7508%" y="773" width="1.7888%" height="15" fill="rgb(246,160,12)" fg:x="17475372461" fg:w="2451654422"/><text x="13.0008%" y="783.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2,435,748,089 samples, 1.78%)</title><rect x="12.7624%" y="757" width="1.7772%" height="15" fill="rgb(247,166,0)" fg:x="17491278794" fg:w="2435748089"/><text x="13.0124%" y="767.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (214,227,595 samples, 0.16%)</title><rect x="14.3834%" y="741" width="0.1563%" height="15" fill="rgb(249,219,21)" fg:x="19712799288" fg:w="214227595"/><text x="14.6334%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (214,227,595 samples, 0.16%)</title><rect x="14.3834%" y="725" width="0.1563%" height="15" fill="rgb(205,209,3)" fg:x="19712799288" fg:w="214227595"/><text x="14.6334%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (214,227,595 samples, 0.16%)</title><rect x="14.3834%" y="709" width="0.1563%" height="15" fill="rgb(243,44,1)" fg:x="19712799288" fg:w="214227595"/><text x="14.6334%" y="719.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (13,781,658 samples, 0.01%)</title><rect x="14.5397%" y="773" width="0.0101%" height="15" fill="rgb(206,159,16)" fg:x="19927026883" fg:w="13781658"/><text x="14.7897%" y="783.50"></text></g><g><title>std::sync::poison::Flag::borrow (13,781,658 samples, 0.01%)</title><rect x="14.5397%" y="757" width="0.0101%" height="15" fill="rgb(244,77,30)" fg:x="19927026883" fg:w="13781658"/><text x="14.7897%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (30,088,722 samples, 0.02%)</title><rect x="14.6841%" y="757" width="0.0220%" height="15" fill="rgb(218,69,12)" fg:x="20124930562" fg:w="30088722"/><text x="14.9341%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (30,088,722 samples, 0.02%)</title><rect x="14.6841%" y="741" width="0.0220%" height="15" fill="rgb(212,87,7)" fg:x="20124930562" fg:w="30088722"/><text x="14.9341%" y="751.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (279,179,288 samples, 0.20%)</title><rect x="14.5397%" y="789" width="0.2037%" height="15" fill="rgb(245,114,25)" fg:x="19927026883" fg:w="279179288"/><text x="14.7897%" y="799.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read (265,397,630 samples, 0.19%)</title><rect x="14.5497%" y="773" width="0.1936%" height="15" fill="rgb(210,61,42)" fg:x="19940808541" fg:w="265397630"/><text x="14.7997%" y="783.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::is_read_lockable (40,621,211 samples, 0.03%)</title><rect x="14.7137%" y="757" width="0.0296%" height="15" fill="rgb(211,52,33)" fg:x="20165584960" fg:w="40621211"/><text x="14.9637%" y="767.50"></text></g><g><title>rpq::RPQ&lt;T&gt;::dequeue (4,314,499,323 samples, 3.15%)</title><rect x="11.6059%" y="805" width="3.1481%" height="15" fill="rgb(234,58,33)" fg:x="15906264991" fg:w="4314499323"/><text x="11.8559%" y="815.50">rpq..</text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock_contended (14,558,143 samples, 0.01%)</title><rect x="14.7434%" y="789" width="0.0106%" height="15" fill="rgb(220,115,36)" fg:x="20206206171" fg:w="14558143"/><text x="14.9934%" y="799.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::spin (14,558,143 samples, 0.01%)</title><rect x="14.7434%" y="773" width="0.0106%" height="15" fill="rgb(243,153,54)" fg:x="20206206171" fg:w="14558143"/><text x="14.9934%" y="783.50"></text></g><g><title>__rust_alloc (33,174,808 samples, 0.02%)</title><rect x="18.2229%" y="581" width="0.0242%" height="15" fill="rgb(251,47,18)" fg:x="24975004619" fg:w="33174808"/><text x="18.4729%" y="591.50"></text></g><g><title>__irqentry_text_end (31,603,925 samples, 0.02%)</title><rect x="19.9281%" y="533" width="0.0231%" height="15" fill="rgb(242,102,42)" fg:x="27311980562" fg:w="31603925"/><text x="20.1781%" y="543.50"></text></g><g><title>stackleak_erase (15,616,856 samples, 0.01%)</title><rect x="19.9398%" y="517" width="0.0114%" height="15" fill="rgb(234,31,38)" fg:x="27327967631" fg:w="15616856"/><text x="20.1898%" y="527.50"></text></g><g><title>asm_exc_page_fault (38,695,735 samples, 0.03%)</title><rect x="19.9568%" y="517" width="0.0282%" height="15" fill="rgb(221,117,51)" fg:x="27351309959" fg:w="38695735"/><text x="20.2068%" y="527.50"></text></g><g><title>down_write_killable (46,814,173 samples, 0.03%)</title><rect x="20.0204%" y="453" width="0.0342%" height="15" fill="rgb(212,20,18)" fg:x="27438456606" fg:w="46814173"/><text x="20.2704%" y="463.50"></text></g><g><title>rwsem_down_write_slowpath (38,884,432 samples, 0.03%)</title><rect x="20.0262%" y="437" width="0.0284%" height="15" fill="rgb(245,133,36)" fg:x="27446386347" fg:w="38884432"/><text x="20.2762%" y="447.50"></text></g><g><title>rwsem_spin_on_owner (34,943,949 samples, 0.03%)</title><rect x="20.0290%" y="421" width="0.0255%" height="15" fill="rgb(212,6,19)" fg:x="27450326830" fg:w="34943949"/><text x="20.2790%" y="431.50"></text></g><g><title>__pte_offset_map_lock (23,151,568 samples, 0.02%)</title><rect x="20.1137%" y="421" width="0.0169%" height="15" fill="rgb(218,1,36)" fg:x="27566357995" fg:w="23151568"/><text x="20.3637%" y="431.50"></text></g><g><title>_raw_spin_lock (19,248,546 samples, 0.01%)</title><rect x="20.1165%" y="405" width="0.0140%" height="15" fill="rgb(246,84,54)" fg:x="27570261017" fg:w="19248546"/><text x="20.3665%" y="415.50"></text></g><g><title>change_protection (77,667,790 samples, 0.06%)</title><rect x="20.0796%" y="437" width="0.0567%" height="15" fill="rgb(242,110,6)" fg:x="27519647095" fg:w="77667790"/><text x="20.3296%" y="447.50"></text></g><g><title>__perf_event__output_id_sample (24,296,286 samples, 0.02%)</title><rect x="20.2479%" y="373" width="0.0177%" height="15" fill="rgb(214,47,5)" fg:x="27750303007" fg:w="24296286"/><text x="20.4979%" y="383.50"></text></g><g><title>perf_output_copy (15,765,805 samples, 0.01%)</title><rect x="20.2541%" y="357" width="0.0115%" height="15" fill="rgb(218,159,25)" fg:x="27758833488" fg:w="15765805"/><text x="20.5041%" y="367.50"></text></g><g><title>__perf_event_header__init_id (56,413,059 samples, 0.04%)</title><rect x="20.2656%" y="373" width="0.0412%" height="15" fill="rgb(215,211,28)" fg:x="27774599293" fg:w="56413059"/><text x="20.5156%" y="383.50"></text></g><g><title>local_clock (23,312,172 samples, 0.02%)</title><rect x="20.2898%" y="357" width="0.0170%" height="15" fill="rgb(238,59,32)" fg:x="27807700180" fg:w="23312172"/><text x="20.5398%" y="367.50"></text></g><g><title>perf_output_begin (57,940,381 samples, 0.04%)</title><rect x="20.3123%" y="373" width="0.0423%" height="15" fill="rgb(226,82,3)" fg:x="27838618766" fg:w="57940381"/><text x="20.5623%" y="383.50"></text></g><g><title>perf_output_copy (96,278,845 samples, 0.07%)</title><rect x="20.3546%" y="373" width="0.0702%" height="15" fill="rgb(240,164,32)" fg:x="27896559147" fg:w="96278845"/><text x="20.6046%" y="383.50"></text></g><g><title>__output_copy (80,538,824 samples, 0.06%)</title><rect x="20.3661%" y="357" width="0.0588%" height="15" fill="rgb(232,46,7)" fg:x="27912299168" fg:w="80538824"/><text x="20.6161%" y="367.50"></text></g><g><title>memcpy (51,948,194 samples, 0.04%)</title><rect x="20.3870%" y="341" width="0.0379%" height="15" fill="rgb(229,129,53)" fg:x="27940889798" fg:w="51948194"/><text x="20.6370%" y="351.50"></text></g><g><title>perf_iterate_sb.constprop.0 (357,266,387 samples, 0.26%)</title><rect x="20.1698%" y="421" width="0.2607%" height="15" fill="rgb(234,188,29)" fg:x="27643246802" fg:w="357266387"/><text x="20.4198%" y="431.50"></text></g><g><title>perf_iterate_ctx (333,982,729 samples, 0.24%)</title><rect x="20.1868%" y="405" width="0.2437%" height="15" fill="rgb(246,141,4)" fg:x="27666530460" fg:w="333982729"/><text x="20.4368%" y="415.50"></text></g><g><title>perf_event_mmap_output (269,536,987 samples, 0.20%)</title><rect x="20.2338%" y="389" width="0.1967%" height="15" fill="rgb(229,23,39)" fg:x="27730976202" fg:w="269536987"/><text x="20.4838%" y="399.50"></text></g><g><title>perf_event_mmap (410,930,101 samples, 0.30%)</title><rect x="20.1390%" y="437" width="0.2998%" height="15" fill="rgb(206,12,3)" fg:x="27601081582" fg:w="410930101"/><text x="20.3890%" y="447.50"></text></g><g><title>mas_preallocate (34,961,799 samples, 0.03%)</title><rect x="20.5136%" y="405" width="0.0255%" height="15" fill="rgb(252,226,20)" fg:x="28114399307" fg:w="34961799"/><text x="20.7636%" y="415.50"></text></g><g><title>mas_wr_walk (16,062,848 samples, 0.01%)</title><rect x="20.5274%" y="389" width="0.0117%" height="15" fill="rgb(216,123,35)" fg:x="28133298258" fg:w="16062848"/><text x="20.7774%" y="399.50"></text></g><g><title>mas_destroy (18,994,508 samples, 0.01%)</title><rect x="20.5443%" y="389" width="0.0139%" height="15" fill="rgb(212,68,40)" fg:x="28156577352" fg:w="18994508"/><text x="20.7943%" y="399.50"></text></g><g><title>mas_wr_store_entry.isra.0 (54,159,763 samples, 0.04%)</title><rect x="20.5582%" y="389" width="0.0395%" height="15" fill="rgb(254,125,32)" fg:x="28175571860" fg:w="54159763"/><text x="20.8082%" y="399.50"></text></g><g><title>mas_store_prealloc (81,645,519 samples, 0.06%)</title><rect x="20.5416%" y="405" width="0.0596%" height="15" fill="rgb(253,97,22)" fg:x="28152764894" fg:w="81645519"/><text x="20.7916%" y="415.50"></text></g><g><title>mt_find (21,787,854 samples, 0.02%)</title><rect x="20.6011%" y="405" width="0.0159%" height="15" fill="rgb(241,101,14)" fg:x="28234410413" fg:w="21787854"/><text x="20.8511%" y="415.50"></text></g><g><title>vma_adjust_trans_huge (18,955,806 samples, 0.01%)</title><rect x="20.6198%" y="405" width="0.0138%" height="15" fill="rgb(238,103,29)" fg:x="28260052724" fg:w="18955806"/><text x="20.8698%" y="415.50"></text></g><g><title>vma_complete (38,713,495 samples, 0.03%)</title><rect x="20.6337%" y="405" width="0.0282%" height="15" fill="rgb(233,195,47)" fg:x="28279008530" fg:w="38713495"/><text x="20.8837%" y="415.50"></text></g><g><title>vma_modify (317,113,860 samples, 0.23%)</title><rect x="20.4500%" y="437" width="0.2314%" height="15" fill="rgb(246,218,30)" fg:x="28027321813" fg:w="317113860"/><text x="20.7000%" y="447.50"></text></g><g><title>vma_merge (308,925,091 samples, 0.23%)</title><rect x="20.4560%" y="421" width="0.2254%" height="15" fill="rgb(219,145,47)" fg:x="28035510582" fg:w="308925091"/><text x="20.7060%" y="431.50"></text></g><g><title>vma_prepare (26,713,648 samples, 0.02%)</title><rect x="20.6619%" y="405" width="0.0195%" height="15" fill="rgb(243,12,26)" fg:x="28317722025" fg:w="26713648"/><text x="20.9119%" y="415.50"></text></g><g><title>mprotect_fixup (855,248,956 samples, 0.62%)</title><rect x="20.0601%" y="453" width="0.6240%" height="15" fill="rgb(214,87,16)" fg:x="27492940177" fg:w="855248956"/><text x="20.3101%" y="463.50"></text></g><g><title>__x64_sys_mprotect (981,405,826 samples, 0.72%)</title><rect x="19.9991%" y="485" width="0.7161%" height="15" fill="rgb(208,99,42)" fg:x="27409262585" fg:w="981405826"/><text x="20.2491%" y="495.50"></text></g><g><title>do_mprotect_pkey (981,405,826 samples, 0.72%)</title><rect x="19.9991%" y="469" width="0.7161%" height="15" fill="rgb(253,99,2)" fg:x="27409262585" fg:w="981405826"/><text x="20.2491%" y="479.50"></text></g><g><title>up_write (19,311,981 samples, 0.01%)</title><rect x="20.7011%" y="453" width="0.0141%" height="15" fill="rgb(220,168,23)" fg:x="28371356430" fg:w="19311981"/><text x="20.9511%" y="463.50"></text></g><g><title>entry_SYSCALL_64 (1,027,919,629 samples, 0.75%)</title><rect x="19.9850%" y="517" width="0.7500%" height="15" fill="rgb(242,38,24)" fg:x="27390005694" fg:w="1027919629"/><text x="20.2350%" y="527.50"></text></g><g><title>do_syscall_64 (1,020,033,761 samples, 0.74%)</title><rect x="19.9908%" y="501" width="0.7443%" height="15" fill="rgb(225,182,9)" fg:x="27397891562" fg:w="1020033761"/><text x="20.2408%" y="511.50"></text></g><g><title>syscall_exit_to_user_mode (27,256,912 samples, 0.02%)</title><rect x="20.7151%" y="485" width="0.0199%" height="15" fill="rgb(243,178,37)" fg:x="28390668411" fg:w="27256912"/><text x="20.9651%" y="495.50"></text></g><g><title>error_entry (19,719,087 samples, 0.01%)</title><rect x="20.7350%" y="517" width="0.0144%" height="15" fill="rgb(232,139,19)" fg:x="28417925323" fg:w="19719087"/><text x="20.9850%" y="527.50"></text></g><g><title>__mprotect (1,117,847,603 samples, 0.82%)</title><rect x="19.9511%" y="533" width="0.8156%" height="15" fill="rgb(225,201,24)" fg:x="27343584487" fg:w="1117847603"/><text x="20.2011%" y="543.50"></text></g><g><title>syscall_return_via_sysret (23,787,680 samples, 0.02%)</title><rect x="20.7494%" y="517" width="0.0174%" height="15" fill="rgb(221,47,46)" fg:x="28437644410" fg:w="23787680"/><text x="20.9994%" y="527.50"></text></g><g><title>stackleak_erase (15,677,754 samples, 0.01%)</title><rect x="20.7553%" y="501" width="0.0114%" height="15" fill="rgb(249,23,13)" fg:x="28445754336" fg:w="15677754"/><text x="21.0053%" y="511.50"></text></g><g><title>__folio_throttle_swaprate (16,090,767 samples, 0.01%)</title><rect x="20.8159%" y="453" width="0.0117%" height="15" fill="rgb(219,9,5)" fg:x="28528774352" fg:w="16090767"/><text x="21.0659%" y="463.50"></text></g><g><title>blk_cgroup_congested (16,090,767 samples, 0.01%)</title><rect x="20.8159%" y="437" width="0.0117%" height="15" fill="rgb(254,171,16)" fg:x="28528774352" fg:w="16090767"/><text x="21.0659%" y="447.50"></text></g><g><title>get_mem_cgroup_from_mm (15,002,649 samples, 0.01%)</title><rect x="20.8422%" y="437" width="0.0109%" height="15" fill="rgb(230,171,20)" fg:x="28564820547" fg:w="15002649"/><text x="21.0922%" y="447.50"></text></g><g><title>mem_cgroup_commit_charge (15,762,412 samples, 0.01%)</title><rect x="20.8532%" y="437" width="0.0115%" height="15" fill="rgb(210,71,41)" fg:x="28579823196" fg:w="15762412"/><text x="21.1032%" y="447.50"></text></g><g><title>__mem_cgroup_charge (58,191,202 samples, 0.04%)</title><rect x="20.8363%" y="453" width="0.0425%" height="15" fill="rgb(206,173,20)" fg:x="28556688539" fg:w="58191202"/><text x="21.0863%" y="463.50"></text></g><g><title>try_charge_memcg (19,294,133 samples, 0.01%)</title><rect x="20.8647%" y="437" width="0.0141%" height="15" fill="rgb(233,88,34)" fg:x="28595585608" fg:w="19294133"/><text x="21.1147%" y="447.50"></text></g><g><title>folio_add_lru (47,903,653 samples, 0.03%)</title><rect x="20.8927%" y="453" width="0.0350%" height="15" fill="rgb(223,209,46)" fg:x="28634036997" fg:w="47903653"/><text x="21.1427%" y="463.50"></text></g><g><title>folio_batch_move_lru (36,516,583 samples, 0.03%)</title><rect x="20.9010%" y="437" width="0.0266%" height="15" fill="rgb(250,43,18)" fg:x="28645424067" fg:w="36516583"/><text x="21.1510%" y="447.50"></text></g><g><title>lru_add_fn (32,724,976 samples, 0.02%)</title><rect x="20.9038%" y="421" width="0.0239%" height="15" fill="rgb(208,13,10)" fg:x="28649215674" fg:w="32724976"/><text x="21.1538%" y="431.50"></text></g><g><title>lru_gen_add_folio (24,656,383 samples, 0.02%)</title><rect x="20.9097%" y="405" width="0.0180%" height="15" fill="rgb(212,200,36)" fg:x="28657284267" fg:w="24656383"/><text x="21.1597%" y="415.50"></text></g><g><title>__mod_memcg_lruvec_state (17,060,666 samples, 0.01%)</title><rect x="20.9152%" y="389" width="0.0124%" height="15" fill="rgb(225,90,30)" fg:x="28664879984" fg:w="17060666"/><text x="21.1652%" y="399.50"></text></g><g><title>__list_del_entry_valid_or_report (30,487,266 samples, 0.02%)</title><rect x="20.9699%" y="373" width="0.0222%" height="15" fill="rgb(236,182,39)" fg:x="28739775718" fg:w="30487266"/><text x="21.2199%" y="383.50"></text></g><g><title>__rmqueue_pcplist (54,194,859 samples, 0.04%)</title><rect x="20.9612%" y="389" width="0.0395%" height="15" fill="rgb(212,144,35)" fg:x="28727905886" fg:w="54194859"/><text x="21.2112%" y="399.50"></text></g><g><title>__handle_mm_fault (456,512,514 samples, 0.33%)</title><rect x="20.7873%" y="469" width="0.3331%" height="15" fill="rgb(228,63,44)" fg:x="28489594571" fg:w="456512514"/><text x="21.0373%" y="479.50"></text></g><g><title>vma_alloc_folio_noprof (237,782,395 samples, 0.17%)</title><rect x="20.9469%" y="453" width="0.1735%" height="15" fill="rgb(228,109,6)" fg:x="28708324690" fg:w="237782395"/><text x="21.1969%" y="463.50"></text></g><g><title>alloc_pages_mpol_noprof (237,782,395 samples, 0.17%)</title><rect x="20.9469%" y="437" width="0.1735%" height="15" fill="rgb(238,117,24)" fg:x="28708324690" fg:w="237782395"/><text x="21.1969%" y="447.50"></text></g><g><title>__alloc_pages_noprof (229,737,749 samples, 0.17%)</title><rect x="20.9528%" y="421" width="0.1676%" height="15" fill="rgb(242,26,26)" fg:x="28716369336" fg:w="229737749"/><text x="21.2028%" y="431.50"></text></g><g><title>get_page_from_freelist (225,753,201 samples, 0.16%)</title><rect x="20.9557%" y="405" width="0.1647%" height="15" fill="rgb(221,92,48)" fg:x="28720353884" fg:w="225753201"/><text x="21.2057%" y="415.50"></text></g><g><title>post_alloc_hook (164,006,340 samples, 0.12%)</title><rect x="21.0008%" y="389" width="0.1197%" height="15" fill="rgb(209,209,32)" fg:x="28782100745" fg:w="164006340"/><text x="21.2508%" y="399.50"></text></g><g><title>memchr_inv (164,006,340 samples, 0.12%)</title><rect x="21.0008%" y="373" width="0.1197%" height="15" fill="rgb(221,70,22)" fg:x="28782100745" fg:w="164006340"/><text x="21.2508%" y="383.50"></text></g><g><title>handle_mm_fault (488,027,178 samples, 0.36%)</title><rect x="20.7759%" y="485" width="0.3561%" height="15" fill="rgb(248,145,5)" fg:x="28473907939" fg:w="488027178"/><text x="21.0259%" y="495.50"></text></g><g><title>count_memcg_events.constprop.0 (15,828,032 samples, 0.01%)</title><rect x="21.1204%" y="469" width="0.0115%" height="15" fill="rgb(226,116,26)" fg:x="28946107085" fg:w="15828032"/><text x="21.3704%" y="479.50"></text></g><g><title>__count_memcg_events (15,828,032 samples, 0.01%)</title><rect x="21.1204%" y="453" width="0.0115%" height="15" fill="rgb(244,5,17)" fg:x="28946107085" fg:w="15828032"/><text x="21.3704%" y="463.50"></text></g><g><title>lock_vma_under_rcu (28,317,187 samples, 0.02%)</title><rect x="21.1320%" y="485" width="0.0207%" height="15" fill="rgb(252,159,33)" fg:x="28961935117" fg:w="28317187"/><text x="21.3820%" y="495.50"></text></g><g><title>mas_walk (20,269,371 samples, 0.01%)</title><rect x="21.1378%" y="469" width="0.0148%" height="15" fill="rgb(206,71,0)" fg:x="28969982933" fg:w="20269371"/><text x="21.3878%" y="479.50"></text></g><g><title>exc_page_fault (548,035,205 samples, 0.40%)</title><rect x="20.7668%" y="517" width="0.3999%" height="15" fill="rgb(233,118,54)" fg:x="28461432090" fg:w="548035205"/><text x="21.0168%" y="527.50"></text></g><g><title>do_user_addr_fault (548,035,205 samples, 0.40%)</title><rect x="20.7668%" y="501" width="0.3999%" height="15" fill="rgb(234,83,48)" fg:x="28461432090" fg:w="548035205"/><text x="21.0168%" y="511.50"></text></g><g><title>up_read (19,214,991 samples, 0.01%)</title><rect x="21.1526%" y="485" width="0.0140%" height="15" fill="rgb(228,3,54)" fg:x="28990252304" fg:w="19214991"/><text x="21.4026%" y="495.50"></text></g><g><title>asm_exc_page_fault (551,798,224 samples, 0.40%)</title><rect x="20.7668%" y="533" width="0.4026%" height="15" fill="rgb(226,155,13)" fg:x="28461432090" fg:w="551798224"/><text x="21.0168%" y="543.50"></text></g><g><title>[libc.so.6] (1,803,416,891 samples, 1.32%)</title><rect x="19.8564%" y="549" width="1.3159%" height="15" fill="rgb(241,28,37)" fg:x="27213727247" fg:w="1803416891"/><text x="20.1064%" y="559.50"></text></g><g><title>__irqentry_text_end (15,499,696 samples, 0.01%)</title><rect x="21.1723%" y="549" width="0.0113%" height="15" fill="rgb(233,93,10)" fg:x="29017144138" fg:w="15499696"/><text x="21.4223%" y="559.50"></text></g><g><title>__lruvec_stat_mod_folio (15,524,606 samples, 0.01%)</title><rect x="21.2239%" y="469" width="0.0113%" height="15" fill="rgb(225,113,19)" fg:x="29087974037" fg:w="15524606"/><text x="21.4739%" y="479.50"></text></g><g><title>get_mem_cgroup_from_mm (18,958,334 samples, 0.01%)</title><rect x="21.2381%" y="453" width="0.0138%" height="15" fill="rgb(241,2,18)" fg:x="29107378982" fg:w="18958334"/><text x="21.4881%" y="463.50"></text></g><g><title>__count_memcg_events (15,718,438 samples, 0.01%)</title><rect x="21.2547%" y="421" width="0.0115%" height="15" fill="rgb(228,207,21)" fg:x="29130085982" fg:w="15718438"/><text x="21.5047%" y="431.50"></text></g><g><title>mem_cgroup_commit_charge (23,348,775 samples, 0.02%)</title><rect x="21.2519%" y="453" width="0.0170%" height="15" fill="rgb(213,211,35)" fg:x="29126337316" fg:w="23348775"/><text x="21.5019%" y="463.50"></text></g><g><title>mem_cgroup_charge_statistics (19,600,109 samples, 0.01%)</title><rect x="21.2547%" y="437" width="0.0143%" height="15" fill="rgb(209,83,10)" fg:x="29130085982" fg:w="19600109"/><text x="21.5047%" y="447.50"></text></g><g><title>__mem_cgroup_charge (63,814,618 samples, 0.05%)</title><rect x="21.2353%" y="469" width="0.0466%" height="15" fill="rgb(209,164,1)" fg:x="29103498643" fg:w="63814618"/><text x="21.4853%" y="479.50"></text></g><g><title>try_charge_memcg (17,627,170 samples, 0.01%)</title><rect x="21.2690%" y="453" width="0.0129%" height="15" fill="rgb(213,184,43)" fg:x="29149686091" fg:w="17627170"/><text x="21.5190%" y="463.50"></text></g><g><title>folio_add_lru (26,049,614 samples, 0.02%)</title><rect x="21.2848%" y="469" width="0.0190%" height="15" fill="rgb(231,61,34)" fg:x="29171377350" fg:w="26049614"/><text x="21.5348%" y="479.50"></text></g><g><title>folio_batch_move_lru (18,647,013 samples, 0.01%)</title><rect x="21.2902%" y="453" width="0.0136%" height="15" fill="rgb(235,75,3)" fg:x="29178779951" fg:w="18647013"/><text x="21.5402%" y="463.50"></text></g><g><title>lru_add_fn (18,647,013 samples, 0.01%)</title><rect x="21.2902%" y="437" width="0.0136%" height="15" fill="rgb(220,106,47)" fg:x="29178779951" fg:w="18647013"/><text x="21.5402%" y="447.50"></text></g><g><title>lru_gen_add_folio (18,647,013 samples, 0.01%)</title><rect x="21.2902%" y="421" width="0.0136%" height="15" fill="rgb(210,196,33)" fg:x="29178779951" fg:w="18647013"/><text x="21.5402%" y="431.50"></text></g><g><title>__rmqueue_pcplist (19,041,401 samples, 0.01%)</title><rect x="21.3124%" y="405" width="0.0139%" height="15" fill="rgb(229,154,42)" fg:x="29209187915" fg:w="19041401"/><text x="21.5624%" y="415.50"></text></g><g><title>__handle_mm_fault (227,981,919 samples, 0.17%)</title><rect x="21.2041%" y="485" width="0.1663%" height="15" fill="rgb(228,114,26)" fg:x="29060776737" fg:w="227981919"/><text x="21.4541%" y="495.50"></text></g><g><title>vma_alloc_folio_noprof (83,832,678 samples, 0.06%)</title><rect x="21.3093%" y="469" width="0.0612%" height="15" fill="rgb(208,144,1)" fg:x="29204925978" fg:w="83832678"/><text x="21.5593%" y="479.50"></text></g><g><title>alloc_pages_mpol_noprof (83,832,678 samples, 0.06%)</title><rect x="21.3093%" y="453" width="0.0612%" height="15" fill="rgb(239,112,37)" fg:x="29204925978" fg:w="83832678"/><text x="21.5593%" y="463.50"></text></g><g><title>__alloc_pages_noprof (83,832,678 samples, 0.06%)</title><rect x="21.3093%" y="437" width="0.0612%" height="15" fill="rgb(210,96,50)" fg:x="29204925978" fg:w="83832678"/><text x="21.5593%" y="447.50"></text></g><g><title>get_page_from_freelist (83,832,678 samples, 0.06%)</title><rect x="21.3093%" y="421" width="0.0612%" height="15" fill="rgb(222,178,2)" fg:x="29204925978" fg:w="83832678"/><text x="21.5593%" y="431.50"></text></g><g><title>post_alloc_hook (56,729,425 samples, 0.04%)</title><rect x="21.3290%" y="405" width="0.0414%" height="15" fill="rgb(226,74,18)" fg:x="29232029231" fg:w="56729425"/><text x="21.5790%" y="415.50"></text></g><g><title>memchr_inv (49,163,046 samples, 0.04%)</title><rect x="21.3346%" y="389" width="0.0359%" height="15" fill="rgb(225,67,54)" fg:x="29239595610" fg:w="49163046"/><text x="21.5846%" y="399.50"></text></g><g><title>asm_exc_page_fault (276,789,548 samples, 0.20%)</title><rect x="21.1862%" y="549" width="0.2020%" height="15" fill="rgb(251,92,32)" fg:x="29036311789" fg:w="276789548"/><text x="21.4362%" y="559.50"></text></g><g><title>exc_page_fault (276,789,548 samples, 0.20%)</title><rect x="21.1862%" y="533" width="0.2020%" height="15" fill="rgb(228,149,22)" fg:x="29036311789" fg:w="276789548"/><text x="21.4362%" y="543.50"></text></g><g><title>do_user_addr_fault (276,789,548 samples, 0.20%)</title><rect x="21.1862%" y="517" width="0.2020%" height="15" fill="rgb(243,54,13)" fg:x="29036311789" fg:w="276789548"/><text x="21.4362%" y="527.50"></text></g><g><title>handle_mm_fault (256,391,188 samples, 0.19%)</title><rect x="21.2011%" y="501" width="0.1871%" height="15" fill="rgb(243,180,28)" fg:x="29056710149" fg:w="256391188"/><text x="21.4511%" y="511.50"></text></g><g><title>count_memcg_events.constprop.0 (20,456,950 samples, 0.01%)</title><rect x="21.3733%" y="485" width="0.0149%" height="15" fill="rgb(208,167,24)" fg:x="29292644387" fg:w="20456950"/><text x="21.6233%" y="495.50"></text></g><g><title>__count_memcg_events (16,643,280 samples, 0.01%)</title><rect x="21.3761%" y="469" width="0.0121%" height="15" fill="rgb(245,73,45)" fg:x="29296458057" fg:w="16643280"/><text x="21.6261%" y="479.50"></text></g><g><title>[libc.so.6] (3,731,254,296 samples, 2.72%)</title><rect x="18.6683%" y="565" width="2.7225%" height="15" fill="rgb(237,203,48)" fg:x="25585349889" fg:w="3731254296"/><text x="18.9183%" y="575.50">[l..</text></g><g><title>__vdso_clock_gettime (18,620,306 samples, 0.01%)</title><rect x="21.3908%" y="565" width="0.0136%" height="15" fill="rgb(211,197,16)" fg:x="29316604542" fg:w="18620306"/><text x="21.6408%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,407,947,902 samples, 3.22%)</title><rect x="18.1944%" y="677" width="3.2162%" height="15" fill="rgb(243,99,51)" fg:x="24935852802" fg:w="4407947902"/><text x="18.4444%" y="687.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,407,947,902 samples, 3.22%)</title><rect x="18.1944%" y="661" width="3.2162%" height="15" fill="rgb(215,123,29)" fg:x="24935852802" fg:w="4407947902"/><text x="18.4444%" y="671.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4,407,947,902 samples, 3.22%)</title><rect x="18.1944%" y="645" width="3.2162%" height="15" fill="rgb(239,186,37)" fg:x="24935852802" fg:w="4407947902"/><text x="18.4444%" y="655.50">all..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,375,964,376 samples, 3.19%)</title><rect x="18.2177%" y="629" width="3.1929%" height="15" fill="rgb(252,136,39)" fg:x="24967836328" fg:w="4375964376"/><text x="18.4677%" y="639.50">&lt;al..</text></g><g><title>alloc::alloc::Global::alloc_impl (4,375,964,376 samples, 3.19%)</title><rect x="18.2177%" y="613" width="3.1929%" height="15" fill="rgb(223,213,32)" fg:x="24967836328" fg:w="4375964376"/><text x="18.4677%" y="623.50">all..</text></g><g><title>alloc::alloc::alloc (4,375,964,376 samples, 3.19%)</title><rect x="18.2177%" y="597" width="3.1929%" height="15" fill="rgb(233,115,5)" fg:x="24967836328" fg:w="4375964376"/><text x="18.4677%" y="607.50">all..</text></g><g><title>malloc (4,320,900,919 samples, 3.15%)</title><rect x="18.2579%" y="581" width="3.1527%" height="15" fill="rgb(207,226,44)" fg:x="25022899785" fg:w="4320900919"/><text x="18.5079%" y="591.50">mal..</text></g><g><title>[libc.so.6] (183,161,941 samples, 0.13%)</title><rect x="21.4106%" y="645" width="0.1336%" height="15" fill="rgb(208,126,0)" fg:x="29343800704" fg:w="183161941"/><text x="21.6606%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4,629,395,581 samples, 3.38%)</title><rect x="18.1753%" y="757" width="3.3778%" height="15" fill="rgb(244,66,21)" fg:x="24909699865" fg:w="4629395581"/><text x="18.4253%" y="767.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,603,242,644 samples, 3.36%)</title><rect x="18.1944%" y="741" width="3.3587%" height="15" fill="rgb(222,97,12)" fg:x="24935852802" fg:w="4603242644"/><text x="18.4444%" y="751.50">&lt;al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4,603,242,644 samples, 3.36%)</title><rect x="18.1944%" y="725" width="3.3587%" height="15" fill="rgb(219,213,19)" fg:x="24935852802" fg:w="4603242644"/><text x="18.4444%" y="735.50">all..</text></g><g><title>alloc::slice::hack::to_vec (4,603,242,644 samples, 3.36%)</title><rect x="18.1944%" y="709" width="3.3587%" height="15" fill="rgb(252,169,30)" fg:x="24935852802" fg:w="4603242644"/><text x="18.4444%" y="719.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4,603,242,644 samples, 3.36%)</title><rect x="18.1944%" y="693" width="3.3587%" height="15" fill="rgb(206,32,51)" fg:x="24935852802" fg:w="4603242644"/><text x="18.4444%" y="703.50">&lt;T ..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (195,294,742 samples, 0.14%)</title><rect x="21.4106%" y="677" width="0.1425%" height="15" fill="rgb(250,172,42)" fg:x="29343800704" fg:w="195294742"/><text x="21.6606%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (195,294,742 samples, 0.14%)</title><rect x="21.4106%" y="661" width="0.1425%" height="15" fill="rgb(209,34,43)" fg:x="29343800704" fg:w="195294742"/><text x="21.6606%" y="671.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (4,835,432,853 samples, 3.53%)</title><rect x="18.0316%" y="773" width="3.5282%" height="15" fill="rgb(223,11,35)" fg:x="24712797254" fg:w="4835432853"/><text x="18.2816%" y="783.50">&lt;co..</text></g><g><title>&lt;rpq::schema::Item&lt;T&gt; as core::clone::Clone&gt;::clone (4,965,868,115 samples, 3.62%)</title><rect x="17.9513%" y="789" width="3.6233%" height="15" fill="rgb(251,219,26)" fg:x="24602759246" fg:w="4965868115"/><text x="18.2013%" y="799.50">&lt;rpq..</text></g><g><title>core::ptr::drop_in_place&lt;rpq::schema::Item&lt;u64&gt;&gt; (242,290,758 samples, 0.18%)</title><rect x="21.5914%" y="789" width="0.1768%" height="15" fill="rgb(231,119,3)" fg:x="29591660308" fg:w="242290758"/><text x="21.8414%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (242,290,758 samples, 0.18%)</title><rect x="21.5914%" y="773" width="0.1768%" height="15" fill="rgb(216,97,11)" fg:x="29591660308" fg:w="242290758"/><text x="21.8414%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (28,204,613 samples, 0.02%)</title><rect x="21.7477%" y="757" width="0.0206%" height="15" fill="rgb(223,59,9)" fg:x="29805746453" fg:w="28204613"/><text x="21.9977%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (28,204,613 samples, 0.02%)</title><rect x="21.7477%" y="741" width="0.0206%" height="15" fill="rgb(233,93,31)" fg:x="29805746453" fg:w="28204613"/><text x="21.9977%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (28,204,613 samples, 0.02%)</title><rect x="21.7477%" y="725" width="0.0206%" height="15" fill="rgb(239,81,33)" fg:x="29805746453" fg:w="28204613"/><text x="21.9977%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28,204,613 samples, 0.02%)</title><rect x="21.7477%" y="709" width="0.0206%" height="15" fill="rgb(213,120,34)" fg:x="29805746453" fg:w="28204613"/><text x="21.9977%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (28,204,613 samples, 0.02%)</title><rect x="21.7477%" y="693" width="0.0206%" height="15" fill="rgb(243,49,53)" fg:x="29805746453" fg:w="28204613"/><text x="21.9977%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (28,204,613 samples, 0.02%)</title><rect x="21.7477%" y="677" width="0.0206%" height="15" fill="rgb(247,216,33)" fg:x="29805746453" fg:w="28204613"/><text x="21.9977%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,rpq::pq::PriorityQueue&lt;u64&gt;&gt;&gt;&gt; (1,337,779,624 samples, 0.98%)</title><rect x="21.7682%" y="789" width="0.9761%" height="15" fill="rgb(226,26,14)" fg:x="29833951066" fg:w="1337779624"/><text x="22.0182%" y="799.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,337,779,624 samples, 0.98%)</title><rect x="21.7682%" y="773" width="0.9761%" height="15" fill="rgb(215,49,53)" fg:x="29833951066" fg:w="1337779624"/><text x="22.0182%" y="783.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read_unlock (1,337,779,624 samples, 0.98%)</title><rect x="21.7682%" y="757" width="0.9761%" height="15" fill="rgb(245,162,40)" fg:x="29833951066" fg:w="1337779624"/><text x="22.0182%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (26,970,189 samples, 0.02%)</title><rect x="22.7247%" y="741" width="0.0197%" height="15" fill="rgb(229,68,17)" fg:x="31144760501" fg:w="26970189"/><text x="22.9747%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_sub (26,970,189 samples, 0.02%)</title><rect x="22.7247%" y="725" width="0.0197%" height="15" fill="rgb(213,182,10)" fg:x="31144760501" fg:w="26970189"/><text x="22.9747%" y="735.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::reborrow (268,142,898 samples, 0.20%)</title><rect x="23.3652%" y="741" width="0.1956%" height="15" fill="rgb(245,125,30)" fg:x="32022625523" fg:w="268142898"/><text x="23.6152%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (16,022,748 samples, 0.01%)</title><rect x="23.6396%" y="693" width="0.0117%" height="15" fill="rgb(232,202,2)" fg:x="32398726268" fg:w="16022748"/><text x="23.8896%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16,022,748 samples, 0.01%)</title><rect x="23.6396%" y="677" width="0.0117%" height="15" fill="rgb(237,140,51)" fg:x="32398726268" fg:w="16022748"/><text x="23.8896%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (158,307,716 samples, 0.12%)</title><rect x="23.5608%" y="741" width="0.1155%" height="15" fill="rgb(236,157,25)" fg:x="32290768421" fg:w="158307716"/><text x="23.8108%" y="751.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (158,307,716 samples, 0.12%)</title><rect x="23.5608%" y="725" width="0.1155%" height="15" fill="rgb(219,209,0)" fg:x="32290768421" fg:w="158307716"/><text x="23.8108%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (158,307,716 samples, 0.12%)</title><rect x="23.5608%" y="709" width="0.1155%" height="15" fill="rgb(240,116,54)" fg:x="32290768421" fg:w="158307716"/><text x="23.8108%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (30,461,065 samples, 0.02%)</title><rect x="23.6541%" y="693" width="0.0222%" height="15" fill="rgb(216,10,36)" fg:x="32418615072" fg:w="30461065"/><text x="23.9041%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (445,712,420 samples, 0.33%)</title><rect x="23.3652%" y="773" width="0.3252%" height="15" fill="rgb(222,72,44)" fg:x="32022625523" fg:w="445712420"/><text x="23.6152%" y="783.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (445,712,420 samples, 0.33%)</title><rect x="23.3652%" y="757" width="0.3252%" height="15" fill="rgb(232,159,9)" fg:x="32022625523" fg:w="445712420"/><text x="23.6152%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (19,261,806 samples, 0.01%)</title><rect x="23.6764%" y="741" width="0.0141%" height="15" fill="rgb(210,39,32)" fg:x="32449076137" fg:w="19261806"/><text x="23.9264%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::collections::btree::map::BTreeMap&lt;u64,alloc::boxed::Box&lt;u64&gt;&gt;&gt;&gt; (15,595,555 samples, 0.01%)</title><rect x="23.6961%" y="773" width="0.0114%" height="15" fill="rgb(216,194,45)" fg:x="32476093242" fg:w="15595555"/><text x="23.9461%" y="783.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15,595,555 samples, 0.01%)</title><rect x="23.6961%" y="757" width="0.0114%" height="15" fill="rgb(218,18,35)" fg:x="32476093242" fg:w="15595555"/><text x="23.9461%" y="767.50"></text></g><g><title>std::sync::poison::Flag::done (15,595,555 samples, 0.01%)</title><rect x="23.6961%" y="741" width="0.0114%" height="15" fill="rgb(207,83,51)" fg:x="32476093242" fg:w="15595555"/><text x="23.9461%" y="751.50"></text></g><g><title>std::sync::poison::Flag::guard (573,031,953 samples, 0.42%)</title><rect x="23.7074%" y="741" width="0.4181%" height="15" fill="rgb(225,63,43)" fg:x="32491697101" fg:w="573031953"/><text x="23.9574%" y="751.50"></text></g><g><title>std::thread::panicking (131,898,592 samples, 0.10%)</title><rect x="24.0293%" y="725" width="0.0962%" height="15" fill="rgb(207,57,36)" fg:x="32932830462" fg:w="131898592"/><text x="24.2793%" y="735.50"></text></g><g><title>std::panicking::panicking (131,898,592 samples, 0.10%)</title><rect x="24.0293%" y="709" width="0.0962%" height="15" fill="rgb(216,99,33)" fg:x="32932830462" fg:w="131898592"/><text x="24.2793%" y="719.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (131,898,592 samples, 0.10%)</title><rect x="24.0293%" y="693" width="0.0962%" height="15" fill="rgb(225,42,16)" fg:x="32932830462" fg:w="131898592"/><text x="24.2793%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (95,491,375 samples, 0.07%)</title><rect x="24.0559%" y="677" width="0.0697%" height="15" fill="rgb(220,201,45)" fg:x="32969237679" fg:w="95491375"/><text x="24.3059%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (95,491,375 samples, 0.07%)</title><rect x="24.0559%" y="661" width="0.0697%" height="15" fill="rgb(225,33,4)" fg:x="32969237679" fg:w="95491375"/><text x="24.3059%" y="671.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (584,283,659 samples, 0.43%)</title><rect x="23.7074%" y="757" width="0.4263%" height="15" fill="rgb(224,33,50)" fg:x="32491697101" fg:w="584283659"/><text x="23.9574%" y="767.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (14,973,902 samples, 0.01%)</title><rect x="24.9245%" y="741" width="0.0109%" height="15" fill="rgb(246,198,51)" fg:x="34159634435" fg:w="14973902"/><text x="25.1745%" y="751.50"></text></g><g><title>sysvec_apic_timer_interrupt (14,973,902 samples, 0.01%)</title><rect x="24.9245%" y="725" width="0.0109%" height="15" fill="rgb(205,22,4)" fg:x="34159634435" fg:w="14973902"/><text x="25.1745%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (22,966,297 samples, 0.02%)</title><rect x="25.7171%" y="725" width="0.0168%" height="15" fill="rgb(206,3,8)" fg:x="35245982566" fg:w="22966297"/><text x="25.9671%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_swap (22,966,297 samples, 0.02%)</title><rect x="25.7171%" y="709" width="0.0168%" height="15" fill="rgb(251,23,15)" fg:x="35245982566" fg:w="22966297"/><text x="25.9671%" y="719.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (551,640,118 samples, 0.40%)</title><rect x="25.8581%" y="709" width="0.4025%" height="15" fill="rgb(252,88,28)" fg:x="35439180905" fg:w="551640118"/><text x="26.1081%" y="719.50"></text></g><g><title>core::ops::function::FnOnce::call_once (387,856,224 samples, 0.28%)</title><rect x="25.9776%" y="693" width="0.2830%" height="15" fill="rgb(212,127,14)" fg:x="35602964799" fg:w="387856224"/><text x="26.2276%" y="703.50"></text></g><g><title>std::sys::pal::unix::os::errno (387,856,224 samples, 0.28%)</title><rect x="25.9776%" y="677" width="0.2830%" height="15" fill="rgb(247,145,37)" fg:x="35602964799" fg:w="387856224"/><text x="26.2276%" y="687.50"></text></g><g><title>syscall (376,370,401 samples, 0.27%)</title><rect x="25.9860%" y="661" width="0.2746%" height="15" fill="rgb(209,117,53)" fg:x="35614450622" fg:w="376370401"/><text x="26.2360%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (376,370,401 samples, 0.27%)</title><rect x="25.9860%" y="645" width="0.2746%" height="15" fill="rgb(212,90,42)" fg:x="35614450622" fg:w="376370401"/><text x="26.2360%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (81,726,410 samples, 0.06%)</title><rect x="26.2606%" y="709" width="0.0596%" height="15" fill="rgb(218,164,37)" fg:x="35990821023" fg:w="81726410"/><text x="26.5106%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (84,263,058 samples, 0.06%)</title><rect x="26.3229%" y="709" width="0.0615%" height="15" fill="rgb(246,65,34)" fg:x="36076286125" fg:w="84263058"/><text x="26.5729%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_load (84,263,058 samples, 0.06%)</title><rect x="26.3229%" y="693" width="0.0615%" height="15" fill="rgb(231,100,33)" fg:x="36076286125" fg:w="84263058"/><text x="26.5729%" y="703.50"></text></g><g><title>__futex_queue (87,526,704 samples, 0.06%)</title><rect x="27.1448%" y="581" width="0.0639%" height="15" fill="rgb(228,126,14)" fg:x="37202720302" fg:w="87526704"/><text x="27.3948%" y="591.50"></text></g><g><title>plist_add (82,375,639 samples, 0.06%)</title><rect x="27.1486%" y="565" width="0.0601%" height="15" fill="rgb(215,173,21)" fg:x="37207871367" fg:w="82375639"/><text x="27.3986%" y="575.50"></text></g><g><title>_raw_spin_lock (70,152,123 samples, 0.05%)</title><rect x="27.4381%" y="533" width="0.0512%" height="15" fill="rgb(210,6,40)" fg:x="37604642769" fg:w="70152123"/><text x="27.6881%" y="543.50"></text></g><g><title>preempt_count_add (15,287,855 samples, 0.01%)</title><rect x="27.4781%" y="517" width="0.0112%" height="15" fill="rgb(212,48,18)" fg:x="37659507037" fg:w="15287855"/><text x="27.7281%" y="527.50"></text></g><g><title>__pmu_ctx_sched_out (413,586,484 samples, 0.30%)</title><rect x="27.5218%" y="517" width="0.3018%" height="15" fill="rgb(230,214,11)" fg:x="37719411017" fg:w="413586484"/><text x="27.7718%" y="527.50"></text></g><g><title>group_sched_out (320,935,475 samples, 0.23%)</title><rect x="27.5894%" y="501" width="0.2342%" height="15" fill="rgb(254,105,39)" fg:x="37812062026" fg:w="320935475"/><text x="27.8394%" y="511.50"></text></g><g><title>event_sched_out (305,044,576 samples, 0.22%)</title><rect x="27.6010%" y="485" width="0.2226%" height="15" fill="rgb(245,158,5)" fg:x="37827952925" fg:w="305044576"/><text x="27.8510%" y="495.50"></text></g><g><title>perf_ibs_del (254,632,344 samples, 0.19%)</title><rect x="27.6378%" y="469" width="0.1858%" height="15" fill="rgb(249,208,11)" fg:x="37878365157" fg:w="254632344"/><text x="27.8878%" y="479.50"></text></g><g><title>perf_ibs_stop (175,926,737 samples, 0.13%)</title><rect x="27.6952%" y="453" width="0.1284%" height="15" fill="rgb(210,39,28)" fg:x="37957070764" fg:w="175926737"/><text x="27.9452%" y="463.50"></text></g><g><title>native_read_msr (112,907,349 samples, 0.08%)</title><rect x="27.7412%" y="437" width="0.0824%" height="15" fill="rgb(211,56,53)" fg:x="38020090152" fg:w="112907349"/><text x="27.9912%" y="447.50"></text></g><g><title>ctx_sched_out (523,633,178 samples, 0.38%)</title><rect x="27.4893%" y="533" width="0.3821%" height="15" fill="rgb(226,201,30)" fg:x="37674794892" fg:w="523633178"/><text x="27.7393%" y="543.50"></text></g><g><title>local_clock (65,430,569 samples, 0.05%)</title><rect x="27.8236%" y="517" width="0.0477%" height="15" fill="rgb(239,101,34)" fg:x="38132997501" fg:w="65430569"/><text x="28.0736%" y="527.50"></text></g><g><title>local_clock_noinstr (49,679,477 samples, 0.04%)</title><rect x="27.8351%" y="501" width="0.0362%" height="15" fill="rgb(226,209,5)" fg:x="38148748593" fg:w="49679477"/><text x="28.0851%" y="511.50"></text></g><g><title>native_sched_clock (45,897,325 samples, 0.03%)</title><rect x="27.8379%" y="485" width="0.0335%" height="15" fill="rgb(250,105,47)" fg:x="38152530745" fg:w="45897325"/><text x="28.0879%" y="495.50"></text></g><g><title>perf_ctx_disable (39,355,779 samples, 0.03%)</title><rect x="27.8713%" y="533" width="0.0287%" height="15" fill="rgb(230,72,3)" fg:x="38198428070" fg:w="39355779"/><text x="28.1213%" y="543.50"></text></g><g><title>perf_ctx_sched_task_cb (23,868,495 samples, 0.02%)</title><rect x="27.9001%" y="533" width="0.0174%" height="15" fill="rgb(232,218,39)" fg:x="38237783849" fg:w="23868495"/><text x="28.1501%" y="543.50"></text></g><g><title>__perf_event_task_sched_out (766,351,581 samples, 0.56%)</title><rect x="27.3780%" y="549" width="0.5592%" height="15" fill="rgb(248,166,6)" fg:x="37522339532" fg:w="766351581"/><text x="27.6280%" y="559.50"></text></g><g><title>task_ctx_sched_out (22,787,623 samples, 0.02%)</title><rect x="27.9206%" y="533" width="0.0166%" height="15" fill="rgb(247,89,20)" fg:x="38265903490" fg:w="22787623"/><text x="28.1706%" y="543.50"></text></g><g><title>check_preemption_disabled (15,783,725 samples, 0.01%)</title><rect x="27.9372%" y="549" width="0.0115%" height="15" fill="rgb(248,130,54)" fg:x="38288691113" fg:w="15783725"/><text x="28.1872%" y="559.50"></text></g><g><title>dequeue_task (22,922,908 samples, 0.02%)</title><rect x="27.9487%" y="549" width="0.0167%" height="15" fill="rgb(234,196,4)" fg:x="38304474838" fg:w="22922908"/><text x="28.1987%" y="559.50"></text></g><g><title>__calc_delta.constprop.0 (42,327,956 samples, 0.03%)</title><rect x="28.2851%" y="517" width="0.0309%" height="15" fill="rgb(250,143,31)" fg:x="38765515368" fg:w="42327956"/><text x="28.5351%" y="527.50"></text></g><g><title>avg_vruntime (81,344,751 samples, 0.06%)</title><rect x="28.3160%" y="517" width="0.0594%" height="15" fill="rgb(211,110,34)" fg:x="38807843324" fg:w="81344751"/><text x="28.5660%" y="527.50"></text></g><g><title>reweight_entity (42,391,839 samples, 0.03%)</title><rect x="28.3754%" y="517" width="0.0309%" height="15" fill="rgb(215,124,48)" fg:x="38889188075" fg:w="42391839"/><text x="28.6254%" y="527.50"></text></g><g><title>update_cfs_group (247,107,960 samples, 0.18%)</title><rect x="28.4063%" y="517" width="0.1803%" height="15" fill="rgb(216,46,13)" fg:x="38931579914" fg:w="247107960"/><text x="28.6563%" y="527.50"></text></g><g><title>__calc_delta.constprop.0 (34,477,717 samples, 0.03%)</title><rect x="28.7842%" y="501" width="0.0252%" height="15" fill="rgb(205,184,25)" fg:x="39449518525" fg:w="34477717"/><text x="29.0342%" y="511.50"></text></g><g><title>__cgroup_account_cputime (63,364,602 samples, 0.05%)</title><rect x="28.8094%" y="501" width="0.0462%" height="15" fill="rgb(228,1,10)" fg:x="39483996242" fg:w="63364602"/><text x="29.0594%" y="511.50"></text></g><g><title>cpuacct_charge (65,465,239 samples, 0.05%)</title><rect x="28.8556%" y="501" width="0.0478%" height="15" fill="rgb(213,116,27)" fg:x="39547360844" fg:w="65465239"/><text x="29.1056%" y="511.50"></text></g><g><title>update_curr_se (26,541,356 samples, 0.02%)</title><rect x="28.9093%" y="501" width="0.0194%" height="15" fill="rgb(241,95,50)" fg:x="39621031131" fg:w="26541356"/><text x="29.1593%" y="511.50"></text></g><g><title>update_curr (501,653,460 samples, 0.37%)</title><rect x="28.5866%" y="517" width="0.3660%" height="15" fill="rgb(238,48,32)" fg:x="39178687874" fg:w="501653460"/><text x="28.8366%" y="527.50"></text></g><g><title>update_min_vruntime (32,768,847 samples, 0.02%)</title><rect x="28.9287%" y="501" width="0.0239%" height="15" fill="rgb(235,113,49)" fg:x="39647572487" fg:w="32768847"/><text x="29.1787%" y="511.50"></text></g><g><title>__update_load_avg_cfs_rq (60,780,034 samples, 0.04%)</title><rect x="29.0895%" y="501" width="0.0443%" height="15" fill="rgb(205,127,43)" fg:x="39867946037" fg:w="60780034"/><text x="29.3395%" y="511.50"></text></g><g><title>__update_load_avg_se (56,789,587 samples, 0.04%)</title><rect x="29.1339%" y="501" width="0.0414%" height="15" fill="rgb(250,162,2)" fg:x="39928726071" fg:w="56789587"/><text x="29.3839%" y="511.50"></text></g><g><title>update_load_avg (309,180,763 samples, 0.23%)</title><rect x="28.9526%" y="517" width="0.2256%" height="15" fill="rgb(220,13,41)" fg:x="39680341334" fg:w="309180763"/><text x="29.2026%" y="527.50"></text></g><g><title>dequeue_entity (1,499,932,525 samples, 1.09%)</title><rect x="28.0865%" y="533" width="1.0944%" height="15" fill="rgb(249,221,25)" fg:x="38493361793" fg:w="1499932525"/><text x="28.3365%" y="543.50"></text></g><g><title>dequeue_task_fair (1,669,789,055 samples, 1.22%)</title><rect x="27.9654%" y="549" width="1.2184%" height="15" fill="rgb(215,208,19)" fg:x="38327397746" fg:w="1669789055"/><text x="28.2154%" y="559.50"></text></g><g><title>__rcu_read_lock (24,124,755 samples, 0.02%)</title><rect x="29.2535%" y="517" width="0.0176%" height="15" fill="rgb(236,175,2)" fg:x="40092706552" fg:w="24124755"/><text x="29.5035%" y="527.50"></text></g><g><title>pick_next_task_fair (144,412,690 samples, 0.11%)</title><rect x="29.1868%" y="549" width="0.1054%" height="15" fill="rgb(241,52,2)" fg:x="40001362727" fg:w="144412690"/><text x="29.4368%" y="559.50"></text></g><g><title>sched_balance_newidle (129,185,934 samples, 0.09%)</title><rect x="29.1980%" y="533" width="0.0943%" height="15" fill="rgb(248,140,14)" fg:x="40016589483" fg:w="129185934"/><text x="29.4480%" y="543.50"></text></g><g><title>__rcu_read_lock (27,254,451 samples, 0.02%)</title><rect x="29.3953%" y="517" width="0.0199%" height="15" fill="rgb(253,22,42)" fg:x="40287019435" fg:w="27254451"/><text x="29.6453%" y="527.50"></text></g><g><title>pick_next_task_idle (172,311,740 samples, 0.13%)</title><rect x="29.2922%" y="549" width="0.1257%" height="15" fill="rgb(234,61,47)" fg:x="40145775417" fg:w="172311740"/><text x="29.5422%" y="559.50"></text></g><g><title>__update_idle_core (150,924,478 samples, 0.11%)</title><rect x="29.3078%" y="533" width="0.1101%" height="15" fill="rgb(208,226,15)" fg:x="40167162679" fg:w="150924478"/><text x="29.5578%" y="543.50"></text></g><g><title>record_times (16,450,007 samples, 0.01%)</title><rect x="29.5530%" y="533" width="0.0120%" height="15" fill="rgb(217,221,4)" fg:x="40503246434" fg:w="16450007"/><text x="29.8030%" y="543.50"></text></g><g><title>sched_clock (19,372,562 samples, 0.01%)</title><rect x="29.5765%" y="517" width="0.0141%" height="15" fill="rgb(212,174,34)" fg:x="40535437945" fg:w="19372562"/><text x="29.8265%" y="527.50"></text></g><g><title>sched_clock_cpu (38,905,192 samples, 0.03%)</title><rect x="29.5651%" y="533" width="0.0284%" height="15" fill="rgb(253,83,4)" fg:x="40519696441" fg:w="38905192"/><text x="29.8151%" y="543.50"></text></g><g><title>psi_account_irqtime (251,639,978 samples, 0.18%)</title><rect x="29.4179%" y="549" width="0.1836%" height="15" fill="rgb(250,195,49)" fg:x="40318087157" fg:w="251639978"/><text x="29.6679%" y="559.50"></text></g><g><title>record_times (15,222,837 samples, 0.01%)</title><rect x="29.8895%" y="517" width="0.0111%" height="15" fill="rgb(241,192,25)" fg:x="40964422374" fg:w="15222837"/><text x="30.1395%" y="527.50"></text></g><g><title>psi_group_change (272,788,502 samples, 0.20%)</title><rect x="29.7044%" y="533" width="0.1990%" height="15" fill="rgb(208,124,10)" fg:x="40710691250" fg:w="272788502"/><text x="29.9544%" y="543.50"></text></g><g><title>sched_clock_cpu (32,326,200 samples, 0.02%)</title><rect x="29.9034%" y="533" width="0.0236%" height="15" fill="rgb(222,33,0)" fg:x="40983479752" fg:w="32326200"/><text x="30.1534%" y="543.50"></text></g><g><title>sched_clock (28,568,320 samples, 0.02%)</title><rect x="29.9062%" y="517" width="0.0208%" height="15" fill="rgb(234,209,28)" fg:x="40987237632" fg:w="28568320"/><text x="30.1562%" y="527.50"></text></g><g><title>native_sched_clock (28,568,320 samples, 0.02%)</title><rect x="29.9062%" y="501" width="0.0208%" height="15" fill="rgb(224,11,23)" fg:x="40987237632" fg:w="28568320"/><text x="30.1562%" y="511.50"></text></g><g><title>psi_task_switch (453,889,972 samples, 0.33%)</title><rect x="29.6016%" y="549" width="0.3312%" height="15" fill="rgb(232,99,1)" fg:x="40569727135" fg:w="453889972"/><text x="29.8516%" y="559.50"></text></g><g><title>put_prev_entity (38,495,876 samples, 0.03%)</title><rect x="29.9797%" y="533" width="0.0281%" height="15" fill="rgb(237,95,45)" fg:x="41087918357" fg:w="38495876"/><text x="30.2297%" y="543.50"></text></g><g><title>put_prev_task_fair (114,919,184 samples, 0.08%)</title><rect x="29.9327%" y="549" width="0.0839%" height="15" fill="rgb(208,109,11)" fg:x="41023617107" fg:w="114919184"/><text x="30.1827%" y="559.50"></text></g><g><title>raw_spin_rq_lock_nested (18,881,837 samples, 0.01%)</title><rect x="30.0166%" y="549" width="0.0138%" height="15" fill="rgb(216,190,48)" fg:x="41138536291" fg:w="18881837"/><text x="30.2666%" y="559.50"></text></g><g><title>rcu_note_context_switch (23,891,129 samples, 0.02%)</title><rect x="30.0304%" y="549" width="0.0174%" height="15" fill="rgb(251,171,36)" fg:x="41157418128" fg:w="23891129"/><text x="30.2804%" y="559.50"></text></g><g><title>native_sched_clock (26,595,909 samples, 0.02%)</title><rect x="30.0849%" y="501" width="0.0194%" height="15" fill="rgb(230,62,22)" fg:x="41232222097" fg:w="26595909"/><text x="30.3349%" y="511.50"></text></g><g><title>sched_clock_cpu (42,517,914 samples, 0.03%)</title><rect x="30.0765%" y="533" width="0.0310%" height="15" fill="rgb(225,114,35)" fg:x="41220704990" fg:w="42517914"/><text x="30.3265%" y="543.50"></text></g><g><title>sched_clock (31,000,807 samples, 0.02%)</title><rect x="30.0849%" y="517" width="0.0226%" height="15" fill="rgb(215,118,42)" fg:x="41232222097" fg:w="31000807"/><text x="30.3349%" y="527.50"></text></g><g><title>schedule (4,005,741,945 samples, 2.92%)</title><rect x="27.2087%" y="581" width="2.9228%" height="15" fill="rgb(243,119,21)" fg:x="37290247006" fg:w="4005741945"/><text x="27.4587%" y="591.50">sc..</text></g><g><title>__schedule (3,994,418,071 samples, 2.91%)</title><rect x="27.2170%" y="565" width="2.9145%" height="15" fill="rgb(252,177,53)" fg:x="37301570880" fg:w="3994418071"/><text x="27.4670%" y="575.50">__..</text></g><g><title>update_rq_clock (94,822,498 samples, 0.07%)</title><rect x="30.0623%" y="549" width="0.0692%" height="15" fill="rgb(237,209,29)" fg:x="41201166453" fg:w="94822498"/><text x="30.3123%" y="559.50"></text></g><g><title>update_irq_load_avg (32,766,047 samples, 0.02%)</title><rect x="30.1076%" y="533" width="0.0239%" height="15" fill="rgb(212,65,23)" fg:x="41263222904" fg:w="32766047"/><text x="30.3576%" y="543.50"></text></g><g><title>futex_wait_queue (4,108,353,084 samples, 3.00%)</title><rect x="27.1366%" y="597" width="2.9976%" height="15" fill="rgb(230,222,46)" fg:x="37191406004" fg:w="4108353084"/><text x="27.3866%" y="607.50">fut..</text></g><g><title>futex_get_value_locked (557,211,606 samples, 0.41%)</title><rect x="30.1886%" y="581" width="0.4066%" height="15" fill="rgb(215,135,32)" fg:x="41374329211" fg:w="557211606"/><text x="30.4386%" y="591.50"></text></g><g><title>__get_user_nocheck_4 (519,078,987 samples, 0.38%)</title><rect x="30.2165%" y="565" width="0.3787%" height="15" fill="rgb(246,101,22)" fg:x="41412461830" fg:w="519078987"/><text x="30.4665%" y="575.50"></text></g><g><title>native_queued_spin_lock_slowpath (1,364,043,850 samples, 1.00%)</title><rect x="30.8140%" y="549" width="0.9953%" height="15" fill="rgb(206,107,13)" fg:x="42231395405" fg:w="1364043850"/><text x="31.0640%" y="559.50"></text></g><g><title>_raw_spin_lock (1,400,039,602 samples, 1.02%)</title><rect x="30.7904%" y="565" width="1.0215%" height="15" fill="rgb(250,100,44)" fg:x="42199058337" fg:w="1400039602"/><text x="31.0404%" y="575.50"></text></g><g><title>futex_hash (23,319,567 samples, 0.02%)</title><rect x="31.8119%" y="565" width="0.0170%" height="15" fill="rgb(231,147,38)" fg:x="43599097939" fg:w="23319567"/><text x="32.0619%" y="575.50"></text></g><g><title>futex_q_lock (1,698,980,759 samples, 1.24%)</title><rect x="30.5952%" y="581" width="1.2397%" height="15" fill="rgb(229,8,40)" fg:x="41931540817" fg:w="1698980759"/><text x="30.8452%" y="591.50"></text></g><g><title>_raw_spin_unlock (42,161,894 samples, 0.03%)</title><rect x="31.9912%" y="565" width="0.0308%" height="15" fill="rgb(221,135,30)" fg:x="43844770450" fg:w="42161894"/><text x="32.2412%" y="575.50"></text></g><g><title>futex_q_unlock (260,138,873 samples, 0.19%)</title><rect x="31.8349%" y="581" width="0.1898%" height="15" fill="rgb(249,193,18)" fg:x="43630521576" fg:w="260138873"/><text x="32.0849%" y="591.50"></text></g><g><title>futex_wait_setup (2,617,831,607 samples, 1.91%)</title><rect x="30.1342%" y="597" width="1.9101%" height="15" fill="rgb(209,133,39)" fg:x="41299759088" fg:w="2617831607"/><text x="30.3842%" y="607.50">f..</text></g><g><title>get_futex_key (26,930,246 samples, 0.02%)</title><rect x="32.0247%" y="581" width="0.0196%" height="15" fill="rgb(232,100,14)" fg:x="43890660449" fg:w="26930246"/><text x="32.2747%" y="591.50"></text></g><g><title>__x64_sys_futex (6,927,052,146 samples, 5.05%)</title><rect x="26.9956%" y="661" width="5.0543%" height="15" fill="rgb(224,185,1)" fg:x="36998173763" fg:w="6927052146"/><text x="27.2456%" y="671.50">__x64_..</text></g><g><title>do_futex (6,907,469,252 samples, 5.04%)</title><rect x="27.0099%" y="645" width="5.0400%" height="15" fill="rgb(223,139,8)" fg:x="37017756657" fg:w="6907469252"/><text x="27.2599%" y="655.50">do_fut..</text></g><g><title>futex_wait (6,900,054,247 samples, 5.03%)</title><rect x="27.0153%" y="629" width="5.0346%" height="15" fill="rgb(232,213,38)" fg:x="37025171662" fg:w="6900054247"/><text x="27.2653%" y="639.50">futex_..</text></g><g><title>__futex_wait (6,862,134,871 samples, 5.01%)</title><rect x="27.0430%" y="613" width="5.0069%" height="15" fill="rgb(207,94,22)" fg:x="37063091038" fg:w="6862134871"/><text x="27.2930%" y="623.50">__fute..</text></g><g><title>__rseq_handle_notify_resume (26,843,656 samples, 0.02%)</title><rect x="32.1161%" y="645" width="0.0196%" height="15" fill="rgb(219,183,54)" fg:x="44016046709" fg:w="26843656"/><text x="32.3661%" y="655.50"></text></g><g><title>srso_alias_return_thunk (15,362,028 samples, 0.01%)</title><rect x="32.1445%" y="645" width="0.0112%" height="15" fill="rgb(216,185,54)" fg:x="44054876956" fg:w="15362028"/><text x="32.3945%" y="655.50"></text></g><g><title>do_syscall_64 (7,220,479,189 samples, 5.27%)</title><rect x="26.9029%" y="677" width="5.2684%" height="15" fill="rgb(254,217,39)" fg:x="36871198331" fg:w="7220479189"/><text x="27.1529%" y="687.50">do_sys..</text></g><g><title>syscall_exit_to_user_mode (154,706,311 samples, 0.11%)</title><rect x="32.0585%" y="661" width="0.1129%" height="15" fill="rgb(240,178,23)" fg:x="43936971209" fg:w="154706311"/><text x="32.3085%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (7,621,861,843 samples, 5.56%)</title><rect x="26.6185%" y="693" width="5.5613%" height="15" fill="rgb(218,11,47)" fg:x="36481331282" fg:w="7621861843"/><text x="26.8685%" y="703.50">entry_S..</text></g><g><title>entry_SYSRETQ_unsafe_stack (44,365,432 samples, 0.03%)</title><rect x="32.1797%" y="693" width="0.0324%" height="15" fill="rgb(218,51,51)" fg:x="44103193125" fg:w="44365432"/><text x="32.4297%" y="703.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (9,737,845,267 samples, 7.11%)</title><rect x="25.7339%" y="725" width="7.1052%" height="15" fill="rgb(238,126,27)" fg:x="35268949152" fg:w="9737845267"/><text x="25.9839%" y="735.50">std::sys::..</text></g><g><title>syscall (8,846,245,236 samples, 6.45%)</title><rect x="26.3844%" y="709" width="6.4546%" height="15" fill="rgb(249,202,22)" fg:x="36160549183" fg:w="8846245236"/><text x="26.6344%" y="719.50">syscall</text></g><g><title>syscall_return_via_sysret (859,235,862 samples, 0.63%)</title><rect x="32.2121%" y="693" width="0.6269%" height="15" fill="rgb(254,195,49)" fg:x="44147558557" fg:w="859235862"/><text x="32.4621%" y="703.50"></text></g><g><title>stackleak_erase (463,769,021 samples, 0.34%)</title><rect x="32.5007%" y="677" width="0.3384%" height="15" fill="rgb(208,123,14)" fg:x="44543025398" fg:w="463769021"/><text x="32.7507%" y="687.50"></text></g><g><title>core::hint::spin_loop (27,610,663 samples, 0.02%)</title><rect x="34.2886%" y="709" width="0.0201%" height="15" fill="rgb(224,200,8)" fg:x="46993414124" fg:w="27610663"/><text x="34.5386%" y="719.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (27,610,663 samples, 0.02%)</title><rect x="34.2886%" y="693" width="0.0201%" height="15" fill="rgb(217,61,36)" fg:x="46993414124" fg:w="27610663"/><text x="34.5386%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (48,659,494 samples, 0.04%)</title><rect x="34.3087%" y="709" width="0.0355%" height="15" fill="rgb(206,35,45)" fg:x="47021024787" fg:w="48659494"/><text x="34.5587%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_load (48,659,494 samples, 0.04%)</title><rect x="34.3087%" y="693" width="0.0355%" height="15" fill="rgb(217,65,33)" fg:x="47021024787" fg:w="48659494"/><text x="34.5587%" y="703.50"></text></g><g><title>rpq::bpq::BucketPriorityQueue::add_bucket (15,897,954,221 samples, 11.60%)</title><rect x="22.7443%" y="789" width="11.5999%" height="15" fill="rgb(222,158,48)" fg:x="31171730690" fg:w="15897954221"/><text x="22.9943%" y="799.50">rpq::bpq::BucketP..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (14,577,987,810 samples, 10.64%)</title><rect x="23.7074%" y="773" width="10.6368%" height="15" fill="rgb(254,2,54)" fg:x="32491697101" fg:w="14577987810"/><text x="23.9574%" y="783.50">std::sync::mutex..</text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock (13,993,704,151 samples, 10.21%)</title><rect x="24.1338%" y="757" width="10.2105%" height="15" fill="rgb(250,143,38)" fg:x="33075980760" fg:w="13993704151"/><text x="24.3838%" y="767.50">std::sys::pal::..</text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock_contended (12,886,991,402 samples, 9.40%)</title><rect x="24.9413%" y="741" width="9.4029%" height="15" fill="rgb(248,25,0)" fg:x="34182693509" fg:w="12886991402"/><text x="25.1913%" y="751.50">std::sys::pal..</text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::spin (2,062,890,492 samples, 1.51%)</title><rect x="32.8390%" y="725" width="1.5052%" height="15" fill="rgb(206,152,27)" fg:x="45006794419" fg:w="2062890492"/><text x="33.0890%" y="735.50"></text></g><g><title>core::ptr::read (1,951,146,102 samples, 1.42%)</title><rect x="35.1244%" y="725" width="1.4236%" height="15" fill="rgb(240,77,30)" fg:x="48138951774" fg:w="1951146102"/><text x="35.3744%" y="735.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (1,959,287,472 samples, 1.43%)</title><rect x="35.1244%" y="741" width="1.4296%" height="15" fill="rgb(231,5,3)" fg:x="48138951774" fg:w="1959287472"/><text x="35.3744%" y="751.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (37,373,497 samples, 0.03%)</title><rect x="36.5608%" y="709" width="0.0273%" height="15" fill="rgb(207,226,32)" fg:x="50107518100" fg:w="37373497"/><text x="36.8108%" y="719.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_up (2,825,433,260 samples, 2.06%)</title><rect x="34.5294%" y="757" width="2.0616%" height="15" fill="rgb(222,207,47)" fg:x="47323405117" fg:w="2825433260"/><text x="34.7794%" y="767.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::Hole&lt;rpq::schema::Item&lt;u64&gt;&gt;&gt; (41,320,277 samples, 0.03%)</title><rect x="36.5608%" y="741" width="0.0301%" height="15" fill="rgb(229,115,45)" fg:x="50107518100" fg:w="41320277"/><text x="36.8108%" y="751.50"></text></g><g><title>&lt;alloc::collections::binary_heap::Hole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (41,320,277 samples, 0.03%)</title><rect x="36.5608%" y="725" width="0.0301%" height="15" fill="rgb(224,191,6)" fg:x="50107518100" fg:w="41320277"/><text x="36.8108%" y="735.50"></text></g><g><title>__irqentry_text_end (159,795,484 samples, 0.12%)</title><rect x="36.9554%" y="725" width="0.1166%" height="15" fill="rgb(230,227,24)" fg:x="50648437853" fg:w="159795484"/><text x="37.2054%" y="735.50"></text></g><g><title>stackleak_erase (54,431,324 samples, 0.04%)</title><rect x="37.0323%" y="709" width="0.0397%" height="15" fill="rgb(228,80,19)" fg:x="50753802013" fg:w="54431324"/><text x="37.2823%" y="719.50"></text></g><g><title>__folio_throttle_swaprate (75,066,696 samples, 0.05%)</title><rect x="37.1954%" y="645" width="0.0548%" height="15" fill="rgb(247,229,0)" fg:x="50977244856" fg:w="75066696"/><text x="37.4454%" y="655.50"></text></g><g><title>blk_cgroup_congested (71,549,841 samples, 0.05%)</title><rect x="37.1979%" y="629" width="0.0522%" height="15" fill="rgb(237,194,15)" fg:x="50980761711" fg:w="71549841"/><text x="37.4479%" y="639.50"></text></g><g><title>__mod_lruvec_state (30,484,890 samples, 0.02%)</title><rect x="37.2982%" y="629" width="0.0222%" height="15" fill="rgb(219,203,20)" fg:x="51118161656" fg:w="30484890"/><text x="37.5482%" y="639.50"></text></g><g><title>__mod_node_page_state (26,758,530 samples, 0.02%)</title><rect x="37.3009%" y="613" width="0.0195%" height="15" fill="rgb(234,128,8)" fg:x="51121888016" fg:w="26758530"/><text x="37.5509%" y="623.50"></text></g><g><title>__lruvec_stat_mod_folio (168,401,547 samples, 0.12%)</title><rect x="37.2501%" y="645" width="0.1229%" height="15" fill="rgb(248,202,8)" fg:x="51052311552" fg:w="168401547"/><text x="37.5001%" y="655.50"></text></g><g><title>__mod_memcg_lruvec_state (72,066,553 samples, 0.05%)</title><rect x="37.3204%" y="629" width="0.0526%" height="15" fill="rgb(206,104,37)" fg:x="51148646546" fg:w="72066553"/><text x="37.5704%" y="639.50"></text></g><g><title>get_mem_cgroup_from_mm (118,350,608 samples, 0.09%)</title><rect x="37.4180%" y="629" width="0.0864%" height="15" fill="rgb(223,8,27)" fg:x="51282328117" fg:w="118350608"/><text x="37.6680%" y="639.50"></text></g><g><title>cgroup_rstat_updated (50,893,024 samples, 0.04%)</title><rect x="37.5691%" y="581" width="0.0371%" height="15" fill="rgb(216,217,28)" fg:x="51489433198" fg:w="50893024"/><text x="37.8191%" y="591.50"></text></g><g><title>check_preemption_disabled (15,825,733 samples, 0.01%)</title><rect x="37.6062%" y="581" width="0.0115%" height="15" fill="rgb(249,199,1)" fg:x="51540326222" fg:w="15825733"/><text x="37.8562%" y="591.50"></text></g><g><title>__count_memcg_events (135,173,194 samples, 0.10%)</title><rect x="37.5247%" y="597" width="0.0986%" height="15" fill="rgb(240,85,17)" fg:x="51428577261" fg:w="135173194"/><text x="37.7747%" y="607.50"></text></g><g><title>mem_cgroup_charge_statistics (139,011,999 samples, 0.10%)</title><rect x="37.5247%" y="613" width="0.1014%" height="15" fill="rgb(206,108,45)" fg:x="51428577261" fg:w="139011999"/><text x="37.7747%" y="623.50"></text></g><g><title>mem_cgroup_commit_charge (193,361,063 samples, 0.14%)</title><rect x="37.5043%" y="629" width="0.1411%" height="15" fill="rgb(245,210,41)" fg:x="51400678725" fg:w="193361063"/><text x="37.7543%" y="639.50"></text></g><g><title>memcg_check_events (26,450,528 samples, 0.02%)</title><rect x="37.6261%" y="613" width="0.0193%" height="15" fill="rgb(206,13,37)" fg:x="51567589260" fg:w="26450528"/><text x="37.8761%" y="623.50"></text></g><g><title>__mem_cgroup_charge (420,833,026 samples, 0.31%)</title><rect x="37.3730%" y="645" width="0.3071%" height="15" fill="rgb(250,61,18)" fg:x="51220713099" fg:w="420833026"/><text x="37.6230%" y="655.50"></text></g><g><title>try_charge_memcg (47,506,337 samples, 0.03%)</title><rect x="37.6454%" y="629" width="0.0347%" height="15" fill="rgb(235,172,48)" fg:x="51594039788" fg:w="47506337"/><text x="37.8954%" y="639.50"></text></g><g><title>__pte_offset_map_lock (151,252,376 samples, 0.11%)</title><rect x="37.6829%" y="645" width="0.1104%" height="15" fill="rgb(249,201,17)" fg:x="51645398010" fg:w="151252376"/><text x="37.9329%" y="655.50"></text></g><g><title>_raw_spin_lock (121,101,201 samples, 0.09%)</title><rect x="37.7049%" y="629" width="0.0884%" height="15" fill="rgb(219,208,6)" fg:x="51675549185" fg:w="121101201"/><text x="37.9549%" y="639.50"></text></g><g><title>preempt_count_add (36,786,381 samples, 0.03%)</title><rect x="37.7664%" y="613" width="0.0268%" height="15" fill="rgb(248,31,23)" fg:x="51759864005" fg:w="36786381"/><text x="38.0164%" y="623.50"></text></g><g><title>__rcu_read_unlock (15,661,640 samples, 0.01%)</title><rect x="37.7932%" y="645" width="0.0114%" height="15" fill="rgb(245,15,42)" fg:x="51796650386" fg:w="15661640"/><text x="38.0432%" y="655.50"></text></g><g><title>folio_lruvec_lock_irqsave (14,233,753 samples, 0.01%)</title><rect x="37.8955%" y="613" width="0.0104%" height="15" fill="rgb(222,217,39)" fg:x="51936826091" fg:w="14233753"/><text x="38.1455%" y="623.50"></text></g><g><title>__mod_lruvec_state (30,495,968 samples, 0.02%)</title><rect x="37.9546%" y="581" width="0.0223%" height="15" fill="rgb(210,219,27)" fg:x="52017799575" fg:w="30495968"/><text x="38.2046%" y="591.50"></text></g><g><title>__mod_node_page_state (23,042,093 samples, 0.02%)</title><rect x="37.9600%" y="565" width="0.0168%" height="15" fill="rgb(252,166,36)" fg:x="52025253450" fg:w="23042093"/><text x="38.2100%" y="575.50"></text></g><g><title>__mod_memcg_lruvec_state (61,725,017 samples, 0.05%)</title><rect x="37.9769%" y="581" width="0.0450%" height="15" fill="rgb(245,132,34)" fg:x="52048295543" fg:w="61725017"/><text x="38.2269%" y="591.50"></text></g><g><title>check_preemption_disabled (15,848,261 samples, 0.01%)</title><rect x="38.0103%" y="565" width="0.0116%" height="15" fill="rgb(236,54,3)" fg:x="52094172299" fg:w="15848261"/><text x="38.2603%" y="575.50"></text></g><g><title>folio_batch_move_lru (263,592,123 samples, 0.19%)</title><rect x="37.8654%" y="629" width="0.1923%" height="15" fill="rgb(241,173,43)" fg:x="51895518051" fg:w="263592123"/><text x="38.1154%" y="639.50"></text></g><g><title>lru_add_fn (208,050,330 samples, 0.15%)</title><rect x="37.9059%" y="613" width="0.1518%" height="15" fill="rgb(215,190,9)" fg:x="51951059844" fg:w="208050330"/><text x="38.1559%" y="623.50"></text></g><g><title>lru_gen_add_folio (180,415,350 samples, 0.13%)</title><rect x="37.9261%" y="597" width="0.1316%" height="15" fill="rgb(242,101,16)" fg:x="51978694824" fg:w="180415350"/><text x="38.1761%" y="607.50"></text></g><g><title>__mod_zone_page_state (49,089,614 samples, 0.04%)</title><rect x="38.0219%" y="581" width="0.0358%" height="15" fill="rgb(223,190,21)" fg:x="52110020560" fg:w="49089614"/><text x="38.2719%" y="591.50"></text></g><g><title>check_preemption_disabled (37,416,610 samples, 0.03%)</title><rect x="38.0304%" y="565" width="0.0273%" height="15" fill="rgb(215,228,25)" fg:x="52121693564" fg:w="37416610"/><text x="38.2804%" y="575.50"></text></g><g><title>folio_add_lru (338,123,654 samples, 0.25%)</title><rect x="37.8139%" y="645" width="0.2467%" height="15" fill="rgb(225,36,22)" fg:x="51824926947" fg:w="338123654"/><text x="38.0639%" y="655.50"></text></g><g><title>folio_add_new_anon_rmap (22,501,973 samples, 0.02%)</title><rect x="38.0688%" y="645" width="0.0164%" height="15" fill="rgb(251,106,46)" fg:x="52174361525" fg:w="22501973"/><text x="38.3188%" y="655.50"></text></g><g><title>percpu_counter_add_batch (32,672,662 samples, 0.02%)</title><rect x="38.0882%" y="645" width="0.0238%" height="15" fill="rgb(208,90,1)" fg:x="52200958566" fg:w="32672662"/><text x="38.3382%" y="655.50"></text></g><g><title>__list_del_entry_valid_or_report (180,737,095 samples, 0.13%)</title><rect x="38.2422%" y="565" width="0.1319%" height="15" fill="rgb(243,10,4)" fg:x="52412005915" fg:w="180737095"/><text x="38.4922%" y="575.50"></text></g><g><title>__mod_zone_page_state (13,994,538 samples, 0.01%)</title><rect x="38.3741%" y="565" width="0.0102%" height="15" fill="rgb(212,137,27)" fg:x="52592743010" fg:w="13994538"/><text x="38.6241%" y="575.50"></text></g><g><title>__mod_zone_page_state (23,044,989 samples, 0.02%)</title><rect x="38.3987%" y="549" width="0.0168%" height="15" fill="rgb(231,220,49)" fg:x="52626494306" fg:w="23044989"/><text x="38.6487%" y="559.50"></text></g><g><title>expand (46,638,598 samples, 0.03%)</title><rect x="38.3873%" y="565" width="0.0340%" height="15" fill="rgb(237,96,20)" fg:x="52610775204" fg:w="46638598"/><text x="38.6373%" y="575.50"></text></g><g><title>__rmqueue_pcplist (299,797,926 samples, 0.22%)</title><rect x="38.2081%" y="581" width="0.2187%" height="15" fill="rgb(239,229,30)" fg:x="52365278853" fg:w="299797926"/><text x="38.4581%" y="591.50"></text></g><g><title>memchr_inv (662,408,877 samples, 0.48%)</title><rect x="38.4565%" y="565" width="0.4833%" height="15" fill="rgb(219,65,33)" fg:x="52705600112" fg:w="662408877"/><text x="38.7065%" y="575.50"></text></g><g><title>post_alloc_hook (694,605,010 samples, 0.51%)</title><rect x="38.4416%" y="581" width="0.5068%" height="15" fill="rgb(243,134,7)" fg:x="52685239996" fg:w="694605010"/><text x="38.6916%" y="591.50"></text></g><g><title>__alloc_pages_noprof (1,109,705,729 samples, 0.81%)</title><rect x="38.1453%" y="613" width="0.8097%" height="15" fill="rgb(216,177,54)" fg:x="52279181638" fg:w="1109705729"/><text x="38.3953%" y="623.50"></text></g><g><title>get_page_from_freelist (1,082,261,760 samples, 0.79%)</title><rect x="38.1653%" y="597" width="0.7897%" height="15" fill="rgb(211,160,20)" fg:x="52306625607" fg:w="1082261760"/><text x="38.4153%" y="607.50"></text></g><g><title>alloc_pages_mpol_noprof (1,121,043,294 samples, 0.82%)</title><rect x="38.1399%" y="629" width="0.8180%" height="15" fill="rgb(239,85,39)" fg:x="52271714017" fg:w="1121043294"/><text x="38.3899%" y="639.50"></text></g><g><title>__handle_mm_fault (2,513,235,229 samples, 1.83%)</title><rect x="37.1409%" y="661" width="1.8338%" height="15" fill="rgb(232,125,22)" fg:x="50902631947" fg:w="2513235229"/><text x="37.3909%" y="671.50">_..</text></g><g><title>vma_alloc_folio_noprof (1,155,308,799 samples, 0.84%)</title><rect x="38.1317%" y="645" width="0.8430%" height="15" fill="rgb(244,57,34)" fg:x="52260558377" fg:w="1155308799"/><text x="38.3817%" y="655.50"></text></g><g><title>get_vma_policy (23,109,865 samples, 0.02%)</title><rect x="38.9578%" y="629" width="0.0169%" height="15" fill="rgb(214,203,32)" fg:x="53392757311" fg:w="23109865"/><text x="39.2078%" y="639.50"></text></g><g><title>__count_memcg_events (82,499,191 samples, 0.06%)</title><rect x="38.9888%" y="645" width="0.0602%" height="15" fill="rgb(207,58,43)" fg:x="53435133179" fg:w="82499191"/><text x="39.2388%" y="655.50"></text></g><g><title>check_preemption_disabled (23,496,669 samples, 0.02%)</title><rect x="39.0318%" y="629" width="0.0171%" height="15" fill="rgb(215,193,15)" fg:x="53494135701" fg:w="23496669"/><text x="39.2818%" y="639.50"></text></g><g><title>count_memcg_events.constprop.0 (97,908,987 samples, 0.07%)</title><rect x="38.9805%" y="661" width="0.0714%" height="15" fill="rgb(232,15,44)" fg:x="53423805547" fg:w="97908987"/><text x="39.2305%" y="671.50"></text></g><g><title>handle_mm_fault (2,678,296,300 samples, 1.95%)</title><rect x="37.1006%" y="677" width="1.9542%" height="15" fill="rgb(212,3,48)" fg:x="50847402084" fg:w="2678296300"/><text x="37.3506%" y="687.50">h..</text></g><g><title>preempt_count_add (15,515,777 samples, 0.01%)</title><rect x="39.0788%" y="661" width="0.0113%" height="15" fill="rgb(218,128,7)" fg:x="53558533744" fg:w="15515777"/><text x="39.3288%" y="671.50"></text></g><g><title>exc_page_fault (2,761,946,276 samples, 2.02%)</title><rect x="37.0776%" y="709" width="2.0152%" height="15" fill="rgb(226,216,39)" fg:x="50815785831" fg:w="2761946276"/><text x="37.3276%" y="719.50">e..</text></g><g><title>do_user_addr_fault (2,758,028,960 samples, 2.01%)</title><rect x="37.0804%" y="693" width="2.0124%" height="15" fill="rgb(243,47,51)" fg:x="50819703147" fg:w="2758028960"/><text x="37.3304%" y="703.50">d..</text></g><g><title>up_read (48,200,140 samples, 0.04%)</title><rect x="39.0576%" y="677" width="0.0352%" height="15" fill="rgb(241,183,40)" fg:x="53529531967" fg:w="48200140"/><text x="39.3076%" y="687.50"></text></g><g><title>asm_exc_page_fault (2,788,769,101 samples, 2.03%)</title><rect x="37.0748%" y="725" width="2.0348%" height="15" fill="rgb(231,217,32)" fg:x="50812011124" fg:w="2788769101"/><text x="37.3248%" y="735.50">a..</text></g><g><title>irqentry_exit_to_user_mode (19,218,242 samples, 0.01%)</title><rect x="39.0956%" y="709" width="0.0140%" height="15" fill="rgb(229,61,38)" fg:x="53581561983" fg:w="19218242"/><text x="39.3456%" y="719.50"></text></g><g><title>entry_SYSCALL_64 (65,213,619 samples, 0.05%)</title><rect x="39.1141%" y="725" width="0.0476%" height="15" fill="rgb(225,210,5)" fg:x="53606944505" fg:w="65213619"/><text x="39.3641%" y="735.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::push (6,399,201,286 samples, 4.67%)</title><rect x="34.5038%" y="773" width="4.6692%" height="15" fill="rgb(231,79,45)" fg:x="47288362473" fg:w="6399201286"/><text x="34.7538%" y="783.50">alloc..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3,538,725,382 samples, 2.58%)</title><rect x="36.5909%" y="757" width="2.5820%" height="15" fill="rgb(224,100,7)" fg:x="50148838377" fg:w="3538725382"/><text x="36.8409%" y="767.50">al..</text></g><g><title>core::ptr::write (3,471,178,745 samples, 2.53%)</title><rect x="36.6402%" y="741" width="2.5327%" height="15" fill="rgb(241,198,18)" fg:x="50216385014" fg:w="3471178745"/><text x="36.8902%" y="751.50">co..</text></g><g><title>error_return (15,405,635 samples, 0.01%)</title><rect x="39.1617%" y="725" width="0.0112%" height="15" fill="rgb(252,97,53)" fg:x="53672158124" fg:w="15405635"/><text x="39.4117%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (293,363,605 samples, 0.21%)</title><rect x="39.1756%" y="773" width="0.2141%" height="15" fill="rgb(220,88,7)" fg:x="53691170453" fg:w="293363605"/><text x="39.4256%" y="783.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (293,363,605 samples, 0.21%)</title><rect x="39.1756%" y="757" width="0.2141%" height="15" fill="rgb(213,176,14)" fg:x="53691170453" fg:w="293363605"/><text x="39.4256%" y="767.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::unlock (285,818,608 samples, 0.21%)</title><rect x="39.1811%" y="741" width="0.2085%" height="15" fill="rgb(246,73,7)" fg:x="53698715450" fg:w="285818608"/><text x="39.4311%" y="751.50"></text></g><g><title>std::sync::poison::Flag::done (15,127,836 samples, 0.01%)</title><rect x="39.3896%" y="741" width="0.0110%" height="15" fill="rgb(245,64,36)" fg:x="53984534058" fg:w="15127836"/><text x="39.6396%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;alloc::collections::binary_heap::BinaryHeap&lt;rpq::schema::Item&lt;u64&gt;&gt;&gt;&gt; (1,278,623,972 samples, 0.93%)</title><rect x="39.3896%" y="773" width="0.9329%" height="15" fill="rgb(245,80,10)" fg:x="53984534058" fg:w="1278623972"/><text x="39.6396%" y="783.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,278,623,972 samples, 0.93%)</title><rect x="39.3896%" y="757" width="0.9329%" height="15" fill="rgb(232,107,50)" fg:x="53984534058" fg:w="1278623972"/><text x="39.6396%" y="767.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::write_unlock (1,263,496,136 samples, 0.92%)</title><rect x="39.4007%" y="741" width="0.9219%" height="15" fill="rgb(253,3,0)" fg:x="53999661894" fg:w="1263496136"/><text x="39.6507%" y="751.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (84,911,129 samples, 0.06%)</title><rect x="40.3226%" y="757" width="0.0620%" height="15" fill="rgb(212,99,53)" fg:x="55263158030" fg:w="84911129"/><text x="40.5726%" y="767.50"></text></g><g><title>std::sync::poison::Flag::guard (84,911,129 samples, 0.06%)</title><rect x="40.3226%" y="741" width="0.0620%" height="15" fill="rgb(249,111,54)" fg:x="55263158030" fg:w="84911129"/><text x="40.5726%" y="751.50"></text></g><g><title>std::thread::panicking (65,854,558 samples, 0.05%)</title><rect x="40.3365%" y="725" width="0.0481%" height="15" fill="rgb(249,55,30)" fg:x="55282214601" fg:w="65854558"/><text x="40.5865%" y="735.50"></text></g><g><title>std::panicking::panicking (65,854,558 samples, 0.05%)</title><rect x="40.3365%" y="709" width="0.0481%" height="15" fill="rgb(237,47,42)" fg:x="55282214601" fg:w="65854558"/><text x="40.5865%" y="719.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (65,854,558 samples, 0.05%)</title><rect x="40.3365%" y="693" width="0.0481%" height="15" fill="rgb(211,20,18)" fg:x="55282214601" fg:w="65854558"/><text x="40.5865%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (31,221,827 samples, 0.02%)</title><rect x="40.3617%" y="677" width="0.0228%" height="15" fill="rgb(231,203,46)" fg:x="55316847332" fg:w="31221827"/><text x="40.6117%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (31,221,827 samples, 0.02%)</title><rect x="40.3617%" y="661" width="0.0228%" height="15" fill="rgb(237,142,3)" fg:x="55316847332" fg:w="31221827"/><text x="40.6117%" y="671.50"></text></g><g><title>core::ops::function::FnOnce::call_once (40,962,577 samples, 0.03%)</title><rect x="41.2318%" y="693" width="0.0299%" height="15" fill="rgb(241,107,1)" fg:x="56509310362" fg:w="40962577"/><text x="41.4818%" y="703.50"></text></g><g><title>std::sys::pal::unix::os::errno (40,962,577 samples, 0.03%)</title><rect x="41.2318%" y="677" width="0.0299%" height="15" fill="rgb(229,83,13)" fg:x="56509310362" fg:w="40962577"/><text x="41.4818%" y="687.50"></text></g><g><title>syscall (40,962,577 samples, 0.03%)</title><rect x="41.2318%" y="661" width="0.0299%" height="15" fill="rgb(241,91,40)" fg:x="56509310362" fg:w="40962577"/><text x="41.4818%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (40,962,577 samples, 0.03%)</title><rect x="41.2318%" y="645" width="0.0299%" height="15" fill="rgb(225,3,45)" fg:x="56509310362" fg:w="40962577"/><text x="41.4818%" y="655.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (67,605,957 samples, 0.05%)</title><rect x="41.2124%" y="709" width="0.0493%" height="15" fill="rgb(244,223,14)" fg:x="56482667322" fg:w="67605957"/><text x="41.4624%" y="719.50"></text></g><g><title>_raw_spin_lock (15,629,743 samples, 0.01%)</title><rect x="41.4192%" y="533" width="0.0114%" height="15" fill="rgb(224,124,37)" fg:x="56766097142" fg:w="15629743"/><text x="41.6692%" y="543.50"></text></g><g><title>perf_ibs_del (78,834,499 samples, 0.06%)</title><rect x="41.4793%" y="469" width="0.0575%" height="15" fill="rgb(251,171,30)" fg:x="56848490706" fg:w="78834499"/><text x="41.7293%" y="479.50"></text></g><g><title>perf_ibs_stop (54,477,067 samples, 0.04%)</title><rect x="41.4971%" y="453" width="0.0397%" height="15" fill="rgb(236,46,54)" fg:x="56872848138" fg:w="54477067"/><text x="41.7471%" y="463.50"></text></g><g><title>native_read_msr (28,516,064 samples, 0.02%)</title><rect x="41.5160%" y="437" width="0.0208%" height="15" fill="rgb(245,213,5)" fg:x="56898809141" fg:w="28516064"/><text x="41.7660%" y="447.50"></text></g><g><title>__pmu_ctx_sched_out (126,899,543 samples, 0.09%)</title><rect x="41.4475%" y="517" width="0.0926%" height="15" fill="rgb(230,144,27)" fg:x="56804892826" fg:w="126899543"/><text x="41.6975%" y="527.50"></text></g><g><title>group_sched_out (102,488,163 samples, 0.07%)</title><rect x="41.4653%" y="501" width="0.0748%" height="15" fill="rgb(220,86,6)" fg:x="56829304206" fg:w="102488163"/><text x="41.7153%" y="511.50"></text></g><g><title>event_sched_out (94,788,820 samples, 0.07%)</title><rect x="41.4709%" y="485" width="0.0692%" height="15" fill="rgb(240,20,13)" fg:x="56837003549" fg:w="94788820"/><text x="41.7209%" y="495.50"></text></g><g><title>ctx_sched_out (162,482,792 samples, 0.12%)</title><rect x="41.4389%" y="533" width="0.1186%" height="15" fill="rgb(217,89,34)" fg:x="56793073065" fg:w="162482792"/><text x="41.6889%" y="543.50"></text></g><g><title>local_clock (19,998,574 samples, 0.01%)</title><rect x="41.5428%" y="517" width="0.0146%" height="15" fill="rgb(229,13,5)" fg:x="56935557283" fg:w="19998574"/><text x="41.7928%" y="527.50"></text></g><g><title>perf_ctx_disable (58,737,040 samples, 0.04%)</title><rect x="41.5574%" y="533" width="0.0429%" height="15" fill="rgb(244,67,35)" fg:x="56955555857" fg:w="58737040"/><text x="41.8074%" y="543.50"></text></g><g><title>perf_ctx_sched_task_cb (25,134,821 samples, 0.02%)</title><rect x="41.6003%" y="533" width="0.0183%" height="15" fill="rgb(221,40,2)" fg:x="57014292897" fg:w="25134821"/><text x="41.8503%" y="543.50"></text></g><g><title>__perf_event_task_sched_out (304,450,826 samples, 0.22%)</title><rect x="41.4051%" y="549" width="0.2221%" height="15" fill="rgb(237,157,21)" fg:x="56746767989" fg:w="304450826"/><text x="41.6551%" y="559.50"></text></g><g><title>__calc_delta.constprop.0 (19,063,894 samples, 0.01%)</title><rect x="41.7841%" y="517" width="0.0139%" height="15" fill="rgb(222,94,11)" fg:x="57266252046" fg:w="19063894"/><text x="42.0341%" y="527.50"></text></g><g><title>reweight_entity (23,224,855 samples, 0.02%)</title><rect x="41.8096%" y="517" width="0.0169%" height="15" fill="rgb(249,113,6)" fg:x="57301220469" fg:w="23224855"/><text x="42.0596%" y="527.50"></text></g><g><title>update_cfs_group (82,646,820 samples, 0.06%)</title><rect x="41.8321%" y="517" width="0.0603%" height="15" fill="rgb(238,137,36)" fg:x="57332082809" fg:w="82646820"/><text x="42.0821%" y="527.50"></text></g><g><title>__cgroup_account_cputime (43,579,536 samples, 0.03%)</title><rect x="41.9717%" y="501" width="0.0318%" height="15" fill="rgb(210,102,26)" fg:x="57523292973" fg:w="43579536"/><text x="42.2217%" y="511.50"></text></g><g><title>cpuacct_charge (19,044,918 samples, 0.01%)</title><rect x="42.0035%" y="501" width="0.0139%" height="15" fill="rgb(218,30,30)" fg:x="57566872509" fg:w="19044918"/><text x="42.2535%" y="511.50"></text></g><g><title>update_curr_se (22,758,770 samples, 0.02%)</title><rect x="42.0174%" y="501" width="0.0166%" height="15" fill="rgb(214,67,26)" fg:x="57585917427" fg:w="22758770"/><text x="42.2674%" y="511.50"></text></g><g><title>update_curr (220,634,753 samples, 0.16%)</title><rect x="41.8925%" y="517" width="0.1610%" height="15" fill="rgb(251,9,53)" fg:x="57414729629" fg:w="220634753"/><text x="42.1425%" y="527.50"></text></g><g><title>update_min_vruntime (26,688,185 samples, 0.02%)</title><rect x="42.0340%" y="501" width="0.0195%" height="15" fill="rgb(228,204,25)" fg:x="57608676197" fg:w="26688185"/><text x="42.2840%" y="511.50"></text></g><g><title>__update_load_avg_cfs_rq (34,588,258 samples, 0.03%)</title><rect x="42.1179%" y="501" width="0.0252%" height="15" fill="rgb(207,153,8)" fg:x="57723743253" fg:w="34588258"/><text x="42.3679%" y="511.50"></text></g><g><title>dequeue_task_fair (725,838,852 samples, 0.53%)</title><rect x="41.6335%" y="549" width="0.5296%" height="15" fill="rgb(242,9,16)" fg:x="57059852820" fg:w="725838852"/><text x="41.8835%" y="559.50"></text></g><g><title>dequeue_entity (684,210,384 samples, 0.50%)</title><rect x="41.6639%" y="533" width="0.4992%" height="15" fill="rgb(217,211,10)" fg:x="57101481288" fg:w="684210384"/><text x="41.9139%" y="543.50"></text></g><g><title>update_load_avg (150,327,290 samples, 0.11%)</title><rect x="42.0534%" y="517" width="0.1097%" height="15" fill="rgb(219,228,52)" fg:x="57635364382" fg:w="150327290"/><text x="42.3034%" y="527.50"></text></g><g><title>pick_next_task_fair (74,445,839 samples, 0.05%)</title><rect x="42.1714%" y="549" width="0.0543%" height="15" fill="rgb(231,92,29)" fg:x="57797048105" fg:w="74445839"/><text x="42.4214%" y="559.50"></text></g><g><title>sched_balance_newidle (61,297,191 samples, 0.04%)</title><rect x="42.1810%" y="533" width="0.0447%" height="15" fill="rgb(232,8,23)" fg:x="57810196753" fg:w="61297191"/><text x="42.4310%" y="543.50"></text></g><g><title>pick_next_task_idle (16,051,739 samples, 0.01%)</title><rect x="42.2257%" y="549" width="0.0117%" height="15" fill="rgb(216,211,34)" fg:x="57871493944" fg:w="16051739"/><text x="42.4757%" y="559.50"></text></g><g><title>__update_idle_core (16,051,739 samples, 0.01%)</title><rect x="42.2257%" y="533" width="0.0117%" height="15" fill="rgb(236,151,0)" fg:x="57871493944" fg:w="16051739"/><text x="42.4757%" y="543.50"></text></g><g><title>psi_account_irqtime (170,484,693 samples, 0.12%)</title><rect x="42.2374%" y="549" width="0.1244%" height="15" fill="rgb(209,168,3)" fg:x="57887545683" fg:w="170484693"/><text x="42.4874%" y="559.50"></text></g><g><title>psi_group_change (143,941,601 samples, 0.11%)</title><rect x="42.4182%" y="533" width="0.1050%" height="15" fill="rgb(208,129,28)" fg:x="58135279153" fg:w="143941601"/><text x="42.6682%" y="543.50"></text></g><g><title>psi_task_switch (232,470,561 samples, 0.17%)</title><rect x="42.3618%" y="549" width="0.1696%" height="15" fill="rgb(229,78,22)" fg:x="58058030376" fg:w="232470561"/><text x="42.6118%" y="559.50"></text></g><g><title>put_prev_task_fair (32,434,899 samples, 0.02%)</title><rect x="42.5315%" y="549" width="0.0237%" height="15" fill="rgb(228,187,13)" fg:x="58290500937" fg:w="32434899"/><text x="42.7815%" y="559.50"></text></g><g><title>put_prev_entity (15,655,504 samples, 0.01%)</title><rect x="42.5437%" y="533" width="0.0114%" height="15" fill="rgb(240,119,24)" fg:x="58307280332" fg:w="15655504"/><text x="42.7937%" y="543.50"></text></g><g><title>futex_wait_queue (1,719,263,596 samples, 1.25%)</title><rect x="41.3372%" y="597" width="1.2545%" height="15" fill="rgb(209,194,42)" fg:x="56653734831" fg:w="1719263596"/><text x="41.5872%" y="607.50"></text></g><g><title>schedule (1,707,564,966 samples, 1.25%)</title><rect x="41.3457%" y="581" width="1.2459%" height="15" fill="rgb(247,200,46)" fg:x="56665433461" fg:w="1707564966"/><text x="41.5957%" y="591.50"></text></g><g><title>__schedule (1,707,564,950 samples, 1.25%)</title><rect x="41.3457%" y="565" width="1.2459%" height="15" fill="rgb(218,76,16)" fg:x="56665433477" fg:w="1707564950"/><text x="41.5957%" y="575.50"></text></g><g><title>update_rq_clock (26,656,593 samples, 0.02%)</title><rect x="42.5722%" y="549" width="0.0194%" height="15" fill="rgb(225,21,48)" fg:x="58346341834" fg:w="26656593"/><text x="42.8222%" y="559.50"></text></g><g><title>_raw_spin_lock (23,427,379 samples, 0.02%)</title><rect x="42.6175%" y="565" width="0.0171%" height="15" fill="rgb(239,223,50)" fg:x="58408401950" fg:w="23427379"/><text x="42.8675%" y="575.50"></text></g><g><title>native_queued_spin_lock_slowpath (23,427,379 samples, 0.02%)</title><rect x="42.6175%" y="549" width="0.0171%" height="15" fill="rgb(244,45,21)" fg:x="58408401950" fg:w="23427379"/><text x="42.8675%" y="559.50"></text></g><g><title>futex_q_lock (54,508,677 samples, 0.04%)</title><rect x="42.6005%" y="581" width="0.0398%" height="15" fill="rgb(232,33,43)" fg:x="58385115259" fg:w="54508677"/><text x="42.8505%" y="591.50"></text></g><g><title>__x64_sys_futex (1,809,882,182 samples, 1.32%)</title><rect x="41.3314%" y="661" width="1.3206%" height="15" fill="rgb(209,8,3)" fg:x="56645818005" fg:w="1809882182"/><text x="41.5814%" y="671.50"></text></g><g><title>do_futex (1,809,882,102 samples, 1.32%)</title><rect x="41.3314%" y="645" width="1.3206%" height="15" fill="rgb(214,25,53)" fg:x="56645818085" fg:w="1809882102"/><text x="41.5814%" y="655.50"></text></g><g><title>futex_wait (1,809,882,102 samples, 1.32%)</title><rect x="41.3314%" y="629" width="1.3206%" height="15" fill="rgb(254,186,54)" fg:x="56645818085" fg:w="1809882102"/><text x="41.5814%" y="639.50"></text></g><g><title>__futex_wait (1,809,882,086 samples, 1.32%)</title><rect x="41.3314%" y="613" width="1.3206%" height="15" fill="rgb(208,174,49)" fg:x="56645818101" fg:w="1809882086"/><text x="41.5814%" y="623.50"></text></g><g><title>futex_wait_setup (82,701,760 samples, 0.06%)</title><rect x="42.5916%" y="597" width="0.0603%" height="15" fill="rgb(233,191,51)" fg:x="58372998427" fg:w="82701760"/><text x="42.8416%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (1,898,147,970 samples, 1.38%)</title><rect x="41.2867%" y="693" width="1.3850%" height="15" fill="rgb(222,134,10)" fg:x="56584591029" fg:w="1898147970"/><text x="41.5367%" y="703.50"></text></g><g><title>do_syscall_64 (1,840,676,431 samples, 1.34%)</title><rect x="41.3287%" y="677" width="1.3430%" height="15" fill="rgb(230,226,20)" fg:x="56642062568" fg:w="1840676431"/><text x="41.5787%" y="687.50"></text></g><g><title>syscall_exit_to_user_mode (27,038,812 samples, 0.02%)</title><rect x="42.6520%" y="661" width="0.0197%" height="15" fill="rgb(251,111,25)" fg:x="58455700187" fg:w="27038812"/><text x="42.9020%" y="671.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (2,147,916,597 samples, 1.57%)</title><rect x="41.2011%" y="725" width="1.5672%" height="15" fill="rgb(224,40,46)" fg:x="56467207295" fg:w="2147916597"/><text x="41.4511%" y="735.50"></text></g><g><title>syscall (2,064,850,613 samples, 1.51%)</title><rect x="41.2617%" y="709" width="1.5066%" height="15" fill="rgb(236,108,47)" fg:x="56550273279" fg:w="2064850613"/><text x="41.5117%" y="719.50"></text></g><g><title>syscall_return_via_sysret (132,384,893 samples, 0.10%)</title><rect x="42.6717%" y="693" width="0.0966%" height="15" fill="rgb(234,93,0)" fg:x="58482738999" fg:w="132384893"/><text x="42.9217%" y="703.50"></text></g><g><title>stackleak_erase (89,426,834 samples, 0.07%)</title><rect x="42.7031%" y="677" width="0.0652%" height="15" fill="rgb(224,213,32)" fg:x="58525697058" fg:w="89426834"/><text x="42.9531%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (131,958,345 samples, 0.10%)</title><rect x="43.5265%" y="709" width="0.0963%" height="15" fill="rgb(251,11,48)" fg:x="59654173443" fg:w="131958345"/><text x="43.7765%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_load (131,958,345 samples, 0.10%)</title><rect x="43.5265%" y="693" width="0.0963%" height="15" fill="rgb(236,173,5)" fg:x="59654173443" fg:w="131958345"/><text x="43.7765%" y="703.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (4,522,974,669 samples, 3.30%)</title><rect x="40.3226%" y="773" width="3.3002%" height="15" fill="rgb(230,95,12)" fg:x="55263158030" fg:w="4522974669"/><text x="40.5726%" y="783.50">std..</text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock (4,438,063,540 samples, 3.24%)</title><rect x="40.3845%" y="757" width="3.2382%" height="15" fill="rgb(232,209,1)" fg:x="55348069159" fg:w="4438063540"/><text x="40.6345%" y="767.50">std..</text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock_contended (3,409,101,179 samples, 2.49%)</title><rect x="41.1353%" y="741" width="2.4874%" height="15" fill="rgb(232,6,1)" fg:x="56377031520" fg:w="3409101179"/><text x="41.3853%" y="751.50">st..</text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::spin (1,171,008,807 samples, 0.85%)</title><rect x="42.7683%" y="725" width="0.8544%" height="15" fill="rgb(210,224,50)" fg:x="58615123892" fg:w="1171008807"/><text x="43.0183%" y="735.50"></text></g><g><title>rpq::pq::PriorityQueue&lt;T&gt;::enqueue (13,003,688,395 samples, 9.49%)</title><rect x="34.3442%" y="789" width="9.4881%" height="15" fill="rgb(228,127,35)" fg:x="47069684911" fg:w="13003688395"/><text x="34.5942%" y="799.50">rpq::pq::Prior..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (287,240,607 samples, 0.21%)</title><rect x="43.6227%" y="773" width="0.2096%" height="15" fill="rgb(245,102,45)" fg:x="59786132699" fg:w="287240607"/><text x="43.8727%" y="783.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::write (275,348,898 samples, 0.20%)</title><rect x="43.6314%" y="757" width="0.2009%" height="15" fill="rgb(214,1,49)" fg:x="59798024408" fg:w="275348898"/><text x="43.8814%" y="767.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (19,382,315 samples, 0.01%)</title><rect x="44.1401%" y="645" width="0.0141%" height="15" fill="rgb(226,163,40)" fg:x="60495201420" fg:w="19382315"/><text x="44.3901%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (74,873,969 samples, 0.05%)</title><rect x="44.1256%" y="661" width="0.0546%" height="15" fill="rgb(239,212,28)" fg:x="60475355335" fg:w="74873969"/><text x="44.3756%" y="671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (35,645,569 samples, 0.03%)</title><rect x="44.1542%" y="645" width="0.0260%" height="15" fill="rgb(220,20,13)" fg:x="60514583735" fg:w="35645569"/><text x="44.4042%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (220,019,690 samples, 0.16%)</title><rect x="44.2476%" y="645" width="0.1605%" height="15" fill="rgb(210,164,35)" fg:x="60642531438" fg:w="220019690"/><text x="44.4976%" y="655.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (496,986,358 samples, 0.36%)</title><rect x="44.0905%" y="709" width="0.3626%" height="15" fill="rgb(248,109,41)" fg:x="60427158525" fg:w="496986358"/><text x="44.3405%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (496,986,358 samples, 0.36%)</title><rect x="44.0905%" y="693" width="0.3626%" height="15" fill="rgb(238,23,50)" fg:x="60427158525" fg:w="496986358"/><text x="44.3405%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (496,986,358 samples, 0.36%)</title><rect x="44.0905%" y="677" width="0.3626%" height="15" fill="rgb(211,48,49)" fg:x="60427158525" fg:w="496986358"/><text x="44.3405%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (373,915,579 samples, 0.27%)</title><rect x="44.1803%" y="661" width="0.2728%" height="15" fill="rgb(223,36,21)" fg:x="60550229304" fg:w="373915579"/><text x="44.4303%" y="671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (61,593,755 samples, 0.04%)</title><rect x="44.4081%" y="645" width="0.0449%" height="15" fill="rgb(207,123,46)" fg:x="60862551128" fg:w="61593755"/><text x="44.6581%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (15,366,730 samples, 0.01%)</title><rect x="44.4738%" y="597" width="0.0112%" height="15" fill="rgb(240,218,32)" fg:x="60952473853" fg:w="15366730"/><text x="44.7238%" y="607.50"></text></g><g><title>hashbrown::map::make_hash (544,426,720 samples, 0.40%)</title><rect x="44.0905%" y="741" width="0.3972%" height="15" fill="rgb(252,5,43)" fg:x="60427158525" fg:w="544426720"/><text x="44.3405%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (544,426,720 samples, 0.40%)</title><rect x="44.0905%" y="725" width="0.3972%" height="15" fill="rgb(252,84,19)" fg:x="60427158525" fg:w="544426720"/><text x="44.3405%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (33,962,867 samples, 0.02%)</title><rect x="44.4629%" y="709" width="0.0248%" height="15" fill="rgb(243,152,39)" fg:x="60937622378" fg:w="33962867"/><text x="44.7129%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (33,962,867 samples, 0.02%)</title><rect x="44.4629%" y="693" width="0.0248%" height="15" fill="rgb(234,160,15)" fg:x="60937622378" fg:w="33962867"/><text x="44.7129%" y="703.50"></text></g><g><title>core::hash::Hasher::write_u64 (33,962,867 samples, 0.02%)</title><rect x="44.4629%" y="677" width="0.0248%" height="15" fill="rgb(237,34,20)" fg:x="60937622378" fg:w="33962867"/><text x="44.7129%" y="687.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (33,962,867 samples, 0.02%)</title><rect x="44.4629%" y="661" width="0.0248%" height="15" fill="rgb(229,97,13)" fg:x="60937622378" fg:w="33962867"/><text x="44.7129%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (33,962,867 samples, 0.02%)</title><rect x="44.4629%" y="645" width="0.0248%" height="15" fill="rgb(234,71,50)" fg:x="60937622378" fg:w="33962867"/><text x="44.7129%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (33,962,867 samples, 0.02%)</title><rect x="44.4629%" y="629" width="0.0248%" height="15" fill="rgb(253,155,4)" fg:x="60937622378" fg:w="33962867"/><text x="44.7129%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (19,111,392 samples, 0.01%)</title><rect x="44.4738%" y="613" width="0.0139%" height="15" fill="rgb(222,185,37)" fg:x="60952473853" fg:w="19111392"/><text x="44.7238%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (27,371,934 samples, 0.02%)</title><rect x="46.0375%" y="693" width="0.0200%" height="15" fill="rgb(251,177,13)" fg:x="63095598435" fg:w="27371934"/><text x="46.2875%" y="703.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (19,236,076 samples, 0.01%)</title><rect x="46.0602%" y="677" width="0.0140%" height="15" fill="rgb(250,179,40)" fg:x="63126777941" fg:w="19236076"/><text x="46.3102%" y="687.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (19,236,076 samples, 0.01%)</title><rect x="46.0602%" y="661" width="0.0140%" height="15" fill="rgb(242,44,2)" fg:x="63126777941" fg:w="19236076"/><text x="46.3102%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (19,236,076 samples, 0.01%)</title><rect x="46.0602%" y="645" width="0.0140%" height="15" fill="rgb(216,177,13)" fg:x="63126777941" fg:w="19236076"/><text x="46.3102%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (19,236,076 samples, 0.01%)</title><rect x="46.0602%" y="629" width="0.0140%" height="15" fill="rgb(216,106,43)" fg:x="63126777941" fg:w="19236076"/><text x="46.3102%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (26,867,434 samples, 0.02%)</title><rect x="46.0602%" y="693" width="0.0196%" height="15" fill="rgb(216,183,2)" fg:x="63126777941" fg:w="26867434"/><text x="46.3102%" y="703.50"></text></g><g><title>hashbrown::raw::h2 (138,611,141 samples, 0.10%)</title><rect x="46.0798%" y="693" width="0.1011%" height="15" fill="rgb(249,75,3)" fg:x="63153645375" fg:w="138611141"/><text x="46.3298%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3,571,124,619 samples, 2.61%)</title><rect x="43.8323%" y="789" width="2.6057%" height="15" fill="rgb(219,67,39)" fg:x="60073373306" fg:w="3571124619"/><text x="44.0823%" y="799.50">st..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3,571,124,619 samples, 2.61%)</title><rect x="43.8323%" y="773" width="2.6057%" height="15" fill="rgb(253,228,2)" fg:x="60073373306" fg:w="3571124619"/><text x="44.0823%" y="783.50">ha..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3,571,124,619 samples, 2.61%)</title><rect x="43.8323%" y="757" width="2.6057%" height="15" fill="rgb(235,138,27)" fg:x="60073373306" fg:w="3571124619"/><text x="44.0823%" y="767.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2,672,912,680 samples, 1.95%)</title><rect x="44.4877%" y="741" width="1.9503%" height="15" fill="rgb(236,97,51)" fg:x="60971585245" fg:w="2672912680"/><text x="44.7377%" y="751.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2,672,912,680 samples, 1.95%)</title><rect x="44.4877%" y="725" width="1.9503%" height="15" fill="rgb(240,80,30)" fg:x="60971585245" fg:w="2672912680"/><text x="44.7377%" y="735.50">h..</text></g><g><title>hashbrown::raw::RawTableInner::find_inner (2,672,912,680 samples, 1.95%)</title><rect x="44.4877%" y="709" width="1.9503%" height="15" fill="rgb(230,178,19)" fg:x="60971585245" fg:w="2672912680"/><text x="44.7377%" y="719.50">h..</text></g><g><title>hashbrown::raw::sse2::Group::match_byte (347,860,567 samples, 0.25%)</title><rect x="46.1842%" y="693" width="0.2538%" height="15" fill="rgb(210,190,27)" fg:x="63296637358" fg:w="347860567"/><text x="46.4342%" y="703.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (347,860,567 samples, 0.25%)</title><rect x="46.1842%" y="677" width="0.2538%" height="15" fill="rgb(222,107,31)" fg:x="63296637358" fg:w="347860567"/><text x="46.4342%" y="687.50"></text></g><g><title>std::sync::poison::Flag::borrow (295,245,362 samples, 0.22%)</title><rect x="46.4380%" y="757" width="0.2154%" height="15" fill="rgb(216,127,34)" fg:x="63644497925" fg:w="295245362"/><text x="46.6880%" y="767.50"></text></g><g><title>std::sync::poison::Flag::get (26,618,957 samples, 0.02%)</title><rect x="46.6340%" y="741" width="0.0194%" height="15" fill="rgb(234,116,52)" fg:x="63913124330" fg:w="26618957"/><text x="46.8840%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (26,618,957 samples, 0.02%)</title><rect x="46.6340%" y="725" width="0.0194%" height="15" fill="rgb(222,124,15)" fg:x="63913124330" fg:w="26618957"/><text x="46.8840%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_load (26,618,957 samples, 0.02%)</title><rect x="46.6340%" y="709" width="0.0194%" height="15" fill="rgb(231,179,28)" fg:x="63913124330" fg:w="26618957"/><text x="46.8840%" y="719.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (298,823,351 samples, 0.22%)</title><rect x="46.4380%" y="773" width="0.2180%" height="15" fill="rgb(226,93,45)" fg:x="63644497925" fg:w="298823351"/><text x="46.6880%" y="783.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_read (354,756,770 samples, 0.26%)</title><rect x="48.1344%" y="741" width="0.2588%" height="15" fill="rgb(215,8,51)" fg:x="65969502476" fg:w="354756770"/><text x="48.3844%" y="751.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_until (354,756,770 samples, 0.26%)</title><rect x="48.1344%" y="725" width="0.2588%" height="15" fill="rgb(223,106,5)" fg:x="65969502476" fg:w="354756770"/><text x="48.3844%" y="735.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_read::_{{closure}} (350,963,498 samples, 0.26%)</title><rect x="48.1372%" y="709" width="0.2561%" height="15" fill="rgb(250,191,5)" fg:x="65973295748" fg:w="350963498"/><text x="48.3872%" y="719.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read_contended (584,469,287 samples, 0.43%)</title><rect x="47.9782%" y="757" width="0.4265%" height="15" fill="rgb(242,132,44)" fg:x="65755440347" fg:w="584469287"/><text x="48.2282%" y="767.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::is_read_lockable (15,650,388 samples, 0.01%)</title><rect x="48.3933%" y="741" width="0.0114%" height="15" fill="rgb(251,152,29)" fg:x="66324259246" fg:w="15650388"/><text x="48.6433%" y="751.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::is_read_lockable (3,923,597,391 samples, 2.86%)</title><rect x="48.4047%" y="757" width="2.8628%" height="15" fill="rgb(218,179,5)" fg:x="66339909634" fg:w="3923597391"/><text x="48.6547%" y="767.50">st..</text></g><g><title>asm_sysvec_apic_timer_interrupt (15,194,525 samples, 0.01%)</title><rect x="51.2564%" y="741" width="0.0111%" height="15" fill="rgb(227,67,19)" fg:x="70248312500" fg:w="15194525"/><text x="51.5064%" y="751.50"></text></g><g><title>sysvec_apic_timer_interrupt (15,194,525 samples, 0.01%)</title><rect x="51.2564%" y="725" width="0.0111%" height="15" fill="rgb(233,119,31)" fg:x="70248312500" fg:w="15194525"/><text x="51.5064%" y="735.50"></text></g><g><title>__sysvec_apic_timer_interrupt (15,194,525 samples, 0.01%)</title><rect x="51.2564%" y="709" width="0.0111%" height="15" fill="rgb(241,120,22)" fg:x="70248312500" fg:w="15194525"/><text x="51.5064%" y="719.50"></text></g><g><title>hrtimer_interrupt (15,194,525 samples, 0.01%)</title><rect x="51.2564%" y="693" width="0.0111%" height="15" fill="rgb(224,102,30)" fg:x="70248312500" fg:w="15194525"/><text x="51.5064%" y="703.50"></text></g><g><title>__hrtimer_run_queues (15,194,525 samples, 0.01%)</title><rect x="51.2564%" y="677" width="0.0111%" height="15" fill="rgb(210,164,37)" fg:x="70248312500" fg:w="15194525"/><text x="51.5064%" y="687.50"></text></g><g><title>tick_nohz_handler (15,194,525 samples, 0.01%)</title><rect x="51.2564%" y="661" width="0.0111%" height="15" fill="rgb(226,191,16)" fg:x="70248312500" fg:w="15194525"/><text x="51.5064%" y="671.50"></text></g><g><title>update_process_times (15,194,525 samples, 0.01%)</title><rect x="51.2564%" y="645" width="0.0111%" height="15" fill="rgb(214,40,45)" fg:x="70248312500" fg:w="15194525"/><text x="51.5064%" y="655.50"></text></g><g><title>sched_tick (15,194,525 samples, 0.01%)</title><rect x="51.2564%" y="629" width="0.0111%" height="15" fill="rgb(244,29,26)" fg:x="70248312500" fg:w="15194525"/><text x="51.5064%" y="639.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (6,638,094,435 samples, 4.84%)</title><rect x="46.4380%" y="789" width="4.8435%" height="15" fill="rgb(216,16,5)" fg:x="63644497925" fg:w="6638094435"/><text x="46.6880%" y="799.50">std::s..</text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read (6,339,271,084 samples, 4.63%)</title><rect x="46.6560%" y="773" width="4.6254%" height="15" fill="rgb(249,76,35)" fg:x="63943321276" fg:w="6339271084"/><text x="46.9060%" y="783.50">std::..</text></g><g><title>uuid::v4::&lt;impl uuid::Uuid&gt;::new_v4 (19,085,335 samples, 0.01%)</title><rect x="51.2675%" y="757" width="0.0139%" height="15" fill="rgb(207,11,44)" fg:x="70263507025" fg:w="19085335"/><text x="51.5175%" y="767.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read_contended (30,866,412 samples, 0.02%)</title><rect x="51.2897%" y="789" width="0.0225%" height="15" fill="rgb(228,190,49)" fg:x="70293971006" fg:w="30866412"/><text x="51.5397%" y="799.50"></text></g><g><title>alloc::string::String::new (39,209,310 samples, 0.03%)</title><rect x="51.3123%" y="741" width="0.0286%" height="15" fill="rgb(214,173,12)" fg:x="70324837418" fg:w="39209310"/><text x="51.5623%" y="751.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (42,556,773 samples, 0.03%)</title><rect x="51.3123%" y="789" width="0.0311%" height="15" fill="rgb(218,26,35)" fg:x="70324837418" fg:w="42556773"/><text x="51.5623%" y="799.50"></text></g><g><title>rpq::main::_{{closure}} (42,556,773 samples, 0.03%)</title><rect x="51.3123%" y="773" width="0.0311%" height="15" fill="rgb(220,200,19)" fg:x="70324837418" fg:w="42556773"/><text x="51.5623%" y="783.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (42,556,773 samples, 0.03%)</title><rect x="51.3123%" y="757" width="0.0311%" height="15" fill="rgb(239,95,49)" fg:x="70324837418" fg:w="42556773"/><text x="51.5623%" y="767.50"></text></g><g><title>native_queued_spin_lock_slowpath (1,506,211,341 samples, 1.10%)</title><rect x="52.9465%" y="677" width="1.0990%" height="15" fill="rgb(235,85,53)" fg:x="72564604798" fg:w="1506211341"/><text x="53.1965%" y="687.50"></text></g><g><title>preempt_count_add (22,960,260 samples, 0.02%)</title><rect x="54.0455%" y="677" width="0.0168%" height="15" fill="rgb(233,133,31)" fg:x="74070816139" fg:w="22960260"/><text x="54.2955%" y="687.50"></text></g><g><title>_raw_spin_lock (1,592,283,998 samples, 1.16%)</title><rect x="52.9032%" y="693" width="1.1618%" height="15" fill="rgb(218,25,20)" fg:x="72505222244" fg:w="1592283998"/><text x="53.1532%" y="703.50"></text></g><g><title>_raw_spin_unlock (39,862,336 samples, 0.03%)</title><rect x="54.0650%" y="693" width="0.0291%" height="15" fill="rgb(252,210,38)" fg:x="74097506242" fg:w="39862336"/><text x="54.3150%" y="703.50"></text></g><g><title>futex_hash (80,000,803 samples, 0.06%)</title><rect x="54.1023%" y="693" width="0.0584%" height="15" fill="rgb(242,134,21)" fg:x="74148594888" fg:w="80000803"/><text x="54.3523%" y="703.50"></text></g><g><title>futex_wake_mark (190,428,256 samples, 0.14%)</title><rect x="54.1606%" y="693" width="0.1389%" height="15" fill="rgb(213,28,48)" fg:x="74228595691" fg:w="190428256"/><text x="54.4106%" y="703.50"></text></g><g><title>__futex_unqueue (63,586,847 samples, 0.05%)</title><rect x="54.2532%" y="677" width="0.0464%" height="15" fill="rgb(250,196,2)" fg:x="74355437100" fg:w="63586847"/><text x="54.5032%" y="687.50"></text></g><g><title>plist_del (29,088,697 samples, 0.02%)</title><rect x="54.2783%" y="661" width="0.0212%" height="15" fill="rgb(227,5,17)" fg:x="74389935250" fg:w="29088697"/><text x="54.5283%" y="671.50"></text></g><g><title>__list_del_entry_valid_or_report (29,088,697 samples, 0.02%)</title><rect x="54.2783%" y="645" width="0.0212%" height="15" fill="rgb(221,226,24)" fg:x="74389935250" fg:w="29088697"/><text x="54.5283%" y="655.50"></text></g><g><title>get_futex_key (27,633,297 samples, 0.02%)</title><rect x="54.2996%" y="693" width="0.0202%" height="15" fill="rgb(211,5,48)" fg:x="74419023947" fg:w="27633297"/><text x="54.5496%" y="703.50"></text></g><g><title>wake_q_add_safe (32,291,738 samples, 0.02%)</title><rect x="54.3254%" y="693" width="0.0236%" height="15" fill="rgb(219,150,6)" fg:x="74454361373" fg:w="32291738"/><text x="54.5754%" y="703.50"></text></g><g><title>__task_rq_lock (298,329,080 samples, 0.22%)</title><rect x="55.9380%" y="661" width="0.2177%" height="15" fill="rgb(251,46,16)" fg:x="76664471564" fg:w="298329080"/><text x="56.1880%" y="671.50"></text></g><g><title>raw_spin_rq_lock_nested (294,019,658 samples, 0.21%)</title><rect x="55.9411%" y="645" width="0.2145%" height="15" fill="rgb(220,204,40)" fg:x="76668780986" fg:w="294019658"/><text x="56.1911%" y="655.50"></text></g><g><title>_raw_spin_lock (294,019,658 samples, 0.21%)</title><rect x="55.9411%" y="629" width="0.2145%" height="15" fill="rgb(211,85,2)" fg:x="76668780986" fg:w="294019658"/><text x="56.1911%" y="639.50"></text></g><g><title>native_queued_spin_lock_slowpath (290,266,684 samples, 0.21%)</title><rect x="55.9438%" y="613" width="0.2118%" height="15" fill="rgb(229,17,7)" fg:x="76672533960" fg:w="290266684"/><text x="56.1938%" y="623.50"></text></g><g><title>_raw_spin_lock_irqsave (129,594,382 samples, 0.09%)</title><rect x="56.1556%" y="661" width="0.0946%" height="15" fill="rgb(239,72,28)" fg:x="76962800644" fg:w="129594382"/><text x="56.4056%" y="671.50"></text></g><g><title>_raw_spin_unlock_irqrestore (15,200,684 samples, 0.01%)</title><rect x="56.2502%" y="661" width="0.0111%" height="15" fill="rgb(230,47,54)" fg:x="77092395026" fg:w="15200684"/><text x="56.5002%" y="671.50"></text></g><g><title>available_idle_cpu (16,335,699 samples, 0.01%)</title><rect x="56.3487%" y="645" width="0.0119%" height="15" fill="rgb(214,50,8)" fg:x="77227345417" fg:w="16335699"/><text x="56.5987%" y="655.50"></text></g><g><title>select_task_rq_fair (141,217,072 samples, 0.10%)</title><rect x="56.2613%" y="661" width="0.1030%" height="15" fill="rgb(216,198,43)" fg:x="77107595710" fg:w="141217072"/><text x="56.5113%" y="671.50"></text></g><g><title>call_function_single_prep_ipi (124,303,953 samples, 0.09%)</title><rect x="56.5450%" y="629" width="0.0907%" height="15" fill="rgb(234,20,35)" fg:x="77496399355" fg:w="124303953"/><text x="56.7950%" y="639.50"></text></g><g><title>__smp_call_single_queue (232,149,088 samples, 0.17%)</title><rect x="56.5391%" y="645" width="0.1694%" height="15" fill="rgb(254,45,19)" fg:x="77488419541" fg:w="232149088"/><text x="56.7891%" y="655.50"></text></g><g><title>llist_add_batch (99,865,321 samples, 0.07%)</title><rect x="56.6357%" y="629" width="0.0729%" height="15" fill="rgb(219,14,44)" fg:x="77620703308" fg:w="99865321"/><text x="56.8857%" y="639.50"></text></g><g><title>default_send_IPI_single_phys (146,351,885 samples, 0.11%)</title><rect x="56.7114%" y="645" width="0.1068%" height="15" fill="rgb(217,220,26)" fg:x="77724560234" fg:w="146351885"/><text x="56.9614%" y="655.50"></text></g><g><title>do_futex (6,141,822,936 samples, 4.48%)</title><rect x="52.3654%" y="725" width="4.4814%" height="15" fill="rgb(213,158,28)" fg:x="71768204049" fg:w="6141822936"/><text x="52.6154%" y="735.50">do_fu..</text></g><g><title>futex_wake (6,095,225,512 samples, 4.45%)</title><rect x="52.3994%" y="709" width="4.4474%" height="15" fill="rgb(252,51,52)" fg:x="71814801473" fg:w="6095225512"/><text x="52.6494%" y="719.50">futex..</text></g><g><title>wake_up_q (3,423,373,874 samples, 2.50%)</title><rect x="54.3489%" y="693" width="2.4979%" height="15" fill="rgb(246,89,16)" fg:x="74486653111" fg:w="3423373874"/><text x="54.5989%" y="703.50">wa..</text></g><g><title>try_to_wake_up (3,382,140,841 samples, 2.47%)</title><rect x="54.3790%" y="677" width="2.4678%" height="15" fill="rgb(216,158,49)" fg:x="74527886144" fg:w="3382140841"/><text x="54.6290%" y="687.50">tr..</text></g><g><title>ttwu_queue_wakelist (653,611,814 samples, 0.48%)</title><rect x="56.3699%" y="661" width="0.4769%" height="15" fill="rgb(236,107,19)" fg:x="77256415171" fg:w="653611814"/><text x="56.6199%" y="671.50"></text></g><g><title>sched_clock_cpu (35,328,657 samples, 0.03%)</title><rect x="56.8210%" y="645" width="0.0258%" height="15" fill="rgb(228,185,30)" fg:x="77874698328" fg:w="35328657"/><text x="57.0710%" y="655.50"></text></g><g><title>sched_clock (16,184,998 samples, 0.01%)</title><rect x="56.8350%" y="629" width="0.0118%" height="15" fill="rgb(246,134,8)" fg:x="77893841987" fg:w="16184998"/><text x="57.0850%" y="639.50"></text></g><g><title>__x64_sys_futex (6,191,882,743 samples, 4.52%)</title><rect x="52.3317%" y="741" width="4.5179%" height="15" fill="rgb(214,143,50)" fg:x="71721958527" fg:w="6191882743"/><text x="52.5817%" y="751.50">__x64..</text></g><g><title>syscall_exit_to_user_mode (226,097,264 samples, 0.16%)</title><rect x="56.8552%" y="741" width="0.1650%" height="15" fill="rgb(228,75,8)" fg:x="77921605463" fg:w="226097264"/><text x="57.1052%" y="751.50"></text></g><g><title>syscall_exit_to_user_mode_prepare (42,686,713 samples, 0.03%)</title><rect x="56.9890%" y="725" width="0.0311%" height="15" fill="rgb(207,175,4)" fg:x="78105016014" fg:w="42686713"/><text x="57.2390%" y="735.50"></text></g><g><title>do_syscall_64 (6,712,717,969 samples, 4.90%)</title><rect x="52.1249%" y="757" width="4.8979%" height="15" fill="rgb(205,108,24)" fg:x="71438642306" fg:w="6712717969"/><text x="52.3749%" y="767.50">do_sys..</text></g><g><title>srso_alias_return_thunk (30,881,046 samples, 0.02%)</title><rect x="57.0229%" y="757" width="0.0225%" height="15" fill="rgb(244,120,49)" fg:x="78151360275" fg:w="30881046"/><text x="57.2729%" y="767.50"></text></g><g><title>srso_alias_safe_ret (30,881,046 samples, 0.02%)</title><rect x="57.0229%" y="741" width="0.0225%" height="15" fill="rgb(223,47,38)" fg:x="78151360275" fg:w="30881046"/><text x="57.2729%" y="751.50"></text></g><g><title>entry_SYSCALL_64 (7,611,914,944 samples, 5.55%)</title><rect x="51.5202%" y="773" width="5.5540%" height="15" fill="rgb(229,179,11)" fg:x="70609827814" fg:w="7611914944"/><text x="51.7702%" y="783.50">entry_S..</text></g><g><title>srso_alias_untrain_ret (39,501,437 samples, 0.03%)</title><rect x="57.0454%" y="757" width="0.0288%" height="15" fill="rgb(231,122,1)" fg:x="78182241321" fg:w="39501437"/><text x="57.2954%" y="767.50"></text></g><g><title>entry_SYSRETQ_unsafe_stack (45,692,587 samples, 0.03%)</title><rect x="57.0742%" y="773" width="0.0333%" height="15" fill="rgb(245,119,9)" fg:x="78221742758" fg:w="45692587"/><text x="57.3242%" y="783.50"></text></g><g><title>syscall (8,780,944,239 samples, 6.41%)</title><rect x="51.3433%" y="789" width="6.4070%" height="15" fill="rgb(241,163,25)" fg:x="70367394191" fg:w="8780944239"/><text x="51.5933%" y="799.50">syscall</text></g><g><title>syscall_return_via_sysret (880,903,085 samples, 0.64%)</title><rect x="57.1076%" y="773" width="0.6427%" height="15" fill="rgb(217,214,3)" fg:x="78267435345" fg:w="880903085"/><text x="57.3576%" y="783.50"></text></g><g><title>stackleak_erase (339,177,809 samples, 0.25%)</title><rect x="57.5028%" y="757" width="0.2475%" height="15" fill="rgb(240,86,28)" fg:x="78809160621" fg:w="339177809"/><text x="57.7528%" y="767.50"></text></g><g><title>uuid::builder::&lt;impl uuid::Uuid&gt;::from_u128 (63,235,861 samples, 0.05%)</title><rect x="57.7670%" y="773" width="0.0461%" height="15" fill="rgb(215,47,9)" fg:x="79171285408" fg:w="63235861"/><text x="58.0170%" y="783.50"></text></g><g><title>rpq::RPQ&lt;T&gt;::enqueue (59,142,702,667 samples, 43.15%)</title><rect x="14.7540%" y="805" width="43.1533%" height="15" fill="rgb(252,25,45)" fg:x="20220764314" fg:w="59142702667"/><text x="15.0040%" y="815.50">rpq::RPQ&lt;T&gt;::enqueue</text></g><g><title>uuid::v4::&lt;impl uuid::Uuid&gt;::new_v4 (215,128,551 samples, 0.16%)</title><rect x="57.7503%" y="789" width="0.1570%" height="15" fill="rgb(251,164,9)" fg:x="79148338430" fg:w="215128551"/><text x="58.0003%" y="799.50"></text></g><g><title>uuid::rng::u128 (128,945,712 samples, 0.09%)</title><rect x="57.8132%" y="773" width="0.0941%" height="15" fill="rgb(233,194,0)" fg:x="79234521269" fg:w="128945712"/><text x="58.0632%" y="783.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (73,975,042 samples, 0.05%)</title><rect x="57.8533%" y="757" width="0.0540%" height="15" fill="rgb(249,111,24)" fg:x="79289491939" fg:w="73975042"/><text x="58.1033%" y="767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (57,353,709 samples, 0.04%)</title><rect x="57.9213%" y="789" width="0.0418%" height="15" fill="rgb(250,223,3)" fg:x="79382725282" fg:w="57353709"/><text x="58.1713%" y="799.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (57,353,709 samples, 0.04%)</title><rect x="57.9213%" y="773" width="0.0418%" height="15" fill="rgb(236,178,37)" fg:x="79382725282" fg:w="57353709"/><text x="58.1713%" y="783.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (57,353,709 samples, 0.04%)</title><rect x="57.9213%" y="757" width="0.0418%" height="15" fill="rgb(241,158,50)" fg:x="79382725282" fg:w="57353709"/><text x="58.1713%" y="767.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (57,353,709 samples, 0.04%)</title><rect x="57.9213%" y="741" width="0.0418%" height="15" fill="rgb(213,121,41)" fg:x="79382725282" fg:w="57353709"/><text x="58.1713%" y="751.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (57,353,709 samples, 0.04%)</title><rect x="57.9213%" y="725" width="0.0418%" height="15" fill="rgb(240,92,3)" fg:x="79382725282" fg:w="57353709"/><text x="58.1713%" y="735.50"></text></g><g><title>std::sync::poison::Flag::guard (78,469,581 samples, 0.06%)</title><rect x="57.9632%" y="757" width="0.0573%" height="15" fill="rgb(205,123,3)" fg:x="79440078991" fg:w="78469581"/><text x="58.2132%" y="767.50"></text></g><g><title>std::thread::panicking (62,738,560 samples, 0.05%)</title><rect x="57.9746%" y="741" width="0.0458%" height="15" fill="rgb(205,97,47)" fg:x="79455810012" fg:w="62738560"/><text x="58.2246%" y="751.50"></text></g><g><title>std::panicking::panicking (62,738,560 samples, 0.05%)</title><rect x="57.9746%" y="725" width="0.0458%" height="15" fill="rgb(247,152,14)" fg:x="79455810012" fg:w="62738560"/><text x="58.2246%" y="735.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (62,738,560 samples, 0.05%)</title><rect x="57.9746%" y="709" width="0.0458%" height="15" fill="rgb(248,195,53)" fg:x="79455810012" fg:w="62738560"/><text x="58.2246%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (58,903,880 samples, 0.04%)</title><rect x="57.9774%" y="693" width="0.0430%" height="15" fill="rgb(226,201,16)" fg:x="79459644692" fg:w="58903880"/><text x="58.2274%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (58,903,880 samples, 0.04%)</title><rect x="57.9774%" y="677" width="0.0430%" height="15" fill="rgb(205,98,0)" fg:x="79459644692" fg:w="58903880"/><text x="58.2274%" y="687.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (82,405,491 samples, 0.06%)</title><rect x="57.9632%" y="773" width="0.0601%" height="15" fill="rgb(214,191,48)" fg:x="79440078991" fg:w="82405491"/><text x="58.2132%" y="783.50"></text></g><g><title>rpq::bpq::BucketPriorityQueue::add_bucket (174,278,573 samples, 0.13%)</title><rect x="57.9073%" y="805" width="0.1272%" height="15" fill="rgb(237,112,39)" fg:x="79363466981" fg:w="174278573"/><text x="58.1573%" y="815.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (97,666,563 samples, 0.07%)</title><rect x="57.9632%" y="789" width="0.0713%" height="15" fill="rgb(247,203,27)" fg:x="79440078991" fg:w="97666563"/><text x="58.2132%" y="799.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock (15,261,072 samples, 0.01%)</title><rect x="58.0233%" y="773" width="0.0111%" height="15" fill="rgb(235,124,28)" fg:x="79522484482" fg:w="15261072"/><text x="58.2733%" y="783.50"></text></g><g><title>&lt;std::sys::pal::unix::time::Timespec as core::convert::From&lt;libc::unix::timespec&gt;&gt;::from (54,252,919 samples, 0.04%)</title><rect x="58.0495%" y="789" width="0.0396%" height="15" fill="rgb(208,207,46)" fg:x="79558401045" fg:w="54252919"/><text x="58.2995%" y="799.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::new (54,252,919 samples, 0.04%)</title><rect x="58.0495%" y="773" width="0.0396%" height="15" fill="rgb(234,176,4)" fg:x="79558401045" fg:w="54252919"/><text x="58.2995%" y="783.50"></text></g><g><title>[libc.so.6] (20,351,223 samples, 0.01%)</title><rect x="58.1742%" y="773" width="0.0148%" height="15" fill="rgb(230,133,28)" fg:x="79729324645" fg:w="20351223"/><text x="58.4242%" y="783.50"></text></g><g><title>__vdso_clock_gettime (707,166,032 samples, 0.52%)</title><rect x="58.1891%" y="773" width="0.5160%" height="15" fill="rgb(211,137,40)" fg:x="79749675868" fg:w="707166032"/><text x="58.4391%" y="783.50"></text></g><g><title>clock_gettime (860,203,696 samples, 0.63%)</title><rect x="58.0891%" y="789" width="0.6276%" height="15" fill="rgb(254,35,13)" fg:x="79612653964" fg:w="860203696"/><text x="58.3391%" y="799.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (23,360,615 samples, 0.02%)</title><rect x="58.7365%" y="725" width="0.0170%" height="15" fill="rgb(225,49,51)" fg:x="80499902815" fg:w="23360615"/><text x="58.9865%" y="735.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (20,482,255 samples, 0.01%)</title><rect x="58.7535%" y="725" width="0.0149%" height="15" fill="rgb(251,10,15)" fg:x="80523263430" fg:w="20482255"/><text x="59.0035%" y="735.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1,013,280,328 samples, 0.74%)</title><rect x="58.0432%" y="805" width="0.7393%" height="15" fill="rgb(228,207,15)" fg:x="79549777763" fg:w="1013280328"/><text x="58.2932%" y="815.50"></text></g><g><title>rand::rng::Rng::gen_range (82,503,286 samples, 0.06%)</title><rect x="58.7223%" y="789" width="0.0602%" height="15" fill="rgb(241,99,19)" fg:x="80480554805" fg:w="82503286"/><text x="58.9723%" y="799.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::sample_single (74,911,811 samples, 0.05%)</title><rect x="58.7279%" y="773" width="0.0547%" height="15" fill="rgb(207,104,49)" fg:x="80488146280" fg:w="74911811"/><text x="58.9779%" y="783.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u64&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (74,911,811 samples, 0.05%)</title><rect x="58.7279%" y="757" width="0.0547%" height="15" fill="rgb(234,99,18)" fg:x="80488146280" fg:w="74911811"/><text x="58.9779%" y="767.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u64&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single_inclusive (74,911,811 samples, 0.05%)</title><rect x="58.7279%" y="741" width="0.0547%" height="15" fill="rgb(213,191,49)" fg:x="80488146280" fg:w="74911811"/><text x="58.9779%" y="751.50"></text></g><g><title>rand::rng::Rng::gen (19,312,406 samples, 0.01%)</title><rect x="58.7685%" y="725" width="0.0141%" height="15" fill="rgb(210,226,19)" fg:x="80543745685" fg:w="19312406"/><text x="59.0185%" y="735.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u64&gt; for rand::distributions::Standard&gt;::sample (19,312,406 samples, 0.01%)</title><rect x="58.7685%" y="709" width="0.0141%" height="15" fill="rgb(229,97,18)" fg:x="80543745685" fg:w="19312406"/><text x="59.0185%" y="719.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (19,312,406 samples, 0.01%)</title><rect x="58.7685%" y="693" width="0.0141%" height="15" fill="rgb(211,167,15)" fg:x="80543745685" fg:w="19312406"/><text x="59.0185%" y="703.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (19,312,406 samples, 0.01%)</title><rect x="58.7685%" y="677" width="0.0141%" height="15" fill="rgb(210,169,34)" fg:x="80543745685" fg:w="19312406"/><text x="59.0185%" y="687.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (19,312,406 samples, 0.01%)</title><rect x="58.7685%" y="661" width="0.0141%" height="15" fill="rgb(241,121,31)" fg:x="80543745685" fg:w="19312406"/><text x="59.0185%" y="671.50"></text></g><g><title>std::time::Instant::now (21,883,410 samples, 0.02%)</title><rect x="58.7825%" y="805" width="0.0160%" height="15" fill="rgb(232,40,11)" fg:x="80563058091" fg:w="21883410"/><text x="59.0325%" y="815.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (21,883,410 samples, 0.02%)</title><rect x="58.7825%" y="789" width="0.0160%" height="15" fill="rgb(205,86,26)" fg:x="80563058091" fg:w="21883410"/><text x="59.0325%" y="799.50"></text></g><g><title>uuid::builder::&lt;impl uuid::Uuid&gt;::from_u128 (179,138,509 samples, 0.13%)</title><rect x="58.8326%" y="789" width="0.1307%" height="15" fill="rgb(231,126,28)" fg:x="80631630578" fg:w="179138509"/><text x="59.0826%" y="799.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (230,979,230 samples, 0.17%)</title><rect x="58.9908%" y="773" width="0.1685%" height="15" fill="rgb(219,221,18)" fg:x="80848453704" fg:w="230979230"/><text x="59.2408%" y="783.50"></text></g><g><title>getrandom::lazy::LazyBool::unsync_init (19,538,456 samples, 0.01%)</title><rect x="59.1925%" y="725" width="0.0143%" height="15" fill="rgb(211,40,0)" fg:x="81124889753" fg:w="19538456"/><text x="59.4425%" y="735.50"></text></g><g><title>getrandom::lazy::LazyUsize::unsync_init (19,538,456 samples, 0.01%)</title><rect x="59.1925%" y="709" width="0.0143%" height="15" fill="rgb(239,85,43)" fg:x="81124889753" fg:w="19538456"/><text x="59.4425%" y="719.50"></text></g><g><title>__rust_dealloc (17,279,587 samples, 0.01%)</title><rect x="59.6835%" y="677" width="0.0126%" height="15" fill="rgb(231,55,21)" fg:x="81797887440" fg:w="17279587"/><text x="59.9335%" y="687.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (34,928,489 samples, 0.03%)</title><rect x="60.0282%" y="661" width="0.0255%" height="15" fill="rgb(225,184,43)" fg:x="82270233638" fg:w="34928489"/><text x="60.2782%" y="671.50"></text></g><g><title>sysvec_apic_timer_interrupt (34,928,489 samples, 0.03%)</title><rect x="60.0282%" y="645" width="0.0255%" height="15" fill="rgb(251,158,41)" fg:x="82270233638" fg:w="34928489"/><text x="60.2782%" y="655.50"></text></g><g><title>__sysvec_apic_timer_interrupt (27,108,146 samples, 0.02%)</title><rect x="60.0339%" y="629" width="0.0198%" height="15" fill="rgb(234,159,37)" fg:x="82278053981" fg:w="27108146"/><text x="60.2839%" y="639.50"></text></g><g><title>hrtimer_interrupt (27,108,146 samples, 0.02%)</title><rect x="60.0339%" y="613" width="0.0198%" height="15" fill="rgb(216,204,22)" fg:x="82278053981" fg:w="27108146"/><text x="60.2839%" y="623.50"></text></g><g><title>__hrtimer_run_queues (23,161,151 samples, 0.02%)</title><rect x="60.0368%" y="597" width="0.0169%" height="15" fill="rgb(214,17,3)" fg:x="82282000976" fg:w="23161151"/><text x="60.2868%" y="607.50"></text></g><g><title>tick_nohz_handler (23,161,151 samples, 0.02%)</title><rect x="60.0368%" y="581" width="0.0169%" height="15" fill="rgb(212,111,17)" fg:x="82282000976" fg:w="23161151"/><text x="60.2868%" y="591.50"></text></g><g><title>update_process_times (23,161,151 samples, 0.02%)</title><rect x="60.0368%" y="565" width="0.0169%" height="15" fill="rgb(221,157,24)" fg:x="82282000976" fg:w="23161151"/><text x="60.2868%" y="575.50"></text></g><g><title>sched_tick (23,161,151 samples, 0.02%)</title><rect x="60.0368%" y="549" width="0.0169%" height="15" fill="rgb(252,16,13)" fg:x="82282000976" fg:w="23161151"/><text x="60.2868%" y="559.50"></text></g><g><title>_copy_to_iter (593,381,819 samples, 0.43%)</title><rect x="61.1815%" y="597" width="0.4330%" height="15" fill="rgb(221,62,2)" fg:x="83850904665" fg:w="593381819"/><text x="61.4315%" y="607.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (15,479,517 samples, 0.01%)</title><rect x="61.9158%" y="581" width="0.0113%" height="15" fill="rgb(247,87,22)" fg:x="84857237457" fg:w="15479517"/><text x="62.1658%" y="591.50"></text></g><g><title>check_preemption_disabled (109,847,074 samples, 0.08%)</title><rect x="61.9271%" y="581" width="0.0801%" height="15" fill="rgb(215,73,9)" fg:x="84872716974" fg:w="109847074"/><text x="62.1771%" y="591.50"></text></g><g><title>chacha_permute (1,270,344,298 samples, 0.93%)</title><rect x="62.4377%" y="549" width="0.9269%" height="15" fill="rgb(207,175,33)" fg:x="85572487552" fg:w="1270344298"/><text x="62.6877%" y="559.50"></text></g><g><title>chacha_block_generic (1,537,698,210 samples, 1.12%)</title><rect x="62.2481%" y="565" width="1.1220%" height="15" fill="rgb(243,129,54)" fg:x="85312695455" fg:w="1537698210"/><text x="62.4981%" y="575.50"></text></g><g><title>memcpy (141,623,137 samples, 0.10%)</title><rect x="63.3701%" y="565" width="0.1033%" height="15" fill="rgb(227,119,45)" fg:x="86850393665" fg:w="141623137"/><text x="63.6201%" y="575.50"></text></g><g><title>crng_fast_key_erasure (2,013,372,120 samples, 1.47%)</title><rect x="62.0072%" y="581" width="1.4690%" height="15" fill="rgb(205,109,36)" fg:x="84982564048" fg:w="2013372120"/><text x="62.2572%" y="591.50"></text></g><g><title>debug_smp_processor_id (74,949,921 samples, 0.05%)</title><rect x="63.4763%" y="581" width="0.0547%" height="15" fill="rgb(205,6,39)" fg:x="86995936168" fg:w="74949921"/><text x="63.7263%" y="591.50"></text></g><g><title>crng_make_state (2,630,719,744 samples, 1.92%)</title><rect x="61.6172%" y="597" width="1.9195%" height="15" fill="rgb(221,32,16)" fg:x="84448092896" fg:w="2630719744"/><text x="61.8672%" y="607.50">c..</text></g><g><title>srso_alias_return_thunk (17,968,943 samples, 0.01%)</title><rect x="63.5367%" y="597" width="0.0131%" height="15" fill="rgb(228,144,50)" fg:x="87078812640" fg:w="17968943"/><text x="63.7867%" y="607.50"></text></g><g><title>srso_alias_safe_ret (17,968,943 samples, 0.01%)</title><rect x="63.5367%" y="581" width="0.0131%" height="15" fill="rgb(229,201,53)" fg:x="87078812640" fg:w="17968943"/><text x="63.7867%" y="591.50"></text></g><g><title>get_random_bytes_user (3,880,606,843 samples, 2.83%)</title><rect x="60.7606%" y="613" width="2.8315%" height="15" fill="rgb(249,153,27)" fg:x="83274100513" fg:w="3880606843"/><text x="61.0106%" y="623.50">ge..</text></g><g><title>stackleak_track_stack (57,925,773 samples, 0.04%)</title><rect x="63.5499%" y="597" width="0.0423%" height="15" fill="rgb(227,106,25)" fg:x="87096781583" fg:w="57925773"/><text x="63.7999%" y="607.50"></text></g><g><title>__x64_sys_getrandom (4,021,555,793 samples, 2.93%)</title><rect x="60.6721%" y="629" width="2.9343%" height="15" fill="rgb(230,65,29)" fg:x="83152759359" fg:w="4021555793"/><text x="60.9221%" y="639.50">__..</text></g><g><title>import_ubuf (19,607,796 samples, 0.01%)</title><rect x="63.5921%" y="613" width="0.0143%" height="15" fill="rgb(221,57,46)" fg:x="87154707356" fg:w="19607796"/><text x="63.8421%" y="623.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (15,378,286 samples, 0.01%)</title><rect x="63.6092%" y="629" width="0.0112%" height="15" fill="rgb(229,161,17)" fg:x="87178118920" fg:w="15378286"/><text x="63.8592%" y="639.50"></text></g><g><title>sysvec_apic_timer_interrupt (15,378,286 samples, 0.01%)</title><rect x="63.6092%" y="613" width="0.0112%" height="15" fill="rgb(222,213,11)" fg:x="87178118920" fg:w="15378286"/><text x="63.8592%" y="623.50"></text></g><g><title>syscall_exit_to_user_mode (207,268,879 samples, 0.15%)</title><rect x="63.6231%" y="629" width="0.1512%" height="15" fill="rgb(235,35,13)" fg:x="87197194754" fg:w="207268879"/><text x="63.8731%" y="639.50"></text></g><g><title>syscall_exit_to_user_mode_prepare (19,213,709 samples, 0.01%)</title><rect x="63.7603%" y="613" width="0.0140%" height="15" fill="rgb(233,158,34)" fg:x="87385249924" fg:w="19213709"/><text x="64.0103%" y="623.50"></text></g><g><title>do_syscall_64 (4,655,619,533 samples, 3.40%)</title><rect x="60.3857%" y="645" width="3.3970%" height="15" fill="rgb(215,151,48)" fg:x="82760211600" fg:w="4655619533"/><text x="60.6357%" y="655.50">do_..</text></g><g><title>srso_alias_return_thunk (70,192,031 samples, 0.05%)</title><rect x="63.7826%" y="645" width="0.0512%" height="15" fill="rgb(229,84,14)" fg:x="87415831133" fg:w="70192031"/><text x="64.0326%" y="655.50"></text></g><g><title>srso_alias_safe_ret (70,192,031 samples, 0.05%)</title><rect x="63.7826%" y="629" width="0.0512%" height="15" fill="rgb(229,68,14)" fg:x="87415831133" fg:w="70192031"/><text x="64.0326%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (5,239,860,574 samples, 3.82%)</title><rect x="60.0566%" y="661" width="3.8232%" height="15" fill="rgb(243,106,26)" fg:x="82309226647" fg:w="5239860574"/><text x="60.3066%" y="671.50">entr..</text></g><g><title>srso_alias_untrain_ret (58,875,017 samples, 0.04%)</title><rect x="63.8369%" y="645" width="0.0430%" height="15" fill="rgb(206,45,38)" fg:x="87490212204" fg:w="58875017"/><text x="64.0869%" y="655.50"></text></g><g><title>entry_SYSRETQ_unsafe_stack (38,472,540 samples, 0.03%)</title><rect x="63.8799%" y="661" width="0.0281%" height="15" fill="rgb(226,6,15)" fg:x="87549087221" fg:w="38472540"/><text x="64.1299%" y="671.50"></text></g><g><title>syscall (6,998,700,402 samples, 5.11%)</title><rect x="59.7100%" y="677" width="5.1066%" height="15" fill="rgb(232,22,54)" fg:x="81834166076" fg:w="6998700402"/><text x="59.9600%" y="687.50">syscall</text></g><g><title>syscall_return_via_sysret (1,245,306,717 samples, 0.91%)</title><rect x="63.9079%" y="661" width="0.9086%" height="15" fill="rgb(229,222,32)" fg:x="87587559761" fg:w="1245306717"/><text x="64.1579%" y="671.50"></text></g><g><title>stackleak_erase (681,503,456 samples, 0.50%)</title><rect x="64.3193%" y="645" width="0.4973%" height="15" fill="rgb(228,62,29)" fg:x="88151363022" fg:w="681503456"/><text x="64.5693%" y="655.50"></text></g><g><title>getrandom::imp::getrandom_inner (7,777,179,264 samples, 5.67%)</title><rect x="59.1650%" y="741" width="5.6746%" height="15" fill="rgb(251,103,34)" fg:x="81087209224" fg:w="7777179264"/><text x="59.4150%" y="751.50">getrand..</text></g><g><title>getrandom::util_libc::sys_fill_exact (7,719,960,279 samples, 5.63%)</title><rect x="59.2067%" y="725" width="5.6328%" height="15" fill="rgb(233,12,30)" fg:x="81144428209" fg:w="7719960279"/><text x="59.4567%" y="735.50">getrand..</text></g><g><title>core::ops::function::Fn::call (7,116,580,573 samples, 5.19%)</title><rect x="59.6470%" y="709" width="5.1926%" height="15" fill="rgb(238,52,0)" fg:x="81747807915" fg:w="7116580573"/><text x="59.8970%" y="719.50">core::..</text></g><g><title>getrandom::util_libc::getrandom_syscall (7,116,580,573 samples, 5.19%)</title><rect x="59.6470%" y="693" width="5.1926%" height="15" fill="rgb(223,98,5)" fg:x="81747807915" fg:w="7116580573"/><text x="59.8970%" y="703.50">getran..</text></g><g><title>uuid::fmt::format_hyphenated (29,876,720 samples, 0.02%)</title><rect x="64.8178%" y="677" width="0.0218%" height="15" fill="rgb(228,75,37)" fg:x="88834511768" fg:w="29876720"/><text x="65.0678%" y="687.50"></text></g><g><title>entry_SYSCALL_64 (29,876,720 samples, 0.02%)</title><rect x="64.8178%" y="661" width="0.0218%" height="15" fill="rgb(205,115,49)" fg:x="88834511768" fg:w="29876720"/><text x="65.0678%" y="671.50"></text></g><g><title>&lt;u64 as rand::distributions::utils::WideningMultiply&gt;::wmul (16,425,204 samples, 0.01%)</title><rect x="64.8514%" y="677" width="0.0120%" height="15" fill="rgb(250,154,43)" fg:x="88880577779" fg:w="16425204"/><text x="65.1014%" y="687.50"></text></g><g><title>std::panic::catch_unwind (78,815,220,776 samples, 57.51%)</title><rect x="7.4003%" y="917" width="57.5072%" height="15" fill="rgb(226,43,29)" fg:x="10142250251" fg:w="78815220776"/><text x="7.6503%" y="927.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (78,815,220,776 samples, 57.51%)</title><rect x="7.4003%" y="901" width="57.5072%" height="15" fill="rgb(249,228,39)" fg:x="10142250251" fg:w="78815220776"/><text x="7.6503%" y="911.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (78,815,220,776 samples, 57.51%)</title><rect x="7.4003%" y="885" width="57.5072%" height="15" fill="rgb(216,79,43)" fg:x="10142250251" fg:w="78815220776"/><text x="7.6503%" y="895.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (78,815,220,776 samples, 57.51%)</title><rect x="7.4003%" y="869" width="57.5072%" height="15" fill="rgb(228,95,12)" fg:x="10142250251" fg:w="78815220776"/><text x="7.6503%" y="879.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (78,815,220,776 samples, 57.51%)</title><rect x="7.4003%" y="853" width="57.5072%" height="15" fill="rgb(249,221,15)" fg:x="10142250251" fg:w="78815220776"/><text x="7.6503%" y="863.50">std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (78,810,932,189 samples, 57.50%)</title><rect x="7.4034%" y="837" width="57.5041%" height="15" fill="rgb(233,34,13)" fg:x="10146538838" fg:w="78810932189"/><text x="7.6534%" y="847.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>rpq::main::_{{closure}} (78,810,932,189 samples, 57.50%)</title><rect x="7.4034%" y="821" width="57.5041%" height="15" fill="rgb(214,103,39)" fg:x="10146538838" fg:w="78810932189"/><text x="7.6534%" y="831.50">rpq::main::_{{closure}}</text></g><g><title>uuid::v4::&lt;impl uuid::Uuid&gt;::new_v4 (8,364,931,720 samples, 6.10%)</title><rect x="58.8041%" y="805" width="6.1034%" height="15" fill="rgb(251,126,39)" fg:x="80592539307" fg:w="8364931720"/><text x="59.0541%" y="815.50">uuid::v4..</text></g><g><title>uuid::rng::u128 (8,146,701,940 samples, 5.94%)</title><rect x="58.9633%" y="789" width="5.9442%" height="15" fill="rgb(214,216,36)" fg:x="80810769087" fg:w="8146701940"/><text x="59.2133%" y="799.50">uuid::rn..</text></g><g><title>getrandom::getrandom (7,878,038,093 samples, 5.75%)</title><rect x="59.1593%" y="773" width="5.7482%" height="15" fill="rgb(220,221,8)" fg:x="81079432934" fg:w="7878038093"/><text x="59.4093%" y="783.50">getrand..</text></g><g><title>getrandom::getrandom_uninit (7,878,038,093 samples, 5.75%)</title><rect x="59.1593%" y="757" width="5.7482%" height="15" fill="rgb(240,216,3)" fg:x="81079432934" fg:w="7878038093"/><text x="59.4093%" y="767.50">getrand..</text></g><g><title>rand::rng::Rng::gen_range (93,082,539 samples, 0.07%)</title><rect x="64.8396%" y="741" width="0.0679%" height="15" fill="rgb(232,218,17)" fg:x="88864388488" fg:w="93082539"/><text x="65.0896%" y="751.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::sample_single (80,620,972 samples, 0.06%)</title><rect x="64.8487%" y="725" width="0.0588%" height="15" fill="rgb(229,163,45)" fg:x="88876850055" fg:w="80620972"/><text x="65.0987%" y="735.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u64&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (80,620,972 samples, 0.06%)</title><rect x="64.8487%" y="709" width="0.0588%" height="15" fill="rgb(231,110,42)" fg:x="88876850055" fg:w="80620972"/><text x="65.0987%" y="719.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u64&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single_inclusive (80,620,972 samples, 0.06%)</title><rect x="64.8487%" y="693" width="0.0588%" height="15" fill="rgb(208,170,48)" fg:x="88876850055" fg:w="80620972"/><text x="65.0987%" y="703.50"></text></g><g><title>rand::rng::Rng::gen (38,071,547 samples, 0.03%)</title><rect x="64.8797%" y="677" width="0.0278%" height="15" fill="rgb(239,116,25)" fg:x="88919399480" fg:w="38071547"/><text x="65.1297%" y="687.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u64&gt; for rand::distributions::Standard&gt;::sample (38,071,547 samples, 0.03%)</title><rect x="64.8797%" y="661" width="0.0278%" height="15" fill="rgb(219,200,50)" fg:x="88919399480" fg:w="38071547"/><text x="65.1297%" y="671.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (38,071,547 samples, 0.03%)</title><rect x="64.8797%" y="645" width="0.0278%" height="15" fill="rgb(245,200,0)" fg:x="88919399480" fg:w="38071547"/><text x="65.1297%" y="655.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (38,071,547 samples, 0.03%)</title><rect x="64.8797%" y="629" width="0.0278%" height="15" fill="rgb(245,119,33)" fg:x="88919399480" fg:w="38071547"/><text x="65.1297%" y="639.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (38,071,547 samples, 0.03%)</title><rect x="64.8797%" y="613" width="0.0278%" height="15" fill="rgb(231,125,12)" fg:x="88919399480" fg:w="38071547"/><text x="65.1297%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (78,815,922,605 samples, 57.51%)</title><rect x="7.4003%" y="949" width="57.5078%" height="15" fill="rgb(216,96,41)" fg:x="10142250251" fg:w="78815922605"/><text x="7.6503%" y="959.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (78,815,922,605 samples, 57.51%)</title><rect x="7.4003%" y="933" width="57.5078%" height="15" fill="rgb(248,43,45)" fg:x="10142250251" fg:w="78815922605"/><text x="7.6503%" y="943.50">std::thread::Builder::spawn_unchecked_::_{{closure}}</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (78,824,493,029 samples, 57.51%)</title><rect x="7.4003%" y="981" width="57.5140%" height="15" fill="rgb(217,222,7)" fg:x="10142250251" fg:w="78824493029"/><text x="7.6503%" y="991.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (78,824,493,029 samples, 57.51%)</title><rect x="7.4003%" y="965" width="57.5140%" height="15" fill="rgb(233,28,6)" fg:x="10142250251" fg:w="78824493029"/><text x="7.6503%" y="975.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>[libc.so.6] (78,824,866,300 samples, 57.51%)</title><rect x="7.4003%" y="1013" width="57.5143%" height="15" fill="rgb(231,218,15)" fg:x="10142250251" fg:w="78824866300"/><text x="7.6503%" y="1023.50">[libc.so.6]</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (78,824,866,300 samples, 57.51%)</title><rect x="7.4003%" y="997" width="57.5143%" height="15" fill="rgb(226,171,48)" fg:x="10142250251" fg:w="78824866300"/><text x="7.6503%" y="1007.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>entry_SYSCALL_64 (101,972,199 samples, 0.07%)</title><rect x="64.9145%" y="1013" width="0.0744%" height="15" fill="rgb(235,201,9)" fg:x="88967116551" fg:w="101972199"/><text x="65.1645%" y="1023.50"></text></g><g><title>[libc.so.6] (80,314,177,676 samples, 58.60%)</title><rect x="6.3907%" y="1029" width="58.6009%" height="15" fill="rgb(217,80,15)" fg:x="8758689128" fg:w="80314177676"/><text x="6.6407%" y="1039.50">[libc.so.6]</text></g><g><title>getrandom::imp::getrandom_inner (464,390,267 samples, 0.34%)</title><rect x="64.9948%" y="1013" width="0.3388%" height="15" fill="rgb(219,152,8)" fg:x="89077142052" fg:w="464390267"/><text x="65.2448%" y="1023.50"></text></g><g><title>getrandom::util_libc::sys_fill_exact (460,632,749 samples, 0.34%)</title><rect x="64.9976%" y="997" width="0.3361%" height="15" fill="rgb(243,107,38)" fg:x="89080899570" fg:w="460632749"/><text x="65.2476%" y="1007.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_mut (69,041,741 samples, 0.05%)</title><rect x="65.2833%" y="981" width="0.0504%" height="15" fill="rgb(231,17,5)" fg:x="89472490578" fg:w="69041741"/><text x="65.5333%" y="991.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_mut (69,041,741 samples, 0.05%)</title><rect x="65.2833%" y="965" width="0.0504%" height="15" fill="rgb(209,25,54)" fg:x="89472490578" fg:w="69041741"/><text x="65.5333%" y="975.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_mut (69,041,741 samples, 0.05%)</title><rect x="65.2833%" y="949" width="0.0504%" height="15" fill="rgb(219,0,2)" fg:x="89472490578" fg:w="69041741"/><text x="65.5333%" y="959.50"></text></g><g><title>rpq::bpq::BucketPriorityQueue::peek (16,219,223 samples, 0.01%)</title><rect x="65.3368%" y="1013" width="0.0118%" height="15" fill="rgb(246,9,5)" fg:x="89545821011" fg:w="16219223"/><text x="65.5868%" y="1023.50"></text></g><g><title>rpq::pq::PriorityQueue&lt;T&gt;::len (50,532,543 samples, 0.04%)</title><rect x="65.3573%" y="1013" width="0.0369%" height="15" fill="rgb(226,159,4)" fg:x="89573880929" fg:w="50532543"/><text x="65.6073%" y="1023.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (27,172,669 samples, 0.02%)</title><rect x="65.3743%" y="997" width="0.0198%" height="15" fill="rgb(219,175,34)" fg:x="89597240803" fg:w="27172669"/><text x="65.6243%" y="1007.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read (27,172,669 samples, 0.02%)</title><rect x="65.3743%" y="981" width="0.0198%" height="15" fill="rgb(236,10,46)" fg:x="89597240803" fg:w="27172669"/><text x="65.6243%" y="991.50"></text></g><g><title>asm_exc_page_fault (133,329,632 samples, 0.10%)</title><rect x="65.3941%" y="997" width="0.0973%" height="15" fill="rgb(240,211,16)" fg:x="89624413472" fg:w="133329632"/><text x="65.6441%" y="1007.50"></text></g><g><title>entry_SYSCALL_64 (72,998,062 samples, 0.05%)</title><rect x="65.4914%" y="997" width="0.0533%" height="15" fill="rgb(205,3,43)" fg:x="89757743104" fg:w="72998062"/><text x="65.7414%" y="1007.50"></text></g><g><title>syscall (213,600,428 samples, 0.16%)</title><rect x="65.3941%" y="1013" width="0.1559%" height="15" fill="rgb(245,7,22)" fg:x="89624413472" fg:w="213600428"/><text x="65.6441%" y="1023.50"></text></g><g><title>[rpq] (792,689,756 samples, 0.58%)</title><rect x="64.9917%" y="1029" width="0.5784%" height="15" fill="rgb(239,132,32)" fg:x="89072866804" fg:w="792689756"/><text x="65.2417%" y="1039.50"></text></g><g><title>uuid::fmt::&lt;impl core::fmt::Display for uuid::Uuid&gt;::fmt (27,542,660 samples, 0.02%)</title><rect x="65.5500%" y="1013" width="0.0201%" height="15" fill="rgb(228,202,34)" fg:x="89838013900" fg:w="27542660"/><text x="65.8000%" y="1023.50"></text></g><g><title>uuid::fmt::&lt;impl core::fmt::LowerHex for uuid::Uuid&gt;::fmt (23,715,020 samples, 0.02%)</title><rect x="65.5528%" y="997" width="0.0173%" height="15" fill="rgb(254,200,22)" fg:x="89841841540" fg:w="23715020"/><text x="65.8028%" y="1007.50"></text></g><g><title>&lt;uuid::fmt::Hyphenated as core::fmt::LowerHex&gt;::fmt (23,715,020 samples, 0.02%)</title><rect x="65.5528%" y="981" width="0.0173%" height="15" fill="rgb(219,10,39)" fg:x="89841841540" fg:w="23715020"/><text x="65.8028%" y="991.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (43,770,248 samples, 0.03%)</title><rect x="65.5701%" y="1013" width="0.0319%" height="15" fill="rgb(226,210,39)" fg:x="89865556560" fg:w="43770248"/><text x="65.8201%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (36,298,347 samples, 0.03%)</title><rect x="65.5755%" y="997" width="0.0265%" height="15" fill="rgb(208,219,16)" fg:x="89873028461" fg:w="36298347"/><text x="65.8255%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (36,298,347 samples, 0.03%)</title><rect x="65.5755%" y="981" width="0.0265%" height="15" fill="rgb(216,158,51)" fg:x="89873028461" fg:w="36298347"/><text x="65.8255%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (36,298,347 samples, 0.03%)</title><rect x="65.5755%" y="965" width="0.0265%" height="15" fill="rgb(233,14,44)" fg:x="89873028461" fg:w="36298347"/><text x="65.8255%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (36,298,347 samples, 0.03%)</title><rect x="65.5755%" y="949" width="0.0265%" height="15" fill="rgb(237,97,39)" fg:x="89873028461" fg:w="36298347"/><text x="65.8255%" y="959.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (24,943,847 samples, 0.02%)</title><rect x="65.5838%" y="933" width="0.0182%" height="15" fill="rgb(218,198,43)" fg:x="89884382961" fg:w="24943847"/><text x="65.8338%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (24,943,847 samples, 0.02%)</title><rect x="65.5838%" y="917" width="0.0182%" height="15" fill="rgb(231,104,20)" fg:x="89884382961" fg:w="24943847"/><text x="65.8338%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (14,887,126 samples, 0.01%)</title><rect x="65.6341%" y="933" width="0.0109%" height="15" fill="rgb(254,36,13)" fg:x="89953321647" fg:w="14887126"/><text x="65.8841%" y="943.50"></text></g><g><title>alloc::string::String::push_str (38,502,753 samples, 0.03%)</title><rect x="65.6314%" y="997" width="0.0281%" height="15" fill="rgb(248,14,50)" fg:x="89949559992" fg:w="38502753"/><text x="65.8814%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (38,502,753 samples, 0.03%)</title><rect x="65.6314%" y="981" width="0.0281%" height="15" fill="rgb(217,107,29)" fg:x="89949559992" fg:w="38502753"/><text x="65.8814%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (38,502,753 samples, 0.03%)</title><rect x="65.6314%" y="965" width="0.0281%" height="15" fill="rgb(251,169,33)" fg:x="89949559992" fg:w="38502753"/><text x="65.8814%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (38,502,753 samples, 0.03%)</title><rect x="65.6314%" y="949" width="0.0281%" height="15" fill="rgb(217,108,32)" fg:x="89949559992" fg:w="38502753"/><text x="65.8814%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (19,853,972 samples, 0.01%)</title><rect x="65.6450%" y="933" width="0.0145%" height="15" fill="rgb(219,66,42)" fg:x="89968208773" fg:w="19853972"/><text x="65.8950%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (82,573,498 samples, 0.06%)</title><rect x="65.6020%" y="1013" width="0.0602%" height="15" fill="rgb(206,180,7)" fg:x="89909326808" fg:w="82573498"/><text x="65.8520%" y="1023.50"></text></g><g><title>[libc.so.6] (250,303,046 samples, 0.18%)</title><rect x="65.6623%" y="1013" width="0.1826%" height="15" fill="rgb(208,226,31)" fg:x="89991900306" fg:w="250303046"/><text x="65.9123%" y="1023.50"></text></g><g><title>__rdl_alloc (112,686,547 samples, 0.08%)</title><rect x="65.8475%" y="1013" width="0.0822%" height="15" fill="rgb(218,26,49)" fg:x="90245757269" fg:w="112686547"/><text x="66.0975%" y="1023.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (97,800,298 samples, 0.07%)</title><rect x="65.8584%" y="997" width="0.0714%" height="15" fill="rgb(233,197,48)" fg:x="90260643518" fg:w="97800298"/><text x="66.1084%" y="1007.50"></text></g><g><title>__rust_alloc (23,016,999 samples, 0.02%)</title><rect x="65.9297%" y="1013" width="0.0168%" height="15" fill="rgb(252,181,51)" fg:x="90358443816" fg:w="23016999"/><text x="66.1797%" y="1023.50"></text></g><g><title>__rust_dealloc (35,636,048 samples, 0.03%)</title><rect x="65.9465%" y="1013" width="0.0260%" height="15" fill="rgb(253,90,19)" fg:x="90381460815" fg:w="35636048"/><text x="66.1965%" y="1023.50"></text></g><g><title>__vdso_clock_gettime (35,596,604 samples, 0.03%)</title><rect x="65.9725%" y="1013" width="0.0260%" height="15" fill="rgb(215,171,30)" fg:x="90417096863" fg:w="35596604"/><text x="66.2225%" y="1023.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (18,123,820 samples, 0.01%)</title><rect x="66.2975%" y="933" width="0.0132%" height="15" fill="rgb(214,222,9)" fg:x="90862553200" fg:w="18123820"/><text x="66.5475%" y="943.50"></text></g><g><title>core::ptr::read (18,123,820 samples, 0.01%)</title><rect x="66.2975%" y="917" width="0.0132%" height="15" fill="rgb(223,3,22)" fg:x="90862553200" fg:w="18123820"/><text x="66.5475%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (149,788,327 samples, 0.11%)</title><rect x="66.3108%" y="901" width="0.1093%" height="15" fill="rgb(225,196,46)" fg:x="90880677020" fg:w="149788327"/><text x="66.5608%" y="911.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_up (182,744,677 samples, 0.13%)</title><rect x="66.2898%" y="949" width="0.1333%" height="15" fill="rgb(209,110,37)" fg:x="90852009835" fg:w="182744677"/><text x="66.5398%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::Hole&lt;rpq::schema::Item&lt;u64&gt;&gt;&gt; (154,077,492 samples, 0.11%)</title><rect x="66.3108%" y="933" width="0.1124%" height="15" fill="rgb(249,89,12)" fg:x="90880677020" fg:w="154077492"/><text x="66.5608%" y="943.50"></text></g><g><title>&lt;alloc::collections::binary_heap::Hole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (154,077,492 samples, 0.11%)</title><rect x="66.3108%" y="917" width="0.1124%" height="15" fill="rgb(226,27,33)" fg:x="90880677020" fg:w="154077492"/><text x="66.5608%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,632,207,676 samples, 1.19%)</title><rect x="66.4232%" y="933" width="1.1909%" height="15" fill="rgb(213,82,22)" fg:x="91034754512" fg:w="1632207676"/><text x="66.6732%" y="943.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::move_to (1,866,601,666 samples, 1.36%)</title><rect x="66.4232%" y="949" width="1.3620%" height="15" fill="rgb(248,140,0)" fg:x="91034754512" fg:w="1866601666"/><text x="66.6732%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (234,393,990 samples, 0.17%)</title><rect x="67.6141%" y="933" width="0.1710%" height="15" fill="rgb(228,106,3)" fg:x="92666962188" fg:w="234393990"/><text x="67.8641%" y="943.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (51,860,222 samples, 0.04%)</title><rect x="67.7851%" y="949" width="0.0378%" height="15" fill="rgb(209,23,37)" fg:x="92901356178" fg:w="51860222"/><text x="68.0351%" y="959.50"></text></g><g><title>core::ptr::read (51,860,222 samples, 0.04%)</title><rect x="67.7851%" y="933" width="0.0378%" height="15" fill="rgb(241,93,50)" fg:x="92901356178" fg:w="51860222"/><text x="68.0351%" y="943.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (85,962,475 samples, 0.06%)</title><rect x="67.8230%" y="949" width="0.0627%" height="15" fill="rgb(253,46,43)" fg:x="92953216400" fg:w="85962475"/><text x="68.0730%" y="959.50"></text></g><g><title>core::cmp::PartialOrd::le (49,794,271 samples, 0.04%)</title><rect x="67.8494%" y="933" width="0.0363%" height="15" fill="rgb(226,206,43)" fg:x="92989384604" fg:w="49794271"/><text x="68.0994%" y="943.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_down_to_bottom (2,500,460,909 samples, 1.82%)</title><rect x="66.1479%" y="965" width="1.8245%" height="15" fill="rgb(217,54,7)" fg:x="90657512987" fg:w="2500460909"/><text x="66.3979%" y="975.50">a..</text></g><g><title>core::mem::drop (118,795,021 samples, 0.09%)</title><rect x="67.8857%" y="949" width="0.0867%" height="15" fill="rgb(223,5,52)" fg:x="93039178875" fg:w="118795021"/><text x="68.1357%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::Hole&lt;rpq::schema::Item&lt;u64&gt;&gt;&gt; (118,795,021 samples, 0.09%)</title><rect x="67.8857%" y="933" width="0.0867%" height="15" fill="rgb(206,52,46)" fg:x="93039178875" fg:w="118795021"/><text x="68.1357%" y="943.50"></text></g><g><title>&lt;alloc::collections::binary_heap::Hole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (118,795,021 samples, 0.09%)</title><rect x="67.8857%" y="917" width="0.0867%" height="15" fill="rgb(253,136,11)" fg:x="93039178875" fg:w="118795021"/><text x="68.1357%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (118,795,021 samples, 0.09%)</title><rect x="67.8857%" y="901" width="0.0867%" height="15" fill="rgb(208,106,33)" fg:x="93039178875" fg:w="118795021"/><text x="68.1357%" y="911.50"></text></g><g><title>core::ptr::read (252,583,420 samples, 0.18%)</title><rect x="67.9724%" y="901" width="0.1843%" height="15" fill="rgb(206,54,4)" fg:x="93157973896" fg:w="252583420"/><text x="68.2224%" y="911.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::pop (3,126,863,186 samples, 2.28%)</title><rect x="65.9985%" y="1013" width="2.2815%" height="15" fill="rgb(213,3,15)" fg:x="90452693467" fg:w="3126863186"/><text x="66.2485%" y="1023.50">a..</text></g><g><title>core::option::Option&lt;T&gt;::map (3,021,608,289 samples, 2.20%)</title><rect x="66.0753%" y="997" width="2.2047%" height="15" fill="rgb(252,211,39)" fg:x="90557948364" fg:w="3021608289"/><text x="66.3253%" y="1007.50">c..</text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::pop::_{{closure}} (2,922,043,666 samples, 2.13%)</title><rect x="66.1479%" y="981" width="2.1321%" height="15" fill="rgb(223,6,36)" fg:x="90657512987" fg:w="2922043666"/><text x="66.3979%" y="991.50">a..</text></g><g><title>core::mem::swap (421,582,757 samples, 0.31%)</title><rect x="67.9724%" y="965" width="0.3076%" height="15" fill="rgb(252,169,45)" fg:x="93157973896" fg:w="421582757"/><text x="68.2224%" y="975.50"></text></g><g><title>core::ptr::swap_nonoverlapping (421,582,757 samples, 0.31%)</title><rect x="67.9724%" y="949" width="0.3076%" height="15" fill="rgb(212,48,26)" fg:x="93157973896" fg:w="421582757"/><text x="68.2224%" y="959.50"></text></g><g><title>core::ptr::swap_nonoverlapping_simple_untyped (421,582,757 samples, 0.31%)</title><rect x="67.9724%" y="933" width="0.3076%" height="15" fill="rgb(251,102,48)" fg:x="93157973896" fg:w="421582757"/><text x="68.2224%" y="943.50"></text></g><g><title>core::mem::swap_simple (421,582,757 samples, 0.31%)</title><rect x="67.9724%" y="917" width="0.3076%" height="15" fill="rgb(243,208,16)" fg:x="93157973896" fg:w="421582757"/><text x="68.2224%" y="927.50"></text></g><g><title>core::ptr::write (168,999,337 samples, 0.12%)</title><rect x="68.1567%" y="901" width="0.1233%" height="15" fill="rgb(219,96,24)" fg:x="93410557316" fg:w="168999337"/><text x="68.4067%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (95,878,359 samples, 0.07%)</title><rect x="68.2800%" y="1013" width="0.0700%" height="15" fill="rgb(219,33,29)" fg:x="93579556653" fg:w="95878359"/><text x="68.5300%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (84,331,871 samples, 0.06%)</title><rect x="68.2884%" y="997" width="0.0615%" height="15" fill="rgb(223,176,5)" fg:x="93591103141" fg:w="84331871"/><text x="68.5384%" y="1007.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (51,358,360 samples, 0.04%)</title><rect x="68.3125%" y="981" width="0.0375%" height="15" fill="rgb(228,140,14)" fg:x="93624076652" fg:w="51358360"/><text x="68.5625%" y="991.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (51,358,360 samples, 0.04%)</title><rect x="68.3125%" y="965" width="0.0375%" height="15" fill="rgb(217,179,31)" fg:x="93624076652" fg:w="51358360"/><text x="68.5625%" y="975.50"></text></g><g><title>alloc::raw_vec::finish_grow (19,694,139 samples, 0.01%)</title><rect x="68.3499%" y="1013" width="0.0144%" height="15" fill="rgb(230,9,30)" fg:x="93675435012" fg:w="19694139"/><text x="68.5999%" y="1023.50"></text></g><g><title>cfree (17,133,066 samples, 0.01%)</title><rect x="68.3643%" y="1013" width="0.0125%" height="15" fill="rgb(230,136,20)" fg:x="93695129151" fg:w="17133066"/><text x="68.6143%" y="1023.50"></text></g><g><title>clock_gettime (105,168,316 samples, 0.08%)</title><rect x="68.3768%" y="1013" width="0.0767%" height="15" fill="rgb(215,210,22)" fg:x="93712262217" fg:w="105168316"/><text x="68.6268%" y="1023.50"></text></g><g><title>core::fmt::Formatter::write_str (15,171,987 samples, 0.01%)</title><rect x="68.4535%" y="1013" width="0.0111%" height="15" fill="rgb(218,43,5)" fg:x="93817430533" fg:w="15171987"/><text x="68.7035%" y="1023.50"></text></g><g><title>core::ops::function::Fn::call (18,717,048 samples, 0.01%)</title><rect x="68.6359%" y="981" width="0.0137%" height="15" fill="rgb(216,11,5)" fg:x="94067307229" fg:w="18717048"/><text x="68.8859%" y="991.50"></text></g><g><title>getrandom::util_libc::getrandom_syscall (18,717,048 samples, 0.01%)</title><rect x="68.6359%" y="965" width="0.0137%" height="15" fill="rgb(209,82,29)" fg:x="94067307229" fg:w="18717048"/><text x="68.8859%" y="975.50"></text></g><g><title>getrandom::imp::getrandom_inner (266,841,139 samples, 0.19%)</title><rect x="68.4646%" y="1013" width="0.1947%" height="15" fill="rgb(244,115,12)" fg:x="93832602520" fg:w="266841139"/><text x="68.7146%" y="1023.50"></text></g><g><title>getrandom::util_libc::sys_fill_exact (224,322,729 samples, 0.16%)</title><rect x="68.4956%" y="997" width="0.1637%" height="15" fill="rgb(222,82,18)" fg:x="93875120930" fg:w="224322729"/><text x="68.7456%" y="1007.50"></text></g><g><title>malloc (18,745,394 samples, 0.01%)</title><rect x="68.6593%" y="1013" width="0.0137%" height="15" fill="rgb(249,227,8)" fg:x="94099443659" fg:w="18745394"/><text x="68.9093%" y="1023.50"></text></g><g><title>rand::rng::Rng::gen_range (54,080,271 samples, 0.04%)</title><rect x="68.6730%" y="1013" width="0.0395%" height="15" fill="rgb(253,141,45)" fg:x="94118189053" fg:w="54080271"/><text x="68.9230%" y="1023.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::sample_single (34,994,507 samples, 0.03%)</title><rect x="68.6869%" y="997" width="0.0255%" height="15" fill="rgb(234,184,4)" fg:x="94137274817" fg:w="34994507"/><text x="68.9369%" y="1007.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u64&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (34,994,507 samples, 0.03%)</title><rect x="68.6869%" y="981" width="0.0255%" height="15" fill="rgb(218,194,23)" fg:x="94137274817" fg:w="34994507"/><text x="68.9369%" y="991.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u64&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single_inclusive (34,994,507 samples, 0.03%)</title><rect x="68.6869%" y="965" width="0.0255%" height="15" fill="rgb(235,66,41)" fg:x="94137274817" fg:w="34994507"/><text x="68.9369%" y="975.50"></text></g><g><title>rand::rng::Rng::gen (23,775,221 samples, 0.02%)</title><rect x="68.6951%" y="949" width="0.0173%" height="15" fill="rgb(245,217,1)" fg:x="94148494103" fg:w="23775221"/><text x="68.9451%" y="959.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u64&gt; for rand::distributions::Standard&gt;::sample (23,775,221 samples, 0.02%)</title><rect x="68.6951%" y="933" width="0.0173%" height="15" fill="rgb(229,91,1)" fg:x="94148494103" fg:w="23775221"/><text x="68.9451%" y="943.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (23,775,221 samples, 0.02%)</title><rect x="68.6951%" y="917" width="0.0173%" height="15" fill="rgb(207,101,30)" fg:x="94148494103" fg:w="23775221"/><text x="68.9451%" y="927.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (23,775,221 samples, 0.02%)</title><rect x="68.6951%" y="901" width="0.0173%" height="15" fill="rgb(223,82,49)" fg:x="94148494103" fg:w="23775221"/><text x="68.9451%" y="911.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (23,775,221 samples, 0.02%)</title><rect x="68.6951%" y="885" width="0.0173%" height="15" fill="rgb(218,167,17)" fg:x="94148494103" fg:w="23775221"/><text x="68.9451%" y="895.50"></text></g><g><title>rand::rngs::thread::thread_rng (21,005,638 samples, 0.02%)</title><rect x="68.7125%" y="1013" width="0.0153%" height="15" fill="rgb(208,103,14)" fg:x="94172269324" fg:w="21005638"/><text x="68.9625%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (21,005,638 samples, 0.02%)</title><rect x="68.7125%" y="997" width="0.0153%" height="15" fill="rgb(238,20,8)" fg:x="94172269324" fg:w="21005638"/><text x="68.9625%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (21,005,638 samples, 0.02%)</title><rect x="68.7125%" y="981" width="0.0153%" height="15" fill="rgb(218,80,54)" fg:x="94172269324" fg:w="21005638"/><text x="68.9625%" y="991.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (30,294,942 samples, 0.02%)</title><rect x="68.7278%" y="1013" width="0.0221%" height="15" fill="rgb(240,144,17)" fg:x="94193274962" fg:w="30294942"/><text x="68.9778%" y="1023.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (30,294,942 samples, 0.02%)</title><rect x="68.7278%" y="997" width="0.0221%" height="15" fill="rgb(245,27,50)" fg:x="94193274962" fg:w="30294942"/><text x="68.9778%" y="1007.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (30,294,942 samples, 0.02%)</title><rect x="68.7278%" y="981" width="0.0221%" height="15" fill="rgb(251,51,7)" fg:x="94193274962" fg:w="30294942"/><text x="68.9778%" y="991.50"></text></g><g><title>rand_chacha::guts::round (18,946,922 samples, 0.01%)</title><rect x="68.7361%" y="965" width="0.0138%" height="15" fill="rgb(245,217,29)" fg:x="94204622982" fg:w="18946922"/><text x="68.9861%" y="975.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (46,461,876 samples, 0.03%)</title><rect x="68.8598%" y="997" width="0.0339%" height="15" fill="rgb(221,176,29)" fg:x="94374260157" fg:w="46461876"/><text x="69.1098%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,rpq::pq::PriorityQueue&lt;u64&gt;&gt;&gt;&gt; (76,317,532 samples, 0.06%)</title><rect x="68.8937%" y="997" width="0.0557%" height="15" fill="rgb(212,180,24)" fg:x="94420722033" fg:w="76317532"/><text x="69.1437%" y="1007.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (76,317,532 samples, 0.06%)</title><rect x="68.8937%" y="981" width="0.0557%" height="15" fill="rgb(254,24,2)" fg:x="94420722033" fg:w="76317532"/><text x="69.1437%" y="991.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read_unlock (76,317,532 samples, 0.06%)</title><rect x="68.8937%" y="965" width="0.0557%" height="15" fill="rgb(230,100,2)" fg:x="94420722033" fg:w="76317532"/><text x="69.1437%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (15,634,191 samples, 0.01%)</title><rect x="68.9380%" y="949" width="0.0114%" height="15" fill="rgb(219,142,25)" fg:x="94481405374" fg:w="15634191"/><text x="69.1880%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_sub (15,634,191 samples, 0.01%)</title><rect x="68.9380%" y="933" width="0.0114%" height="15" fill="rgb(240,73,43)" fg:x="94481405374" fg:w="15634191"/><text x="69.1880%" y="943.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (55,063,214 samples, 0.04%)</title><rect x="69.3750%" y="853" width="0.0402%" height="15" fill="rgb(214,114,15)" fg:x="95080282237" fg:w="55063214"/><text x="69.6250%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (126,440,808 samples, 0.09%)</title><rect x="69.3538%" y="869" width="0.0923%" height="15" fill="rgb(207,130,4)" fg:x="95051237238" fg:w="126440808"/><text x="69.6038%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (42,332,595 samples, 0.03%)</title><rect x="69.4152%" y="853" width="0.0309%" height="15" fill="rgb(221,25,40)" fg:x="95135345451" fg:w="42332595"/><text x="69.6652%" y="863.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (987,567,063 samples, 0.72%)</title><rect x="69.9229%" y="853" width="0.7206%" height="15" fill="rgb(241,184,7)" fg:x="95831184284" fg:w="987567063"/><text x="70.1729%" y="863.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (2,974,425,008 samples, 2.17%)</title><rect x="69.0569%" y="917" width="2.1703%" height="15" fill="rgb(235,159,4)" fg:x="94644310638" fg:w="2974425008"/><text x="69.3069%" y="927.50">&lt;..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2,974,425,008 samples, 2.17%)</title><rect x="69.0569%" y="901" width="2.1703%" height="15" fill="rgb(214,87,48)" fg:x="94644310638" fg:w="2974425008"/><text x="69.3069%" y="911.50">&lt;..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2,974,425,008 samples, 2.17%)</title><rect x="69.0569%" y="885" width="2.1703%" height="15" fill="rgb(246,198,24)" fg:x="94644310638" fg:w="2974425008"/><text x="69.3069%" y="895.50">&lt;..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2,441,057,600 samples, 1.78%)</title><rect x="69.4460%" y="869" width="1.7811%" height="15" fill="rgb(209,66,40)" fg:x="95177678046" fg:w="2441057600"/><text x="69.6960%" y="879.50">&lt;..</text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (799,984,299 samples, 0.58%)</title><rect x="70.6435%" y="853" width="0.5837%" height="15" fill="rgb(233,147,39)" fg:x="96818751347" fg:w="799984299"/><text x="70.8935%" y="863.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (43,253,289 samples, 0.03%)</title><rect x="71.2685%" y="805" width="0.0316%" height="15" fill="rgb(231,145,52)" fg:x="97675382615" fg:w="43253289"/><text x="71.5185%" y="815.50"></text></g><g><title>hashbrown::map::make_hash (3,082,901,887 samples, 2.25%)</title><rect x="69.0538%" y="949" width="2.2494%" height="15" fill="rgb(206,20,26)" fg:x="94640022588" fg:w="3082901887"/><text x="69.3038%" y="959.50">h..</text></g><g><title>core::hash::BuildHasher::hash_one (3,082,901,887 samples, 2.25%)</title><rect x="69.0538%" y="933" width="2.2494%" height="15" fill="rgb(238,220,4)" fg:x="94640022588" fg:w="3082901887"/><text x="69.3038%" y="943.50">c..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (100,847,054 samples, 0.07%)</title><rect x="71.2296%" y="917" width="0.0736%" height="15" fill="rgb(252,195,42)" fg:x="97622077421" fg:w="100847054"/><text x="71.4796%" y="927.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (100,847,054 samples, 0.07%)</title><rect x="71.2296%" y="901" width="0.0736%" height="15" fill="rgb(209,10,6)" fg:x="97622077421" fg:w="100847054"/><text x="71.4796%" y="911.50"></text></g><g><title>core::hash::Hasher::write_u64 (100,847,054 samples, 0.07%)</title><rect x="71.2296%" y="885" width="0.0736%" height="15" fill="rgb(229,3,52)" fg:x="97622077421" fg:w="100847054"/><text x="71.4796%" y="895.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (100,847,054 samples, 0.07%)</title><rect x="71.2296%" y="869" width="0.0736%" height="15" fill="rgb(253,49,37)" fg:x="97622077421" fg:w="100847054"/><text x="71.4796%" y="879.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (100,847,054 samples, 0.07%)</title><rect x="71.2296%" y="853" width="0.0736%" height="15" fill="rgb(240,103,49)" fg:x="97622077421" fg:w="100847054"/><text x="71.4796%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (100,847,054 samples, 0.07%)</title><rect x="71.2296%" y="837" width="0.0736%" height="15" fill="rgb(250,182,30)" fg:x="97622077421" fg:w="100847054"/><text x="71.4796%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (79,876,661 samples, 0.06%)</title><rect x="71.2449%" y="821" width="0.0583%" height="15" fill="rgb(248,8,30)" fg:x="97643047814" fg:w="79876661"/><text x="71.4949%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (42,844,979 samples, 0.03%)</title><rect x="71.3585%" y="901" width="0.0313%" height="15" fill="rgb(237,120,30)" fg:x="97798739703" fg:w="42844979"/><text x="71.6085%" y="911.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (36,169,232 samples, 0.03%)</title><rect x="71.3898%" y="885" width="0.0264%" height="15" fill="rgb(221,146,34)" fg:x="97841584682" fg:w="36169232"/><text x="71.6398%" y="895.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (36,169,232 samples, 0.03%)</title><rect x="71.3898%" y="869" width="0.0264%" height="15" fill="rgb(242,55,13)" fg:x="97841584682" fg:w="36169232"/><text x="71.6398%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (36,169,232 samples, 0.03%)</title><rect x="71.3898%" y="853" width="0.0264%" height="15" fill="rgb(242,112,31)" fg:x="97841584682" fg:w="36169232"/><text x="71.6398%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (36,169,232 samples, 0.03%)</title><rect x="71.3898%" y="837" width="0.0264%" height="15" fill="rgb(249,192,27)" fg:x="97841584682" fg:w="36169232"/><text x="71.6398%" y="847.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (32,555,432 samples, 0.02%)</title><rect x="71.4161%" y="885" width="0.0238%" height="15" fill="rgb(208,204,44)" fg:x="97877753914" fg:w="32555432"/><text x="71.6661%" y="895.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (32,555,432 samples, 0.02%)</title><rect x="71.4161%" y="869" width="0.0238%" height="15" fill="rgb(208,93,54)" fg:x="97877753914" fg:w="32555432"/><text x="71.6661%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (32,555,432 samples, 0.02%)</title><rect x="71.4161%" y="853" width="0.0238%" height="15" fill="rgb(242,1,31)" fg:x="97877753914" fg:w="32555432"/><text x="71.6661%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (32,555,432 samples, 0.02%)</title><rect x="71.4161%" y="837" width="0.0238%" height="15" fill="rgb(241,83,25)" fg:x="97877753914" fg:w="32555432"/><text x="71.6661%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (73,013,201 samples, 0.05%)</title><rect x="71.3898%" y="901" width="0.0533%" height="15" fill="rgb(205,169,50)" fg:x="97841584682" fg:w="73013201"/><text x="71.6398%" y="911.50"></text></g><g><title>hashbrown::raw::h2 (354,405,554 samples, 0.26%)</title><rect x="71.4430%" y="901" width="0.2586%" height="15" fill="rgb(239,186,37)" fg:x="97914597883" fg:w="354405554"/><text x="71.6930%" y="911.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3,787,996,520 samples, 2.76%)</title><rect x="68.9494%" y="997" width="2.7639%" height="15" fill="rgb(205,221,10)" fg:x="94497039565" fg:w="3787996520"/><text x="69.1994%" y="1007.50">st..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3,787,996,520 samples, 2.76%)</title><rect x="68.9494%" y="981" width="2.7639%" height="15" fill="rgb(218,196,15)" fg:x="94497039565" fg:w="3787996520"/><text x="69.1994%" y="991.50">ha..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3,771,597,562 samples, 2.75%)</title><rect x="68.9614%" y="965" width="2.7519%" height="15" fill="rgb(218,196,35)" fg:x="94513438523" fg:w="3771597562"/><text x="69.2114%" y="975.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (562,111,610 samples, 0.41%)</title><rect x="71.3032%" y="949" width="0.4101%" height="15" fill="rgb(233,63,24)" fg:x="97722924475" fg:w="562111610"/><text x="71.5532%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (562,111,610 samples, 0.41%)</title><rect x="71.3032%" y="933" width="0.4101%" height="15" fill="rgb(225,8,4)" fg:x="97722924475" fg:w="562111610"/><text x="71.5532%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (562,111,610 samples, 0.41%)</title><rect x="71.3032%" y="917" width="0.4101%" height="15" fill="rgb(234,105,35)" fg:x="97722924475" fg:w="562111610"/><text x="71.5532%" y="927.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (36,918,582 samples, 0.03%)</title><rect x="71.7133%" y="981" width="0.0269%" height="15" fill="rgb(236,21,32)" fg:x="98285036085" fg:w="36918582"/><text x="71.9633%" y="991.50"></text></g><g><title>std::sync::poison::Flag::borrow (36,918,582 samples, 0.03%)</title><rect x="71.7133%" y="965" width="0.0269%" height="15" fill="rgb(228,109,6)" fg:x="98285036085" fg:w="36918582"/><text x="71.9633%" y="975.50"></text></g><g><title>std::sync::poison::Flag::get (16,088,206 samples, 0.01%)</title><rect x="71.7285%" y="949" width="0.0117%" height="15" fill="rgb(229,215,31)" fg:x="98305866461" fg:w="16088206"/><text x="71.9785%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (16,088,206 samples, 0.01%)</title><rect x="71.7285%" y="933" width="0.0117%" height="15" fill="rgb(221,52,54)" fg:x="98305866461" fg:w="16088206"/><text x="71.9785%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_load (16,088,206 samples, 0.01%)</title><rect x="71.7285%" y="917" width="0.0117%" height="15" fill="rgb(252,129,43)" fg:x="98305866461" fg:w="16088206"/><text x="71.9785%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (56,142,006 samples, 0.04%)</title><rect x="71.8088%" y="965" width="0.0410%" height="15" fill="rgb(248,183,27)" fg:x="98415956670" fg:w="56142006"/><text x="72.0588%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (56,142,006 samples, 0.04%)</title><rect x="71.8088%" y="949" width="0.0410%" height="15" fill="rgb(250,0,22)" fg:x="98415956670" fg:w="56142006"/><text x="72.0588%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (19,116,220 samples, 0.01%)</title><rect x="71.8498%" y="965" width="0.0139%" height="15" fill="rgb(213,166,10)" fg:x="98472098676" fg:w="19116220"/><text x="72.0998%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_load (19,116,220 samples, 0.01%)</title><rect x="71.8498%" y="949" width="0.0139%" height="15" fill="rgb(207,163,36)" fg:x="98472098676" fg:w="19116220"/><text x="72.0998%" y="959.50"></text></g><g><title>rpq::RPQ&lt;T&gt;::dequeue (4,300,613,867 samples, 3.14%)</title><rect x="68.7499%" y="1013" width="3.1379%" height="15" fill="rgb(208,122,22)" fg:x="94223569904" fg:w="4300613867"/><text x="68.9999%" y="1023.50">rpq..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (239,147,686 samples, 0.17%)</title><rect x="71.7133%" y="997" width="0.1745%" height="15" fill="rgb(207,104,49)" fg:x="98285036085" fg:w="239147686"/><text x="71.9633%" y="1007.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read (202,229,104 samples, 0.15%)</title><rect x="71.7403%" y="981" width="0.1476%" height="15" fill="rgb(248,211,50)" fg:x="98321954667" fg:w="202229104"/><text x="71.9903%" y="991.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::is_read_lockable (32,968,875 samples, 0.02%)</title><rect x="71.8638%" y="965" width="0.0241%" height="15" fill="rgb(217,13,45)" fg:x="98491214896" fg:w="32968875"/><text x="72.1138%" y="975.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (21,738,949 samples, 0.02%)</title><rect x="71.9692%" y="981" width="0.0159%" height="15" fill="rgb(211,216,49)" fg:x="98635663750" fg:w="21738949"/><text x="72.2192%" y="991.50"></text></g><g><title>&lt;rpq::schema::Item&lt;T&gt; as core::clone::Clone&gt;::clone (109,012,949 samples, 0.08%)</title><rect x="71.9232%" y="997" width="0.0795%" height="15" fill="rgb(221,58,53)" fg:x="98572748265" fg:w="109012949"/><text x="72.1732%" y="1007.50"></text></g><g><title>entry_SYSCALL_64 (16,201,871 samples, 0.01%)</title><rect x="71.9910%" y="981" width="0.0118%" height="15" fill="rgb(220,112,41)" fg:x="98665559343" fg:w="16201871"/><text x="72.2410%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpq::schema::Item&lt;u64&gt;&gt; (128,110,727 samples, 0.09%)</title><rect x="72.0028%" y="997" width="0.0935%" height="15" fill="rgb(236,38,28)" fg:x="98681761214" fg:w="128110727"/><text x="72.2528%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (128,110,727 samples, 0.09%)</title><rect x="72.0028%" y="981" width="0.0935%" height="15" fill="rgb(227,195,22)" fg:x="98681761214" fg:w="128110727"/><text x="72.2528%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (46,687,126 samples, 0.03%)</title><rect x="72.0622%" y="965" width="0.0341%" height="15" fill="rgb(214,55,33)" fg:x="98763184815" fg:w="46687126"/><text x="72.3122%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (46,687,126 samples, 0.03%)</title><rect x="72.0622%" y="949" width="0.0341%" height="15" fill="rgb(248,80,13)" fg:x="98763184815" fg:w="46687126"/><text x="72.3122%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (46,687,126 samples, 0.03%)</title><rect x="72.0622%" y="933" width="0.0341%" height="15" fill="rgb(238,52,6)" fg:x="98763184815" fg:w="46687126"/><text x="72.3122%" y="943.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (46,687,126 samples, 0.03%)</title><rect x="72.0622%" y="917" width="0.0341%" height="15" fill="rgb(224,198,47)" fg:x="98763184815" fg:w="46687126"/><text x="72.3122%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (15,634,410 samples, 0.01%)</title><rect x="72.0849%" y="901" width="0.0114%" height="15" fill="rgb(233,171,20)" fg:x="98794237531" fg:w="15634410"/><text x="72.3349%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,rpq::pq::PriorityQueue&lt;u64&gt;&gt;&gt;&gt; (151,630,798 samples, 0.11%)</title><rect x="72.0963%" y="997" width="0.1106%" height="15" fill="rgb(241,30,25)" fg:x="98809871941" fg:w="151630798"/><text x="72.3463%" y="1007.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (151,630,798 samples, 0.11%)</title><rect x="72.0963%" y="981" width="0.1106%" height="15" fill="rgb(207,171,38)" fg:x="98809871941" fg:w="151630798"/><text x="72.3463%" y="991.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read_unlock (151,630,798 samples, 0.11%)</title><rect x="72.0963%" y="965" width="0.1106%" height="15" fill="rgb(234,70,1)" fg:x="98809871941" fg:w="151630798"/><text x="72.3463%" y="975.50"></text></g><g><title>entry_SYSCALL_64 (15,224,712 samples, 0.01%)</title><rect x="72.1958%" y="949" width="0.0111%" height="15" fill="rgb(232,178,18)" fg:x="98946278027" fg:w="15224712"/><text x="72.4458%" y="959.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (59,015,536 samples, 0.04%)</title><rect x="72.3253%" y="853" width="0.0431%" height="15" fill="rgb(241,78,40)" fg:x="99123732107" fg:w="59015536"/><text x="72.5753%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (83,479,517 samples, 0.06%)</title><rect x="72.3194%" y="869" width="0.0609%" height="15" fill="rgb(222,35,25)" fg:x="99115687908" fg:w="83479517"/><text x="72.5694%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (16,419,782 samples, 0.01%)</title><rect x="72.3683%" y="853" width="0.0120%" height="15" fill="rgb(207,92,16)" fg:x="99182747643" fg:w="16419782"/><text x="72.6183%" y="863.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (699,879,450 samples, 0.51%)</title><rect x="72.4877%" y="853" width="0.5107%" height="15" fill="rgb(216,59,51)" fg:x="99346311918" fg:w="699879450"/><text x="72.7377%" y="863.50"></text></g><g><title>entry_SYSCALL_64 (145,589,083 samples, 0.11%)</title><rect x="72.8921%" y="837" width="0.1062%" height="15" fill="rgb(213,80,28)" fg:x="99900602285" fg:w="145589083"/><text x="73.1421%" y="847.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (241,547,813 samples, 0.18%)</title><rect x="72.9983%" y="853" width="0.1762%" height="15" fill="rgb(220,93,7)" fg:x="100046191368" fg:w="241547813"/><text x="73.2483%" y="863.50"></text></g><g><title>entry_SYSCALL_64 (44,884,419 samples, 0.03%)</title><rect x="73.1418%" y="837" width="0.0327%" height="15" fill="rgb(225,24,44)" fg:x="100242854762" fg:w="44884419"/><text x="73.3918%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1,126,678,303 samples, 0.82%)</title><rect x="72.3803%" y="869" width="0.8221%" height="15" fill="rgb(243,74,40)" fg:x="99199167425" fg:w="1126678303"/><text x="72.6303%" y="879.50"></text></g><g><title>entry_SYSCALL_64 (38,106,547 samples, 0.03%)</title><rect x="73.1746%" y="853" width="0.0278%" height="15" fill="rgb(228,39,7)" fg:x="100287739181" fg:w="38106547"/><text x="73.4246%" y="863.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1,392,381,215 samples, 1.02%)</title><rect x="72.2126%" y="917" width="1.0159%" height="15" fill="rgb(227,79,8)" fg:x="98969284798" fg:w="1392381215"/><text x="72.4626%" y="927.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1,392,381,215 samples, 1.02%)</title><rect x="72.2126%" y="901" width="1.0159%" height="15" fill="rgb(236,58,11)" fg:x="98969284798" fg:w="1392381215"/><text x="72.4626%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1,392,381,215 samples, 1.02%)</title><rect x="72.2126%" y="885" width="1.0159%" height="15" fill="rgb(249,63,35)" fg:x="98969284798" fg:w="1392381215"/><text x="72.4626%" y="895.50"></text></g><g><title>entry_SYSCALL_64 (35,820,285 samples, 0.03%)</title><rect x="73.2024%" y="869" width="0.0261%" height="15" fill="rgb(252,114,16)" fg:x="100325845728" fg:w="35820285"/><text x="73.4524%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (43,745,431 samples, 0.03%)</title><rect x="73.2484%" y="805" width="0.0319%" height="15" fill="rgb(254,151,24)" fg:x="100388845098" fg:w="43745431"/><text x="73.4984%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (66,619,445 samples, 0.05%)</title><rect x="73.2372%" y="821" width="0.0486%" height="15" fill="rgb(253,54,39)" fg:x="100373512732" fg:w="66619445"/><text x="73.4872%" y="831.50"></text></g><g><title>hashbrown::map::make_hash (1,474,623,213 samples, 1.08%)</title><rect x="72.2126%" y="949" width="1.0760%" height="15" fill="rgb(243,25,45)" fg:x="98969284798" fg:w="1474623213"/><text x="72.4626%" y="959.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,474,623,213 samples, 1.08%)</title><rect x="72.2126%" y="933" width="1.0760%" height="15" fill="rgb(234,134,9)" fg:x="98969284798" fg:w="1474623213"/><text x="72.4626%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (77,854,872 samples, 0.06%)</title><rect x="73.2317%" y="917" width="0.0568%" height="15" fill="rgb(227,166,31)" fg:x="100366053139" fg:w="77854872"/><text x="73.4817%" y="927.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (77,854,872 samples, 0.06%)</title><rect x="73.2317%" y="901" width="0.0568%" height="15" fill="rgb(245,143,41)" fg:x="100366053139" fg:w="77854872"/><text x="73.4817%" y="911.50"></text></g><g><title>core::hash::Hasher::write_u64 (77,854,872 samples, 0.06%)</title><rect x="73.2317%" y="885" width="0.0568%" height="15" fill="rgb(238,181,32)" fg:x="100366053139" fg:w="77854872"/><text x="73.4817%" y="895.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (77,854,872 samples, 0.06%)</title><rect x="73.2317%" y="869" width="0.0568%" height="15" fill="rgb(224,113,18)" fg:x="100366053139" fg:w="77854872"/><text x="73.4817%" y="879.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (77,854,872 samples, 0.06%)</title><rect x="73.2317%" y="853" width="0.0568%" height="15" fill="rgb(240,229,28)" fg:x="100366053139" fg:w="77854872"/><text x="73.4817%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (77,854,872 samples, 0.06%)</title><rect x="73.2317%" y="837" width="0.0568%" height="15" fill="rgb(250,185,3)" fg:x="100366053139" fg:w="77854872"/><text x="73.4817%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (15,434,928 samples, 0.01%)</title><rect x="73.2941%" y="901" width="0.0113%" height="15" fill="rgb(212,59,25)" fg:x="100451491750" fg:w="15434928"/><text x="73.5441%" y="911.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (15,553,279 samples, 0.01%)</title><rect x="73.3137%" y="885" width="0.0113%" height="15" fill="rgb(221,87,20)" fg:x="100478462865" fg:w="15553279"/><text x="73.5637%" y="895.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (15,553,279 samples, 0.01%)</title><rect x="73.3137%" y="869" width="0.0113%" height="15" fill="rgb(213,74,28)" fg:x="100478462865" fg:w="15553279"/><text x="73.5637%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (15,553,279 samples, 0.01%)</title><rect x="73.3137%" y="853" width="0.0113%" height="15" fill="rgb(224,132,34)" fg:x="100478462865" fg:w="15553279"/><text x="73.5637%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (15,553,279 samples, 0.01%)</title><rect x="73.3137%" y="837" width="0.0113%" height="15" fill="rgb(222,101,24)" fg:x="100478462865" fg:w="15553279"/><text x="73.5637%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (34,445,550 samples, 0.03%)</title><rect x="73.3053%" y="901" width="0.0251%" height="15" fill="rgb(254,142,4)" fg:x="100466926678" fg:w="34445550"/><text x="73.5553%" y="911.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,544,057,051 samples, 1.13%)</title><rect x="72.2098%" y="997" width="1.1266%" height="15" fill="rgb(230,229,49)" fg:x="98965463190" fg:w="1544057051"/><text x="72.4598%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,544,057,051 samples, 1.13%)</title><rect x="72.2098%" y="981" width="1.1266%" height="15" fill="rgb(238,70,47)" fg:x="98965463190" fg:w="1544057051"/><text x="72.4598%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,544,057,051 samples, 1.13%)</title><rect x="72.2098%" y="965" width="1.1266%" height="15" fill="rgb(231,160,17)" fg:x="98965463190" fg:w="1544057051"/><text x="72.4598%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (65,612,230 samples, 0.05%)</title><rect x="73.2885%" y="949" width="0.0479%" height="15" fill="rgb(218,68,53)" fg:x="100443908011" fg:w="65612230"/><text x="73.5385%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (65,612,230 samples, 0.05%)</title><rect x="73.2885%" y="933" width="0.0479%" height="15" fill="rgb(236,111,10)" fg:x="100443908011" fg:w="65612230"/><text x="73.5385%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (65,612,230 samples, 0.05%)</title><rect x="73.2885%" y="917" width="0.0479%" height="15" fill="rgb(224,34,41)" fg:x="100443908011" fg:w="65612230"/><text x="73.5385%" y="927.50"></text></g><g><title>rpq::RPQ&lt;T&gt;::enqueue (2,249,035,642 samples, 1.64%)</title><rect x="71.8878%" y="1013" width="1.6410%" height="15" fill="rgb(241,118,19)" fg:x="98524183771" fg:w="2249035642"/><text x="72.1378%" y="1023.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (263,699,172 samples, 0.19%)</title><rect x="73.3364%" y="997" width="0.1924%" height="15" fill="rgb(238,129,25)" fg:x="100509520241" fg:w="263699172"/><text x="73.5864%" y="1007.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read (263,699,172 samples, 0.19%)</title><rect x="73.3364%" y="981" width="0.1924%" height="15" fill="rgb(238,22,31)" fg:x="100509520241" fg:w="263699172"/><text x="73.5864%" y="991.50"></text></g><g><title>entry_SYSCALL_64 (63,094,302 samples, 0.05%)</title><rect x="73.4828%" y="965" width="0.0460%" height="15" fill="rgb(222,174,48)" fg:x="100710125111" fg:w="63094302"/><text x="73.7328%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (20,937,551 samples, 0.02%)</title><rect x="73.6293%" y="917" width="0.0153%" height="15" fill="rgb(206,152,40)" fg:x="100910979369" fg:w="20937551"/><text x="73.8793%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (76,831,968 samples, 0.06%)</title><rect x="73.5913%" y="997" width="0.0561%" height="15" fill="rgb(218,99,54)" fg:x="100858874915" fg:w="76831968"/><text x="73.8413%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (76,831,968 samples, 0.06%)</title><rect x="73.5913%" y="981" width="0.0561%" height="15" fill="rgb(220,174,26)" fg:x="100858874915" fg:w="76831968"/><text x="73.8413%" y="991.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (76,831,968 samples, 0.06%)</title><rect x="73.5913%" y="965" width="0.0561%" height="15" fill="rgb(245,116,9)" fg:x="100858874915" fg:w="76831968"/><text x="73.8413%" y="975.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (76,831,968 samples, 0.06%)</title><rect x="73.5913%" y="949" width="0.0561%" height="15" fill="rgb(209,72,35)" fg:x="100858874915" fg:w="76831968"/><text x="73.8413%" y="959.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (76,831,968 samples, 0.06%)</title><rect x="73.5913%" y="933" width="0.0561%" height="15" fill="rgb(226,126,21)" fg:x="100858874915" fg:w="76831968"/><text x="73.8413%" y="943.50"></text></g><g><title>std::sync::poison::Flag::guard (38,210,137 samples, 0.03%)</title><rect x="73.6502%" y="965" width="0.0279%" height="15" fill="rgb(227,192,1)" fg:x="100939523512" fg:w="38210137"/><text x="73.9002%" y="975.50"></text></g><g><title>std::thread::panicking (19,966,090 samples, 0.01%)</title><rect x="73.6635%" y="949" width="0.0146%" height="15" fill="rgb(237,180,29)" fg:x="100957767559" fg:w="19966090"/><text x="73.9135%" y="959.50"></text></g><g><title>std::panicking::panicking (19,966,090 samples, 0.01%)</title><rect x="73.6635%" y="933" width="0.0146%" height="15" fill="rgb(230,197,35)" fg:x="100957767559" fg:w="19966090"/><text x="73.9135%" y="943.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (19,966,090 samples, 0.01%)</title><rect x="73.6635%" y="917" width="0.0146%" height="15" fill="rgb(246,193,31)" fg:x="100957767559" fg:w="19966090"/><text x="73.9135%" y="927.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (42,122,737 samples, 0.03%)</title><rect x="73.6502%" y="981" width="0.0307%" height="15" fill="rgb(241,36,4)" fg:x="100939523512" fg:w="42122737"/><text x="73.9002%" y="991.50"></text></g><g><title>rpq::bpq::BucketPriorityQueue::add_bucket (246,688,266 samples, 0.18%)</title><rect x="73.5288%" y="1013" width="0.1800%" height="15" fill="rgb(241,130,17)" fg:x="100773219413" fg:w="246688266"/><text x="73.7788%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (80,384,167 samples, 0.06%)</title><rect x="73.6502%" y="997" width="0.0587%" height="15" fill="rgb(206,137,32)" fg:x="100939523512" fg:w="80384167"/><text x="73.9002%" y="1007.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock (38,261,430 samples, 0.03%)</title><rect x="73.6809%" y="981" width="0.0279%" height="15" fill="rgb(237,228,51)" fg:x="100981646249" fg:w="38261430"/><text x="73.9309%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::collections::vec_deque::VecDeque&lt;alloc::boxed::Box&lt;u64&gt;&gt;&gt;&gt; (57,764,536 samples, 0.04%)</title><rect x="73.7986%" y="997" width="0.0421%" height="15" fill="rgb(243,6,42)" fg:x="101142917481" fg:w="57764536"/><text x="74.0486%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (57,764,536 samples, 0.04%)</title><rect x="73.7986%" y="981" width="0.0421%" height="15" fill="rgb(251,74,28)" fg:x="101142917481" fg:w="57764536"/><text x="74.0486%" y="991.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::unlock (46,160,587 samples, 0.03%)</title><rect x="73.8070%" y="965" width="0.0337%" height="15" fill="rgb(218,20,49)" fg:x="101154521430" fg:w="46160587"/><text x="74.0570%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (46,160,587 samples, 0.03%)</title><rect x="73.8070%" y="949" width="0.0337%" height="15" fill="rgb(238,28,14)" fg:x="101154521430" fg:w="46160587"/><text x="74.0570%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_swap (46,160,587 samples, 0.03%)</title><rect x="73.8070%" y="933" width="0.0337%" height="15" fill="rgb(229,40,46)" fg:x="101154521430" fg:w="46160587"/><text x="74.0570%" y="943.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (71,316,057 samples, 0.05%)</title><rect x="73.8407%" y="981" width="0.0520%" height="15" fill="rgb(244,195,20)" fg:x="101200682017" fg:w="71316057"/><text x="74.0907%" y="991.50"></text></g><g><title>std::sync::poison::Flag::guard (71,316,057 samples, 0.05%)</title><rect x="73.8407%" y="965" width="0.0520%" height="15" fill="rgb(253,56,35)" fg:x="101200682017" fg:w="71316057"/><text x="74.0907%" y="975.50"></text></g><g><title>std::thread::panicking (56,112,186 samples, 0.04%)</title><rect x="73.8518%" y="949" width="0.0409%" height="15" fill="rgb(210,149,44)" fg:x="101215885888" fg:w="56112186"/><text x="74.1018%" y="959.50"></text></g><g><title>std::panicking::panicking (56,112,186 samples, 0.04%)</title><rect x="73.8518%" y="933" width="0.0409%" height="15" fill="rgb(240,135,12)" fg:x="101215885888" fg:w="56112186"/><text x="74.1018%" y="943.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (56,112,186 samples, 0.04%)</title><rect x="73.8518%" y="917" width="0.0409%" height="15" fill="rgb(251,24,50)" fg:x="101215885888" fg:w="56112186"/><text x="74.1018%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (51,829,302 samples, 0.04%)</title><rect x="73.8549%" y="901" width="0.0378%" height="15" fill="rgb(243,200,47)" fg:x="101220168772" fg:w="51829302"/><text x="74.1049%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_load (51,829,302 samples, 0.04%)</title><rect x="73.8549%" y="885" width="0.0378%" height="15" fill="rgb(224,166,26)" fg:x="101220168772" fg:w="51829302"/><text x="74.1049%" y="895.50"></text></g><g><title>rpq::bpq::BucketPriorityQueue::peek (370,379,435 samples, 0.27%)</title><rect x="73.7088%" y="1013" width="0.2702%" height="15" fill="rgb(233,0,47)" fg:x="101019907679" fg:w="370379435"/><text x="73.9588%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (189,605,097 samples, 0.14%)</title><rect x="73.8407%" y="997" width="0.1383%" height="15" fill="rgb(253,80,5)" fg:x="101200682017" fg:w="189605097"/><text x="74.0907%" y="1007.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock (118,289,040 samples, 0.09%)</title><rect x="73.8927%" y="981" width="0.0863%" height="15" fill="rgb(214,133,25)" fg:x="101271998074" fg:w="118289040"/><text x="74.1427%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (35,351,129 samples, 0.03%)</title><rect x="73.9533%" y="965" width="0.0258%" height="15" fill="rgb(209,27,14)" fg:x="101354935985" fg:w="35351129"/><text x="74.2033%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (35,351,129 samples, 0.03%)</title><rect x="73.9533%" y="949" width="0.0258%" height="15" fill="rgb(219,102,51)" fg:x="101354935985" fg:w="35351129"/><text x="74.2033%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (24,440,289 samples, 0.02%)</title><rect x="74.0221%" y="997" width="0.0178%" height="15" fill="rgb(237,18,16)" fg:x="101449344357" fg:w="24440289"/><text x="74.2721%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24,440,289 samples, 0.02%)</title><rect x="74.0221%" y="981" width="0.0178%" height="15" fill="rgb(241,85,17)" fg:x="101449344357" fg:w="24440289"/><text x="74.2721%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;alloc::collections::binary_heap::BinaryHeap&lt;rpq::schema::Item&lt;u64&gt;&gt;&gt;&gt; (23,773,938 samples, 0.02%)</title><rect x="74.0400%" y="997" width="0.0173%" height="15" fill="rgb(236,90,42)" fg:x="101473784646" fg:w="23773938"/><text x="74.2900%" y="1007.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23,773,938 samples, 0.02%)</title><rect x="74.0400%" y="981" width="0.0173%" height="15" fill="rgb(249,57,21)" fg:x="101473784646" fg:w="23773938"/><text x="74.2900%" y="991.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::write_unlock (16,830,652 samples, 0.01%)</title><rect x="74.0450%" y="965" width="0.0123%" height="15" fill="rgb(243,12,36)" fg:x="101480727932" fg:w="16830652"/><text x="74.2950%" y="975.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (42,983,307 samples, 0.03%)</title><rect x="74.0573%" y="997" width="0.0314%" height="15" fill="rgb(253,128,47)" fg:x="101497558584" fg:w="42983307"/><text x="74.3073%" y="1007.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock (35,221,211 samples, 0.03%)</title><rect x="74.0630%" y="981" width="0.0257%" height="15" fill="rgb(207,33,20)" fg:x="101505320680" fg:w="35221211"/><text x="74.3130%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (14,084,751 samples, 0.01%)</title><rect x="74.0784%" y="965" width="0.0103%" height="15" fill="rgb(233,215,35)" fg:x="101526457140" fg:w="14084751"/><text x="74.3284%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (14,084,751 samples, 0.01%)</title><rect x="74.0784%" y="949" width="0.0103%" height="15" fill="rgb(249,188,52)" fg:x="101526457140" fg:w="14084751"/><text x="74.3284%" y="959.50"></text></g><g><title>std::sync::rwlock::RwLockWriteGuard&lt;T&gt;::new (27,474,916 samples, 0.02%)</title><rect x="74.0887%" y="981" width="0.0200%" height="15" fill="rgb(225,12,32)" fg:x="101540541891" fg:w="27474916"/><text x="74.3387%" y="991.50"></text></g><g><title>std::sync::poison::Flag::guard (27,474,916 samples, 0.02%)</title><rect x="74.0887%" y="965" width="0.0200%" height="15" fill="rgb(247,98,14)" fg:x="101540541891" fg:w="27474916"/><text x="74.3387%" y="975.50"></text></g><g><title>std::thread::panicking (16,183,707 samples, 0.01%)</title><rect x="74.0969%" y="949" width="0.0118%" height="15" fill="rgb(247,219,48)" fg:x="101551833100" fg:w="16183707"/><text x="74.3469%" y="959.50"></text></g><g><title>std::panicking::panicking (16,183,707 samples, 0.01%)</title><rect x="74.0969%" y="933" width="0.0118%" height="15" fill="rgb(253,60,48)" fg:x="101551833100" fg:w="16183707"/><text x="74.3469%" y="943.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (16,183,707 samples, 0.01%)</title><rect x="74.0969%" y="917" width="0.0118%" height="15" fill="rgb(245,15,52)" fg:x="101551833100" fg:w="16183707"/><text x="74.3469%" y="927.50"></text></g><g><title>rpq::pq::PriorityQueue&lt;T&gt;::dequeue (224,425,217 samples, 0.16%)</title><rect x="73.9791%" y="1013" width="0.1638%" height="15" fill="rgb(220,133,28)" fg:x="101390287114" fg:w="224425217"/><text x="74.2291%" y="1023.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (74,170,440 samples, 0.05%)</title><rect x="74.0887%" y="997" width="0.0541%" height="15" fill="rgb(217,180,4)" fg:x="101540541891" fg:w="74170440"/><text x="74.3387%" y="1007.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::write (46,695,524 samples, 0.03%)</title><rect x="74.1087%" y="981" width="0.0341%" height="15" fill="rgb(251,24,1)" fg:x="101568016807" fg:w="46695524"/><text x="74.3587%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (24,667,567 samples, 0.02%)</title><rect x="74.1248%" y="965" width="0.0180%" height="15" fill="rgb(212,185,49)" fg:x="101590044764" fg:w="24667567"/><text x="74.3748%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (24,667,567 samples, 0.02%)</title><rect x="74.1248%" y="949" width="0.0180%" height="15" fill="rgb(215,175,22)" fg:x="101590044764" fg:w="24667567"/><text x="74.3748%" y="959.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (39,817,243 samples, 0.03%)</title><rect x="74.1660%" y="965" width="0.0291%" height="15" fill="rgb(250,205,14)" fg:x="101646495933" fg:w="39817243"/><text x="74.4160%" y="975.50"></text></g><g><title>core::ptr::read (39,817,243 samples, 0.03%)</title><rect x="74.1660%" y="949" width="0.0291%" height="15" fill="rgb(225,211,22)" fg:x="101646495933" fg:w="39817243"/><text x="74.4160%" y="959.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (15,188,414 samples, 0.01%)</title><rect x="74.1951%" y="965" width="0.0111%" height="15" fill="rgb(251,179,42)" fg:x="101686313176" fg:w="15188414"/><text x="74.4451%" y="975.50"></text></g><g><title>core::cmp::PartialOrd::le (15,188,414 samples, 0.01%)</title><rect x="74.1951%" y="949" width="0.0111%" height="15" fill="rgb(208,216,51)" fg:x="101686313176" fg:w="15188414"/><text x="74.4451%" y="959.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_up (75,410,576 samples, 0.06%)</title><rect x="74.1600%" y="981" width="0.0550%" height="15" fill="rgb(235,36,11)" fg:x="101638287807" fg:w="75410576"/><text x="74.4100%" y="991.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::push (95,682,360 samples, 0.07%)</title><rect x="74.1600%" y="997" width="0.0698%" height="15" fill="rgb(213,189,28)" fg:x="101638287807" fg:w="95682360"/><text x="74.4100%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (20,271,784 samples, 0.01%)</title><rect x="74.2150%" y="981" width="0.0148%" height="15" fill="rgb(227,203,42)" fg:x="101713698383" fg:w="20271784"/><text x="74.4650%" y="991.50"></text></g><g><title>core::ptr::write (20,271,784 samples, 0.01%)</title><rect x="74.2150%" y="965" width="0.0148%" height="15" fill="rgb(244,72,36)" fg:x="101713698383" fg:w="20271784"/><text x="74.4650%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;alloc::collections::binary_heap::BinaryHeap&lt;rpq::schema::Item&lt;u64&gt;&gt;&gt;&gt; (41,071,387 samples, 0.03%)</title><rect x="74.2326%" y="997" width="0.0300%" height="15" fill="rgb(213,53,17)" fg:x="101737745852" fg:w="41071387"/><text x="74.4826%" y="1007.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (41,071,387 samples, 0.03%)</title><rect x="74.2326%" y="981" width="0.0300%" height="15" fill="rgb(207,167,3)" fg:x="101737745852" fg:w="41071387"/><text x="74.4826%" y="991.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::write_unlock (37,173,867 samples, 0.03%)</title><rect x="74.2354%" y="965" width="0.0271%" height="15" fill="rgb(216,98,30)" fg:x="101741643372" fg:w="37173867"/><text x="74.4854%" y="975.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (50,501,040 samples, 0.04%)</title><rect x="74.2687%" y="997" width="0.0368%" height="15" fill="rgb(236,123,15)" fg:x="101787208804" fg:w="50501040"/><text x="74.5187%" y="1007.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock (46,874,985 samples, 0.03%)</title><rect x="74.2713%" y="981" width="0.0342%" height="15" fill="rgb(248,81,50)" fg:x="101790834859" fg:w="46874985"/><text x="74.5213%" y="991.50"></text></g><g><title>rpq::pq::PriorityQueue&lt;T&gt;::enqueue (242,143,683 samples, 0.18%)</title><rect x="74.1428%" y="1013" width="0.1767%" height="15" fill="rgb(214,120,4)" fg:x="101614712331" fg:w="242143683"/><text x="74.3928%" y="1023.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (19,146,170 samples, 0.01%)</title><rect x="74.3055%" y="997" width="0.0140%" height="15" fill="rgb(208,179,34)" fg:x="101837709844" fg:w="19146170"/><text x="74.5555%" y="1007.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::write (19,146,170 samples, 0.01%)</title><rect x="74.3055%" y="981" width="0.0140%" height="15" fill="rgb(227,140,7)" fg:x="101837709844" fg:w="19146170"/><text x="74.5555%" y="991.50"></text></g><g><title>rpq::pq::PriorityQueue&lt;T&gt;::len (66,233,159 samples, 0.05%)</title><rect x="74.3195%" y="1013" width="0.0483%" height="15" fill="rgb(214,22,6)" fg:x="101856856014" fg:w="66233159"/><text x="74.5695%" y="1023.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (22,667,254 samples, 0.02%)</title><rect x="74.3513%" y="997" width="0.0165%" height="15" fill="rgb(207,137,27)" fg:x="101900421919" fg:w="22667254"/><text x="74.6013%" y="1007.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read (22,667,254 samples, 0.02%)</title><rect x="74.3513%" y="981" width="0.0165%" height="15" fill="rgb(210,8,46)" fg:x="101900421919" fg:w="22667254"/><text x="74.6013%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (15,116,699 samples, 0.01%)</title><rect x="74.6180%" y="997" width="0.0110%" height="15" fill="rgb(240,16,54)" fg:x="102266027202" fg:w="15116699"/><text x="74.8680%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_swap (15,116,699 samples, 0.01%)</title><rect x="74.6180%" y="981" width="0.0110%" height="15" fill="rgb(211,209,29)" fg:x="102266027202" fg:w="15116699"/><text x="74.8680%" y="991.50"></text></g><g><title>entry_SYSCALL_64 (19,420,407 samples, 0.01%)</title><rect x="74.6291%" y="997" width="0.0142%" height="15" fill="rgb(226,228,24)" fg:x="102281143901" fg:w="19420407"/><text x="74.8791%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (19,864,758 samples, 0.01%)</title><rect x="74.6977%" y="981" width="0.0145%" height="15" fill="rgb(222,84,9)" fg:x="102375189678" fg:w="19864758"/><text x="74.9477%" y="991.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (102,805,723 samples, 0.08%)</title><rect x="74.6491%" y="997" width="0.0750%" height="15" fill="rgb(234,203,30)" fg:x="102308602497" fg:w="102805723"/><text x="74.8991%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (40,809,085 samples, 0.03%)</title><rect x="74.9353%" y="981" width="0.0298%" height="15" fill="rgb(238,109,14)" fg:x="102700824718" fg:w="40809085"/><text x="75.1853%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_load (40,809,085 samples, 0.03%)</title><rect x="74.9353%" y="965" width="0.0298%" height="15" fill="rgb(233,206,34)" fg:x="102700824718" fg:w="40809085"/><text x="75.1853%" y="975.50"></text></g><g><title>entry_SYSCALL_64 (61,987,948 samples, 0.05%)</title><rect x="74.9651%" y="981" width="0.0452%" height="15" fill="rgb(220,167,47)" fg:x="102741633803" fg:w="61987948"/><text x="75.2151%" y="991.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock_contended (892,091,063 samples, 0.65%)</title><rect x="74.3678%" y="1013" width="0.6509%" height="15" fill="rgb(238,105,10)" fg:x="101923089173" fg:w="892091063"/><text x="74.6178%" y="1023.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::spin (403,772,016 samples, 0.29%)</title><rect x="74.7241%" y="997" width="0.2946%" height="15" fill="rgb(213,227,17)" fg:x="102411408220" fg:w="403772016"/><text x="74.9741%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (16,630,533 samples, 0.01%)</title><rect x="75.1077%" y="965" width="0.0121%" height="15" fill="rgb(217,132,38)" fg:x="102937100704" fg:w="16630533"/><text x="75.3577%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_load (16,630,533 samples, 0.01%)</title><rect x="75.1077%" y="949" width="0.0121%" height="15" fill="rgb(242,146,4)" fg:x="102937100704" fg:w="16630533"/><text x="75.3577%" y="959.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read_contended (159,785,807 samples, 0.12%)</title><rect x="75.0187%" y="1013" width="0.1166%" height="15" fill="rgb(212,61,9)" fg:x="102815180236" fg:w="159785807"/><text x="75.2687%" y="1023.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_read (86,419,970 samples, 0.06%)</title><rect x="75.0723%" y="997" width="0.0631%" height="15" fill="rgb(247,126,22)" fg:x="102888546073" fg:w="86419970"/><text x="75.3223%" y="1007.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_until (86,419,970 samples, 0.06%)</title><rect x="75.0723%" y="981" width="0.0631%" height="15" fill="rgb(220,196,2)" fg:x="102888546073" fg:w="86419970"/><text x="75.3223%" y="991.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_read::_{{closure}} (21,234,806 samples, 0.02%)</title><rect x="75.1198%" y="965" width="0.0155%" height="15" fill="rgb(208,46,4)" fg:x="102953731237" fg:w="21234806"/><text x="75.3698%" y="975.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (51,565,267 samples, 0.04%)</title><rect x="75.1380%" y="1013" width="0.0376%" height="15" fill="rgb(252,104,46)" fg:x="102978640846" fg:w="51565267"/><text x="75.3880%" y="1023.50"></text></g><g><title>std::sys::pal::unix::cvt (15,348,655 samples, 0.01%)</title><rect x="75.1644%" y="997" width="0.0112%" height="15" fill="rgb(237,152,48)" fg:x="103014857458" fg:w="15348655"/><text x="75.4144%" y="1007.50"></text></g><g><title>&lt;i32 as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (15,348,655 samples, 0.01%)</title><rect x="75.1644%" y="981" width="0.0112%" height="15" fill="rgb(221,59,37)" fg:x="103014857458" fg:w="15348655"/><text x="75.4144%" y="991.50"></text></g><g><title>alloc::string::String::new (324,372,741 samples, 0.24%)</title><rect x="75.4198%" y="965" width="0.2367%" height="15" fill="rgb(209,202,51)" fg:x="103364908962" fg:w="324372741"/><text x="75.6698%" y="975.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (361,182,427 samples, 0.26%)</title><rect x="75.4141%" y="981" width="0.2635%" height="15" fill="rgb(228,81,30)" fg:x="103357092695" fg:w="361182427"/><text x="75.6641%" y="991.50"></text></g><g><title>core::fmt::Formatter::new (28,993,419 samples, 0.02%)</title><rect x="75.6565%" y="965" width="0.0212%" height="15" fill="rgb(227,42,39)" fg:x="103689281703" fg:w="28993419"/><text x="75.9065%" y="975.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (14,447,116 samples, 0.01%)</title><rect x="75.6805%" y="981" width="0.0105%" height="15" fill="rgb(221,26,2)" fg:x="103722181082" fg:w="14447116"/><text x="75.9305%" y="991.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (14,447,116 samples, 0.01%)</title><rect x="75.6805%" y="965" width="0.0105%" height="15" fill="rgb(254,61,31)" fg:x="103722181082" fg:w="14447116"/><text x="75.9305%" y="975.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (730,223,386 samples, 0.53%)</title><rect x="75.1756%" y="1013" width="0.5328%" height="15" fill="rgb(222,173,38)" fg:x="103030206113" fg:w="730223386"/><text x="75.4256%" y="1023.50"></text></g><g><title>rpq::main::_{{closure}} (730,223,386 samples, 0.53%)</title><rect x="75.1756%" y="997" width="0.5328%" height="15" fill="rgb(218,50,12)" fg:x="103030206113" fg:w="730223386"/><text x="75.4256%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_add (16,011,070 samples, 0.01%)</title><rect x="75.6967%" y="981" width="0.0117%" height="15" fill="rgb(223,88,40)" fg:x="103744418429" fg:w="16011070"/><text x="75.9467%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_add (16,011,070 samples, 0.01%)</title><rect x="75.6967%" y="965" width="0.0117%" height="15" fill="rgb(237,54,19)" fg:x="103744418429" fg:w="16011070"/><text x="75.9467%" y="975.50"></text></g><g><title>std::time::Instant::now (19,008,351 samples, 0.01%)</title><rect x="75.7084%" y="1013" width="0.0139%" height="15" fill="rgb(251,129,25)" fg:x="103760429499" fg:w="19008351"/><text x="75.9584%" y="1023.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (19,008,351 samples, 0.01%)</title><rect x="75.7084%" y="997" width="0.0139%" height="15" fill="rgb(238,97,19)" fg:x="103760429499" fg:w="19008351"/><text x="75.9584%" y="1007.50"></text></g><g><title>syscall (955,066,905 samples, 0.70%)</title><rect x="75.7223%" y="1013" width="0.6969%" height="15" fill="rgb(240,169,18)" fg:x="103779437850" fg:w="955066905"/><text x="75.9723%" y="1023.50"></text></g><g><title>uuid::fmt::&lt;impl core::fmt::Display for uuid::Uuid&gt;::fmt (15,729,989 samples, 0.01%)</title><rect x="76.4192%" y="1013" width="0.0115%" height="15" fill="rgb(230,187,49)" fg:x="104734504755" fg:w="15729989"/><text x="76.6692%" y="1023.50"></text></g><g><title>uuid::fmt::format_hyphenated (429,191,911 samples, 0.31%)</title><rect x="76.4306%" y="1013" width="0.3132%" height="15" fill="rgb(209,44,26)" fg:x="104750234744" fg:w="429191911"/><text x="76.6806%" y="1023.50"></text></g><g><title>uuid::builder::&lt;impl uuid::Uuid&gt;::from_u128 (88,840,921 samples, 0.06%)</title><rect x="76.7772%" y="997" width="0.0648%" height="15" fill="rgb(244,0,6)" fg:x="105225281195" fg:w="88840921"/><text x="77.0272%" y="1007.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (32,232,516 samples, 0.02%)</title><rect x="76.8796%" y="981" width="0.0235%" height="15" fill="rgb(248,18,21)" fg:x="105365560971" fg:w="32232516"/><text x="77.1296%" y="991.50"></text></g><g><title>[unknown] (15,547,281,127 samples, 11.34%)</title><rect x="65.5701%" y="1029" width="11.3440%" height="15" fill="rgb(245,180,19)" fg:x="89865556560" fg:w="15547281127"/><text x="65.8201%" y="1039.50">[unknown]</text></g><g><title>uuid::v4::&lt;impl uuid::Uuid&gt;::new_v4 (233,411,032 samples, 0.17%)</title><rect x="76.7438%" y="1013" width="0.1703%" height="15" fill="rgb(252,118,36)" fg:x="105179426655" fg:w="233411032"/><text x="76.9938%" y="1023.50"></text></g><g><title>uuid::rng::u128 (98,715,571 samples, 0.07%)</title><rect x="76.8421%" y="997" width="0.0720%" height="15" fill="rgb(210,224,19)" fg:x="105314122116" fg:w="98715571"/><text x="77.0921%" y="1007.50"></text></g><g><title>getrandom::getrandom (15,044,200 samples, 0.01%)</title><rect x="76.9031%" y="981" width="0.0110%" height="15" fill="rgb(218,30,24)" fg:x="105397793487" fg:w="15044200"/><text x="77.1531%" y="991.50"></text></g><g><title>getrandom::getrandom_uninit (15,044,200 samples, 0.01%)</title><rect x="76.9031%" y="965" width="0.0110%" height="15" fill="rgb(219,75,50)" fg:x="105397793487" fg:w="15044200"/><text x="77.1531%" y="975.50"></text></g><g><title>__rust_dealloc (58,437,171 samples, 0.04%)</title><rect x="76.9258%" y="1029" width="0.0426%" height="15" fill="rgb(234,72,50)" fg:x="105428833953" fg:w="58437171"/><text x="77.1758%" y="1039.50"></text></g><g><title>__vdso_clock_gettime (1,162,722,624 samples, 0.85%)</title><rect x="76.9684%" y="1029" width="0.8484%" height="15" fill="rgb(219,100,48)" fg:x="105487271124" fg:w="1162722624"/><text x="77.2184%" y="1039.50"></text></g><g><title>entry_SYSCALL_64 (62,248,245 samples, 0.05%)</title><rect x="77.7714%" y="1013" width="0.0454%" height="15" fill="rgb(253,5,41)" fg:x="106587745503" fg:w="62248245"/><text x="78.0214%" y="1023.50"></text></g><g><title>__page_cache_release (46,459,279 samples, 0.03%)</title><rect x="77.8230%" y="133" width="0.0339%" height="15" fill="rgb(247,181,11)" fg:x="106658536096" fg:w="46459279"/><text x="78.0730%" y="143.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (42,184,864 samples, 0.03%)</title><rect x="77.8261%" y="117" width="0.0308%" height="15" fill="rgb(222,223,25)" fg:x="106662810511" fg:w="42184864"/><text x="78.0761%" y="127.50"></text></g><g><title>clear_page_erms (76,112,563 samples, 0.06%)</title><rect x="77.8600%" y="117" width="0.0555%" height="15" fill="rgb(214,198,28)" fg:x="106709245193" fg:w="76112563"/><text x="78.1100%" y="127.50"></text></g><g><title>__free_one_page (29,708,378 samples, 0.02%)</title><rect x="77.9156%" y="85" width="0.0217%" height="15" fill="rgb(230,46,43)" fg:x="106785357756" fg:w="29708378"/><text x="78.1656%" y="95.50"></text></g><g><title>free_unref_page_commit (41,950,937 samples, 0.03%)</title><rect x="77.9156%" y="117" width="0.0306%" height="15" fill="rgb(233,65,53)" fg:x="106785357756" fg:w="41950937"/><text x="78.1656%" y="127.50"></text></g><g><title>free_pcppages_bulk (41,950,937 samples, 0.03%)</title><rect x="77.9156%" y="101" width="0.0306%" height="15" fill="rgb(221,121,27)" fg:x="106785357756" fg:w="41950937"/><text x="78.1656%" y="111.50"></text></g><g><title>tlb_finish_mmu (185,597,551 samples, 0.14%)</title><rect x="77.8168%" y="197" width="0.1354%" height="15" fill="rgb(247,70,47)" fg:x="106649993748" fg:w="185597551"/><text x="78.0668%" y="207.50"></text></g><g><title>__tlb_batch_free_encoded_pages (185,597,551 samples, 0.14%)</title><rect x="77.8168%" y="181" width="0.1354%" height="15" fill="rgb(228,85,35)" fg:x="106649993748" fg:w="185597551"/><text x="78.0668%" y="191.50"></text></g><g><title>free_pages_and_swap_cache (185,597,551 samples, 0.14%)</title><rect x="77.8168%" y="165" width="0.1354%" height="15" fill="rgb(209,50,18)" fg:x="106649993748" fg:w="185597551"/><text x="78.0668%" y="175.50"></text></g><g><title>folios_put_refs (181,320,326 samples, 0.13%)</title><rect x="77.8199%" y="149" width="0.1323%" height="15" fill="rgb(250,19,35)" fg:x="106654270973" fg:w="181320326"/><text x="78.0699%" y="159.50"></text></g><g><title>free_unref_folios (130,595,924 samples, 0.10%)</title><rect x="77.8569%" y="133" width="0.0953%" height="15" fill="rgb(253,107,29)" fg:x="106704995375" fg:w="130595924"/><text x="78.1069%" y="143.50"></text></g><g><title>_compound_head (81,455,433 samples, 0.06%)</title><rect x="77.9677%" y="165" width="0.0594%" height="15" fill="rgb(252,179,29)" fg:x="106856864502" fg:w="81455433"/><text x="78.2177%" y="175.50"></text></g><g><title>__mod_lruvec_state (17,164,583 samples, 0.01%)</title><rect x="78.0272%" y="133" width="0.0125%" height="15" fill="rgb(238,194,6)" fg:x="106938319935" fg:w="17164583"/><text x="78.2772%" y="143.50"></text></g><g><title>__mod_memcg_lruvec_state (62,825,029 samples, 0.05%)</title><rect x="78.0397%" y="133" width="0.0458%" height="15" fill="rgb(238,164,29)" fg:x="106955484518" fg:w="62825029"/><text x="78.2897%" y="143.50"></text></g><g><title>folio_remove_rmap_ptes (84,060,616 samples, 0.06%)</title><rect x="78.0272%" y="165" width="0.0613%" height="15" fill="rgb(224,25,9)" fg:x="106938319935" fg:w="84060616"/><text x="78.2772%" y="175.50"></text></g><g><title>__lruvec_stat_mod_folio (84,060,616 samples, 0.06%)</title><rect x="78.0272%" y="149" width="0.0613%" height="15" fill="rgb(244,153,23)" fg:x="106938319935" fg:w="84060616"/><text x="78.2772%" y="159.50"></text></g><g><title>__mem_cgroup_uncharge_folios (29,825,747 samples, 0.02%)</title><rect x="78.1041%" y="101" width="0.0218%" height="15" fill="rgb(212,203,14)" fg:x="107043718473" fg:w="29825747"/><text x="78.3541%" y="111.50"></text></g><g><title>uncharge_folio (17,113,348 samples, 0.01%)</title><rect x="78.1133%" y="85" width="0.0125%" height="15" fill="rgb(220,164,20)" fg:x="107056430872" fg:w="17113348"/><text x="78.3633%" y="95.50"></text></g><g><title>__list_del_entry_valid_or_report (72,605,902 samples, 0.05%)</title><rect x="78.1258%" y="69" width="0.0530%" height="15" fill="rgb(222,203,48)" fg:x="107073544220" fg:w="72605902"/><text x="78.3758%" y="79.50"></text></g><g><title>__mod_lruvec_state (21,073,849 samples, 0.02%)</title><rect x="78.1788%" y="69" width="0.0154%" height="15" fill="rgb(215,159,22)" fg:x="107146150122" fg:w="21073849"/><text x="78.4288%" y="79.50"></text></g><g><title>__mod_memcg_lruvec_state (25,653,874 samples, 0.02%)</title><rect x="78.1942%" y="69" width="0.0187%" height="15" fill="rgb(216,183,47)" fg:x="107167223971" fg:w="25653874"/><text x="78.4442%" y="79.50"></text></g><g><title>__page_cache_release (132,139,500 samples, 0.10%)</title><rect x="78.1258%" y="101" width="0.0964%" height="15" fill="rgb(229,195,25)" fg:x="107073544220" fg:w="132139500"/><text x="78.3758%" y="111.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (132,139,500 samples, 0.10%)</title><rect x="78.1258%" y="85" width="0.0964%" height="15" fill="rgb(224,132,51)" fg:x="107073544220" fg:w="132139500"/><text x="78.3758%" y="95.50"></text></g><g><title>clear_page_erms (310,097,701 samples, 0.23%)</title><rect x="78.2347%" y="85" width="0.2263%" height="15" fill="rgb(240,63,7)" fg:x="107222702026" fg:w="310097701"/><text x="78.4847%" y="95.50"></text></g><g><title>__list_del_entry_valid_or_report (16,953,281 samples, 0.01%)</title><rect x="78.5105%" y="37" width="0.0124%" height="15" fill="rgb(249,182,41)" fg:x="107600783521" fg:w="16953281"/><text x="78.7605%" y="47.50"></text></g><g><title>__free_one_page (89,204,022 samples, 0.07%)</title><rect x="78.4702%" y="53" width="0.0651%" height="15" fill="rgb(243,47,26)" fg:x="107545575975" fg:w="89204022"/><text x="78.7202%" y="63.50"></text></g><g><title>free_unref_page_commit (127,464,504 samples, 0.09%)</title><rect x="78.4609%" y="85" width="0.0930%" height="15" fill="rgb(233,48,2)" fg:x="107532799727" fg:w="127464504"/><text x="78.7109%" y="95.50"></text></g><g><title>free_pcppages_bulk (114,688,256 samples, 0.08%)</title><rect x="78.4702%" y="69" width="0.0837%" height="15" fill="rgb(244,165,34)" fg:x="107545575975" fg:w="114688256"/><text x="78.7202%" y="79.50"></text></g><g><title>__list_del_entry_valid_or_report (25,484,234 samples, 0.02%)</title><rect x="78.5353%" y="53" width="0.0186%" height="15" fill="rgb(207,89,7)" fg:x="107634779997" fg:w="25484234"/><text x="78.7853%" y="63.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rpq::RPQ&lt;u64&gt;&gt;&gt; (1,022,992,664 samples, 0.75%)</title><rect x="77.8168%" y="757" width="0.7464%" height="15" fill="rgb(244,117,36)" fg:x="106649993748" fg:w="1022992664"/><text x="78.0668%" y="767.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,022,992,664 samples, 0.75%)</title><rect x="77.8168%" y="741" width="0.7464%" height="15" fill="rgb(226,144,34)" fg:x="106649993748" fg:w="1022992664"/><text x="78.0668%" y="751.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (1,022,992,664 samples, 0.75%)</title><rect x="77.8168%" y="725" width="0.7464%" height="15" fill="rgb(213,23,19)" fg:x="106649993748" fg:w="1022992664"/><text x="78.0668%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpq::RPQ&lt;u64&gt;&gt; (1,022,992,664 samples, 0.75%)</title><rect x="77.8168%" y="709" width="0.7464%" height="15" fill="rgb(217,75,12)" fg:x="106649993748" fg:w="1022992664"/><text x="78.0668%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;std::collections::hash::map::HashMap&lt;u64,rpq::pq::PriorityQueue&lt;u64&gt;&gt;&gt;&gt;&gt; (1,022,992,664 samples, 0.75%)</title><rect x="77.8168%" y="693" width="0.7464%" height="15" fill="rgb(224,159,17)" fg:x="106649993748" fg:w="1022992664"/><text x="78.0668%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,022,992,664 samples, 0.75%)</title><rect x="77.8168%" y="677" width="0.7464%" height="15" fill="rgb(217,118,1)" fg:x="106649993748" fg:w="1022992664"/><text x="78.0668%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (1,022,992,664 samples, 0.75%)</title><rect x="77.8168%" y="661" width="0.7464%" height="15" fill="rgb(232,180,48)" fg:x="106649993748" fg:w="1022992664"/><text x="78.0668%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLock&lt;std::collections::hash::map::HashMap&lt;u64,rpq::pq::PriorityQueue&lt;u64&gt;&gt;&gt;&gt; (1,022,992,664 samples, 0.75%)</title><rect x="77.8168%" y="645" width="0.7464%" height="15" fill="rgb(230,27,33)" fg:x="106649993748" fg:w="1022992664"/><text x="78.0668%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;std::collections::hash::map::HashMap&lt;u64,rpq::pq::PriorityQueue&lt;u64&gt;&gt;&gt;&gt; (1,022,992,664 samples, 0.75%)</title><rect x="77.8168%" y="629" width="0.7464%" height="15" fill="rgb(205,31,21)" fg:x="106649993748" fg:w="1022992664"/><text x="78.0668%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u64,rpq::pq::PriorityQueue&lt;u64&gt;&gt;&gt; (1,022,992,664 samples, 0.75%)</title><rect x="77.8168%" y="613" width="0.7464%" height="15" fill="rgb(253,59,4)" fg:x="106649993748" fg:w="1022992664"/><text x="78.0668%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u64,rpq::pq::PriorityQueue&lt;u64&gt;,std::hash::random::RandomState&gt;&gt; (1,022,992,664 samples, 0.75%)</title><rect x="77.8168%" y="597" width="0.7464%" height="15" fill="rgb(224,201,9)" fg:x="106649993748" fg:w="1022992664"/><text x="78.0668%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u64,rpq::pq::PriorityQueue&lt;u64&gt;)&gt;&gt; (1,022,992,664 samples, 0.75%)</title><rect x="77.8168%" y="581" width="0.7464%" height="15" fill="rgb(229,206,30)" fg:x="106649993748" fg:w="1022992664"/><text x="78.0668%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,022,992,664 samples, 0.75%)</title><rect x="77.8168%" y="565" width="0.7464%" height="15" fill="rgb(212,67,47)" fg:x="106649993748" fg:w="1022992664"/><text x="78.0668%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,022,992,664 samples, 0.75%)</title><rect x="77.8168%" y="549" width="0.7464%" height="15" fill="rgb(211,96,50)" fg:x="106649993748" fg:w="1022992664"/><text x="78.0668%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,022,992,664 samples, 0.75%)</title><rect x="77.8168%" y="533" width="0.7464%" height="15" fill="rgb(252,114,18)" fg:x="106649993748" fg:w="1022992664"/><text x="78.0668%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1,022,992,664 samples, 0.75%)</title><rect x="77.8168%" y="517" width="0.7464%" height="15" fill="rgb(223,58,37)" fg:x="106649993748" fg:w="1022992664"/><text x="78.0668%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1,022,992,664 samples, 0.75%)</title><rect x="77.8168%" y="501" width="0.7464%" height="15" fill="rgb(237,70,4)" fg:x="106649993748" fg:w="1022992664"/><text x="78.0668%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;(u64,rpq::pq::PriorityQueue&lt;u64&gt;)&gt; (1,022,992,664 samples, 0.75%)</title><rect x="77.8168%" y="485" width="0.7464%" height="15" fill="rgb(244,85,46)" fg:x="106649993748" fg:w="1022992664"/><text x="78.0668%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpq::pq::PriorityQueue&lt;u64&gt;&gt; (1,022,992,664 samples, 0.75%)</title><rect x="77.8168%" y="469" width="0.7464%" height="15" fill="rgb(223,39,52)" fg:x="106649993748" fg:w="1022992664"/><text x="78.0668%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLock&lt;alloc::collections::binary_heap::BinaryHeap&lt;rpq::schema::Item&lt;u64&gt;&gt;&gt;&gt; (1,022,992,664 samples, 0.75%)</title><rect x="77.8168%" y="453" width="0.7464%" height="15" fill="rgb(218,200,14)" fg:x="106649993748" fg:w="1022992664"/><text x="78.0668%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::collections::binary_heap::BinaryHeap&lt;rpq::schema::Item&lt;u64&gt;&gt;&gt;&gt; (1,022,992,664 samples, 0.75%)</title><rect x="77.8168%" y="437" width="0.7464%" height="15" fill="rgb(208,171,16)" fg:x="106649993748" fg:w="1022992664"/><text x="78.0668%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::BinaryHeap&lt;rpq::schema::Item&lt;u64&gt;&gt;&gt; (1,022,992,664 samples, 0.75%)</title><rect x="77.8168%" y="421" width="0.7464%" height="15" fill="rgb(234,200,18)" fg:x="106649993748" fg:w="1022992664"/><text x="78.0668%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;rpq::schema::Item&lt;u64&gt;&gt;&gt; (1,022,992,664 samples, 0.75%)</title><rect x="77.8168%" y="405" width="0.7464%" height="15" fill="rgb(228,45,11)" fg:x="106649993748" fg:w="1022992664"/><text x="78.0668%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;rpq::schema::Item&lt;u64&gt;&gt;&gt; (1,022,992,664 samples, 0.75%)</title><rect x="77.8168%" y="389" width="0.7464%" height="15" fill="rgb(237,182,11)" fg:x="106649993748" fg:w="1022992664"/><text x="78.0668%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,022,992,664 samples, 0.75%)</title><rect x="77.8168%" y="373" width="0.7464%" height="15" fill="rgb(241,175,49)" fg:x="106649993748" fg:w="1022992664"/><text x="78.0668%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,022,992,664 samples, 0.75%)</title><rect x="77.8168%" y="357" width="0.7464%" height="15" fill="rgb(247,38,35)" fg:x="106649993748" fg:w="1022992664"/><text x="78.0668%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (1,022,992,664 samples, 0.75%)</title><rect x="77.8168%" y="341" width="0.7464%" height="15" fill="rgb(228,39,49)" fg:x="106649993748" fg:w="1022992664"/><text x="78.0668%" y="351.50"></text></g><g><title>cfree (1,022,992,664 samples, 0.75%)</title><rect x="77.8168%" y="325" width="0.7464%" height="15" fill="rgb(226,101,26)" fg:x="106649993748" fg:w="1022992664"/><text x="78.0668%" y="335.50"></text></g><g><title>__munmap (1,022,992,664 samples, 0.75%)</title><rect x="77.8168%" y="309" width="0.7464%" height="15" fill="rgb(206,141,19)" fg:x="106649993748" fg:w="1022992664"/><text x="78.0668%" y="319.50"></text></g><g><title>entry_SYSCALL_64 (1,022,992,664 samples, 0.75%)</title><rect x="77.8168%" y="293" width="0.7464%" height="15" fill="rgb(211,200,13)" fg:x="106649993748" fg:w="1022992664"/><text x="78.0668%" y="303.50"></text></g><g><title>do_syscall_64 (1,022,992,664 samples, 0.75%)</title><rect x="77.8168%" y="277" width="0.7464%" height="15" fill="rgb(241,121,6)" fg:x="106649993748" fg:w="1022992664"/><text x="78.0668%" y="287.50"></text></g><g><title>__x64_sys_munmap (1,022,992,664 samples, 0.75%)</title><rect x="77.8168%" y="261" width="0.7464%" height="15" fill="rgb(234,221,29)" fg:x="106649993748" fg:w="1022992664"/><text x="78.0668%" y="271.50"></text></g><g><title>__vm_munmap (1,022,992,664 samples, 0.75%)</title><rect x="77.8168%" y="245" width="0.7464%" height="15" fill="rgb(229,136,5)" fg:x="106649993748" fg:w="1022992664"/><text x="78.0668%" y="255.50"></text></g><g><title>do_vmi_align_munmap.isra.0 (1,022,992,664 samples, 0.75%)</title><rect x="77.8168%" y="229" width="0.7464%" height="15" fill="rgb(238,36,11)" fg:x="106649993748" fg:w="1022992664"/><text x="78.0668%" y="239.50"></text></g><g><title>unmap_region.constprop.0 (1,022,992,664 samples, 0.75%)</title><rect x="77.8168%" y="213" width="0.7464%" height="15" fill="rgb(251,55,41)" fg:x="106649993748" fg:w="1022992664"/><text x="78.0668%" y="223.50"></text></g><g><title>unmap_vmas (837,395,113 samples, 0.61%)</title><rect x="77.9522%" y="197" width="0.6110%" height="15" fill="rgb(242,34,40)" fg:x="106835591299" fg:w="837395113"/><text x="78.2022%" y="207.50"></text></g><g><title>unmap_page_range (837,395,113 samples, 0.61%)</title><rect x="77.9522%" y="181" width="0.6110%" height="15" fill="rgb(215,42,17)" fg:x="106835591299" fg:w="837395113"/><text x="78.2022%" y="191.50"></text></g><g><title>tlb_flush_mmu (646,334,802 samples, 0.47%)</title><rect x="78.0916%" y="165" width="0.4716%" height="15" fill="rgb(207,44,46)" fg:x="107026651610" fg:w="646334802"/><text x="78.3416%" y="175.50"></text></g><g><title>__tlb_batch_free_encoded_pages (646,334,802 samples, 0.47%)</title><rect x="78.0916%" y="149" width="0.4716%" height="15" fill="rgb(211,206,28)" fg:x="107026651610" fg:w="646334802"/><text x="78.3416%" y="159.50"></text></g><g><title>free_pages_and_swap_cache (646,334,802 samples, 0.47%)</title><rect x="78.0916%" y="133" width="0.4716%" height="15" fill="rgb(237,167,16)" fg:x="107026651610" fg:w="646334802"/><text x="78.3416%" y="143.50"></text></g><g><title>folios_put_refs (629,267,939 samples, 0.46%)</title><rect x="78.1041%" y="117" width="0.4591%" height="15" fill="rgb(233,66,6)" fg:x="107043718473" fg:w="629267939"/><text x="78.3541%" y="127.50"></text></g><g><title>free_unref_folios (467,302,692 samples, 0.34%)</title><rect x="78.2222%" y="101" width="0.3410%" height="15" fill="rgb(246,123,29)" fg:x="107205683720" fg:w="467302692"/><text x="78.4722%" y="111.50"></text></g><g><title>_start (1,023,042,251 samples, 0.75%)</title><rect x="77.8168%" y="1029" width="0.7465%" height="15" fill="rgb(209,62,40)" fg:x="106649993748" fg:w="1023042251"/><text x="78.0668%" y="1039.50"></text></g><g><title>__libc_start_main (1,023,042,251 samples, 0.75%)</title><rect x="77.8168%" y="1013" width="0.7465%" height="15" fill="rgb(218,4,25)" fg:x="106649993748" fg:w="1023042251"/><text x="78.0668%" y="1023.50"></text></g><g><title>[libc.so.6] (1,023,042,251 samples, 0.75%)</title><rect x="77.8168%" y="997" width="0.7465%" height="15" fill="rgb(253,91,49)" fg:x="106649993748" fg:w="1023042251"/><text x="78.0668%" y="1007.50"></text></g><g><title>main (1,023,042,251 samples, 0.75%)</title><rect x="77.8168%" y="981" width="0.7465%" height="15" fill="rgb(228,155,29)" fg:x="106649993748" fg:w="1023042251"/><text x="78.0668%" y="991.50"></text></g><g><title>std::rt::lang_start_internal (1,023,042,251 samples, 0.75%)</title><rect x="77.8168%" y="965" width="0.7465%" height="15" fill="rgb(243,57,37)" fg:x="106649993748" fg:w="1023042251"/><text x="78.0668%" y="975.50"></text></g><g><title>std::panic::catch_unwind (1,023,042,251 samples, 0.75%)</title><rect x="77.8168%" y="949" width="0.7465%" height="15" fill="rgb(244,167,17)" fg:x="106649993748" fg:w="1023042251"/><text x="78.0668%" y="959.50"></text></g><g><title>std::panicking::try (1,023,042,251 samples, 0.75%)</title><rect x="77.8168%" y="933" width="0.7465%" height="15" fill="rgb(207,181,38)" fg:x="106649993748" fg:w="1023042251"/><text x="78.0668%" y="943.50"></text></g><g><title>std::panicking::try::do_call (1,023,042,251 samples, 0.75%)</title><rect x="77.8168%" y="917" width="0.7465%" height="15" fill="rgb(211,8,23)" fg:x="106649993748" fg:w="1023042251"/><text x="78.0668%" y="927.50"></text></g><g><title>std::rt::lang_start_internal::_{{closure}} (1,023,042,251 samples, 0.75%)</title><rect x="77.8168%" y="901" width="0.7465%" height="15" fill="rgb(235,11,44)" fg:x="106649993748" fg:w="1023042251"/><text x="78.0668%" y="911.50"></text></g><g><title>std::panic::catch_unwind (1,023,042,251 samples, 0.75%)</title><rect x="77.8168%" y="885" width="0.7465%" height="15" fill="rgb(248,18,52)" fg:x="106649993748" fg:w="1023042251"/><text x="78.0668%" y="895.50"></text></g><g><title>std::panicking::try (1,023,042,251 samples, 0.75%)</title><rect x="77.8168%" y="869" width="0.7465%" height="15" fill="rgb(208,4,7)" fg:x="106649993748" fg:w="1023042251"/><text x="78.0668%" y="879.50"></text></g><g><title>std::panicking::try::do_call (1,023,042,251 samples, 0.75%)</title><rect x="77.8168%" y="853" width="0.7465%" height="15" fill="rgb(240,17,39)" fg:x="106649993748" fg:w="1023042251"/><text x="78.0668%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,023,042,251 samples, 0.75%)</title><rect x="77.8168%" y="837" width="0.7465%" height="15" fill="rgb(207,170,3)" fg:x="106649993748" fg:w="1023042251"/><text x="78.0668%" y="847.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (1,023,042,251 samples, 0.75%)</title><rect x="77.8168%" y="821" width="0.7465%" height="15" fill="rgb(236,100,52)" fg:x="106649993748" fg:w="1023042251"/><text x="78.0668%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,023,042,251 samples, 0.75%)</title><rect x="77.8168%" y="805" width="0.7465%" height="15" fill="rgb(246,78,51)" fg:x="106649993748" fg:w="1023042251"/><text x="78.0668%" y="815.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,023,042,251 samples, 0.75%)</title><rect x="77.8168%" y="789" width="0.7465%" height="15" fill="rgb(211,17,15)" fg:x="106649993748" fg:w="1023042251"/><text x="78.0668%" y="799.50"></text></g><g><title>rpq::main (1,023,042,251 samples, 0.75%)</title><rect x="77.8168%" y="773" width="0.7465%" height="15" fill="rgb(209,59,46)" fg:x="106649993748" fg:w="1023042251"/><text x="78.0668%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (133,209,191 samples, 0.10%)</title><rect x="78.5979%" y="949" width="0.0972%" height="15" fill="rgb(210,92,25)" fg:x="107720560681" fg:w="133209191"/><text x="78.8479%" y="959.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::move_to (154,588,260 samples, 0.11%)</title><rect x="78.5979%" y="965" width="0.1128%" height="15" fill="rgb(238,174,52)" fg:x="107720560681" fg:w="154588260"/><text x="78.8479%" y="975.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (21,379,069 samples, 0.02%)</title><rect x="78.6951%" y="949" width="0.0156%" height="15" fill="rgb(230,73,7)" fg:x="107853769872" fg:w="21379069"/><text x="78.9451%" y="959.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (16,164,741 samples, 0.01%)</title><rect x="78.7107%" y="965" width="0.0118%" height="15" fill="rgb(243,124,40)" fg:x="107875148941" fg:w="16164741"/><text x="78.9607%" y="975.50"></text></g><g><title>core::ptr::read (16,164,741 samples, 0.01%)</title><rect x="78.7107%" y="949" width="0.0118%" height="15" fill="rgb(244,170,11)" fg:x="107875148941" fg:w="16164741"/><text x="78.9607%" y="959.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_down_to_bottom (203,063,936 samples, 0.15%)</title><rect x="78.5767%" y="981" width="0.1482%" height="15" fill="rgb(207,114,54)" fg:x="107691423866" fg:w="203063936"/><text x="78.8267%" y="991.50"></text></g><g><title>core::ptr::read (41,617,460 samples, 0.03%)</title><rect x="78.7248%" y="917" width="0.0304%" height="15" fill="rgb(205,42,20)" fg:x="107894487802" fg:w="41617460"/><text x="78.9748%" y="927.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::pop (287,929,005 samples, 0.21%)</title><rect x="78.5632%" y="1029" width="0.2101%" height="15" fill="rgb(230,30,28)" fg:x="107673035999" fg:w="287929005"/><text x="78.8132%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (276,135,524 samples, 0.20%)</title><rect x="78.5718%" y="1013" width="0.2015%" height="15" fill="rgb(205,73,54)" fg:x="107684829480" fg:w="276135524"/><text x="78.8218%" y="1023.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::pop::_{{closure}} (272,564,427 samples, 0.20%)</title><rect x="78.5745%" y="997" width="0.1989%" height="15" fill="rgb(254,227,23)" fg:x="107688400577" fg:w="272564427"/><text x="78.8245%" y="1007.50"></text></g><g><title>core::mem::swap (66,477,202 samples, 0.05%)</title><rect x="78.7248%" y="981" width="0.0485%" height="15" fill="rgb(228,202,34)" fg:x="107894487802" fg:w="66477202"/><text x="78.9748%" y="991.50"></text></g><g><title>core::ptr::swap_nonoverlapping (66,477,202 samples, 0.05%)</title><rect x="78.7248%" y="965" width="0.0485%" height="15" fill="rgb(222,225,37)" fg:x="107894487802" fg:w="66477202"/><text x="78.9748%" y="975.50"></text></g><g><title>core::ptr::swap_nonoverlapping_simple_untyped (66,477,202 samples, 0.05%)</title><rect x="78.7248%" y="949" width="0.0485%" height="15" fill="rgb(221,14,54)" fg:x="107894487802" fg:w="66477202"/><text x="78.9748%" y="959.50"></text></g><g><title>core::mem::swap_simple (66,477,202 samples, 0.05%)</title><rect x="78.7248%" y="933" width="0.0485%" height="15" fill="rgb(254,102,2)" fg:x="107894487802" fg:w="66477202"/><text x="78.9748%" y="943.50"></text></g><g><title>core::ptr::write (24,859,742 samples, 0.02%)</title><rect x="78.7552%" y="917" width="0.0181%" height="15" fill="rgb(232,104,17)" fg:x="107936105262" fg:w="24859742"/><text x="79.0052%" y="927.50"></text></g><g><title>alloc::raw_vec::finish_grow (35,099,683 samples, 0.03%)</title><rect x="78.7818%" y="1029" width="0.0256%" height="15" fill="rgb(250,220,14)" fg:x="107972574922" fg:w="35099683"/><text x="79.0318%" y="1039.50"></text></g><g><title>pte_offset_map_nolock (23,503,643 samples, 0.02%)</title><rect x="79.0125%" y="949" width="0.0171%" height="15" fill="rgb(241,158,9)" fg:x="108288789000" fg:w="23503643"/><text x="79.2625%" y="959.50"></text></g><g><title>__next_zones_zonelist (23,826,950 samples, 0.02%)</title><rect x="79.0352%" y="901" width="0.0174%" height="15" fill="rgb(246,9,43)" fg:x="108319864072" fg:w="23826950"/><text x="79.2852%" y="911.50"></text></g><g><title>__list_del_entry_valid_or_report (44,040,453 samples, 0.03%)</title><rect x="79.0637%" y="869" width="0.0321%" height="15" fill="rgb(206,73,33)" fg:x="108358885997" fg:w="44040453"/><text x="79.3137%" y="879.50"></text></g><g><title>__rmqueue_pcplist (47,810,188 samples, 0.03%)</title><rect x="79.0637%" y="885" width="0.0349%" height="15" fill="rgb(222,79,8)" fg:x="108358885997" fg:w="47810188"/><text x="79.3137%" y="895.50"></text></g><g><title>__alloc_pages_noprof (113,650,886 samples, 0.08%)</title><rect x="79.0324%" y="917" width="0.0829%" height="15" fill="rgb(234,8,54)" fg:x="108316053161" fg:w="113650886"/><text x="79.2824%" y="927.50"></text></g><g><title>get_page_from_freelist (86,013,025 samples, 0.06%)</title><rect x="79.0526%" y="901" width="0.0628%" height="15" fill="rgb(209,134,38)" fg:x="108343691022" fg:w="86013025"/><text x="79.3026%" y="911.50"></text></g><g><title>alloc_pages_mpol_noprof (128,726,132 samples, 0.09%)</title><rect x="79.0324%" y="933" width="0.0939%" height="15" fill="rgb(230,127,29)" fg:x="108316053161" fg:w="128726132"/><text x="79.2824%" y="943.50"></text></g><g><title>vma_alloc_folio_noprof (152,251,601 samples, 0.11%)</title><rect x="79.0324%" y="949" width="0.1111%" height="15" fill="rgb(242,44,41)" fg:x="108316053161" fg:w="152251601"/><text x="79.2824%" y="959.50"></text></g><g><title>get_vma_policy (23,525,469 samples, 0.02%)</title><rect x="79.1263%" y="933" width="0.0172%" height="15" fill="rgb(222,56,43)" fg:x="108444779293" fg:w="23525469"/><text x="79.3763%" y="943.50"></text></g><g><title>handle_mm_fault (339,963,407 samples, 0.25%)</title><rect x="78.9042%" y="981" width="0.2481%" height="15" fill="rgb(238,39,47)" fg:x="108140359101" fg:w="339963407"/><text x="79.1542%" y="991.50"></text></g><g><title>__handle_mm_fault (313,987,267 samples, 0.23%)</title><rect x="78.9232%" y="965" width="0.2291%" height="15" fill="rgb(226,79,43)" fg:x="108166335241" fg:w="313987267"/><text x="79.1732%" y="975.50"></text></g><g><title>down_read_trylock (61,283,996 samples, 0.04%)</title><rect x="79.1779%" y="965" width="0.0447%" height="15" fill="rgb(242,105,53)" fg:x="108515395128" fg:w="61283996"/><text x="79.4279%" y="975.50"></text></g><g><title>mas_walk (84,914,202 samples, 0.06%)</title><rect x="79.2226%" y="965" width="0.0620%" height="15" fill="rgb(251,132,46)" fg:x="108576679124" fg:w="84914202"/><text x="79.4726%" y="975.50"></text></g><g><title>do_user_addr_fault (537,830,473 samples, 0.39%)</title><rect x="78.8951%" y="997" width="0.3924%" height="15" fill="rgb(231,77,14)" fg:x="108127899963" fg:w="537830473"/><text x="79.1451%" y="1007.50"></text></g><g><title>lock_vma_under_rcu (185,407,928 samples, 0.14%)</title><rect x="79.1523%" y="981" width="0.1353%" height="15" fill="rgb(240,135,9)" fg:x="108480322508" fg:w="185407928"/><text x="79.4023%" y="991.50"></text></g><g><title>exc_page_fault (569,312,739 samples, 0.42%)</title><rect x="78.8749%" y="1013" width="0.4154%" height="15" fill="rgb(248,109,14)" fg:x="108100133598" fg:w="569312739"/><text x="79.1249%" y="1023.50"></text></g><g><title>asm_exc_page_fault (703,750,126 samples, 0.51%)</title><rect x="78.8074%" y="1029" width="0.5135%" height="15" fill="rgb(227,146,52)" fg:x="108007674605" fg:w="703750126"/><text x="79.0574%" y="1039.50"></text></g><g><title>sync_regs (41,978,394 samples, 0.03%)</title><rect x="79.2903%" y="1013" width="0.0306%" height="15" fill="rgb(232,54,3)" fg:x="108669446337" fg:w="41978394"/><text x="79.5403%" y="1023.50"></text></g><g><title>cfree (461,284,831 samples, 0.34%)</title><rect x="79.3306%" y="1029" width="0.3366%" height="15" fill="rgb(229,201,43)" fg:x="108724760752" fg:w="461284831"/><text x="79.5806%" y="1039.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock_contended (15,488,969 samples, 0.01%)</title><rect x="79.6559%" y="1013" width="0.0113%" height="15" fill="rgb(252,161,33)" fg:x="109170556614" fg:w="15488969"/><text x="79.9059%" y="1023.50"></text></g><g><title>clock_gettime (27,041,575 samples, 0.02%)</title><rect x="79.6672%" y="1029" width="0.0197%" height="15" fill="rgb(226,146,40)" fg:x="109186045583" fg:w="27041575"/><text x="79.9172%" y="1039.50"></text></g><g><title>_compound_head (37,025,935 samples, 0.03%)</title><rect x="83.3229%" y="869" width="0.0270%" height="15" fill="rgb(219,47,25)" fg:x="114196248018" fg:w="37025935"/><text x="83.5729%" y="879.50"></text></g><g><title>folio_remove_rmap_ptes (21,354,389 samples, 0.02%)</title><rect x="83.3499%" y="869" width="0.0156%" height="15" fill="rgb(250,135,13)" fg:x="114233273953" fg:w="21354389"/><text x="83.5999%" y="879.50"></text></g><g><title>__lruvec_stat_mod_folio (17,076,269 samples, 0.01%)</title><rect x="83.3530%" y="853" width="0.0125%" height="15" fill="rgb(219,229,18)" fg:x="114237552073" fg:w="17076269"/><text x="83.6030%" y="863.50"></text></g><g><title>__mod_memcg_lruvec_state (17,076,269 samples, 0.01%)</title><rect x="83.3530%" y="837" width="0.0125%" height="15" fill="rgb(217,152,27)" fg:x="114237552073" fg:w="17076269"/><text x="83.6030%" y="847.50"></text></g><g><title>__mod_memcg_lruvec_state (20,375,844 samples, 0.01%)</title><rect x="83.3840%" y="773" width="0.0149%" height="15" fill="rgb(225,71,47)" fg:x="114279983758" fg:w="20375844"/><text x="83.6340%" y="783.50"></text></g><g><title>__page_cache_release (41,692,213 samples, 0.03%)</title><rect x="83.3715%" y="805" width="0.0304%" height="15" fill="rgb(220,139,14)" fg:x="114262937524" fg:w="41692213"/><text x="83.6215%" y="815.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (41,692,213 samples, 0.03%)</title><rect x="83.3715%" y="789" width="0.0304%" height="15" fill="rgb(247,54,32)" fg:x="114262937524" fg:w="41692213"/><text x="83.6215%" y="799.50"></text></g><g><title>clear_page_erms (114,363,055 samples, 0.08%)</title><rect x="83.4081%" y="789" width="0.0834%" height="15" fill="rgb(252,131,39)" fg:x="114313106474" fg:w="114363055"/><text x="83.6581%" y="799.50"></text></g><g><title>__free_one_page (62,653,751 samples, 0.05%)</title><rect x="83.4916%" y="757" width="0.0457%" height="15" fill="rgb(210,108,39)" fg:x="114427469529" fg:w="62653751"/><text x="83.7416%" y="767.50"></text></g><g><title>__mod_zone_page_state (16,614,844 samples, 0.01%)</title><rect x="83.5252%" y="741" width="0.0121%" height="15" fill="rgb(205,23,29)" fg:x="114473508436" fg:w="16614844"/><text x="83.7752%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (306,689,383 samples, 0.22%)</title><rect x="83.3198%" y="997" width="0.2238%" height="15" fill="rgb(246,139,46)" fg:x="114192025876" fg:w="306689383"/><text x="83.5698%" y="1007.50"></text></g><g><title>[[kernel.kallsyms]] (306,689,383 samples, 0.22%)</title><rect x="83.3198%" y="981" width="0.2238%" height="15" fill="rgb(250,81,26)" fg:x="114192025876" fg:w="306689383"/><text x="83.5698%" y="991.50"></text></g><g><title>do_group_exit (306,689,383 samples, 0.22%)</title><rect x="83.3198%" y="965" width="0.2238%" height="15" fill="rgb(214,104,7)" fg:x="114192025876" fg:w="306689383"/><text x="83.5698%" y="975.50"></text></g><g><title>do_exit (306,689,383 samples, 0.22%)</title><rect x="83.3198%" y="949" width="0.2238%" height="15" fill="rgb(233,189,8)" fg:x="114192025876" fg:w="306689383"/><text x="83.5698%" y="959.50"></text></g><g><title>__mmput (306,689,383 samples, 0.22%)</title><rect x="83.3198%" y="933" width="0.2238%" height="15" fill="rgb(228,141,17)" fg:x="114192025876" fg:w="306689383"/><text x="83.5698%" y="943.50"></text></g><g><title>exit_mmap (306,689,383 samples, 0.22%)</title><rect x="83.3198%" y="917" width="0.2238%" height="15" fill="rgb(247,157,1)" fg:x="114192025876" fg:w="306689383"/><text x="83.5698%" y="927.50"></text></g><g><title>unmap_vmas (302,467,241 samples, 0.22%)</title><rect x="83.3229%" y="901" width="0.2207%" height="15" fill="rgb(249,225,5)" fg:x="114196248018" fg:w="302467241"/><text x="83.5729%" y="911.50"></text></g><g><title>unmap_page_range (302,467,241 samples, 0.22%)</title><rect x="83.3229%" y="885" width="0.2207%" height="15" fill="rgb(242,55,13)" fg:x="114196248018" fg:w="302467241"/><text x="83.5729%" y="895.50"></text></g><g><title>tlb_flush_mmu (244,086,917 samples, 0.18%)</title><rect x="83.3655%" y="869" width="0.1781%" height="15" fill="rgb(230,49,50)" fg:x="114254628342" fg:w="244086917"/><text x="83.6155%" y="879.50"></text></g><g><title>__tlb_batch_free_encoded_pages (244,086,917 samples, 0.18%)</title><rect x="83.3655%" y="853" width="0.1781%" height="15" fill="rgb(241,111,38)" fg:x="114254628342" fg:w="244086917"/><text x="83.6155%" y="863.50"></text></g><g><title>free_pages_and_swap_cache (244,086,917 samples, 0.18%)</title><rect x="83.3655%" y="837" width="0.1781%" height="15" fill="rgb(252,155,4)" fg:x="114254628342" fg:w="244086917"/><text x="83.6155%" y="847.50"></text></g><g><title>folios_put_refs (235,777,735 samples, 0.17%)</title><rect x="83.3715%" y="821" width="0.1720%" height="15" fill="rgb(212,69,32)" fg:x="114262937524" fg:w="235777735"/><text x="83.6215%" y="831.50"></text></g><g><title>free_unref_folios (194,085,522 samples, 0.14%)</title><rect x="83.4020%" y="805" width="0.1416%" height="15" fill="rgb(243,107,47)" fg:x="114304629737" fg:w="194085522"/><text x="83.6520%" y="815.50"></text></g><g><title>free_unref_page_commit (71,245,730 samples, 0.05%)</title><rect x="83.4916%" y="789" width="0.0520%" height="15" fill="rgb(247,130,12)" fg:x="114427469529" fg:w="71245730"/><text x="83.7416%" y="799.50"></text></g><g><title>free_pcppages_bulk (71,245,730 samples, 0.05%)</title><rect x="83.4916%" y="773" width="0.0520%" height="15" fill="rgb(233,74,16)" fg:x="114427469529" fg:w="71245730"/><text x="83.7416%" y="783.50"></text></g><g><title>__futex_queue (94,227,899 samples, 0.07%)</title><rect x="83.8250%" y="917" width="0.0688%" height="15" fill="rgb(208,58,18)" fg:x="114884396434" fg:w="94227899"/><text x="84.0750%" y="927.50"></text></g><g><title>plist_add (78,838,429 samples, 0.06%)</title><rect x="83.8362%" y="901" width="0.0575%" height="15" fill="rgb(242,225,1)" fg:x="114899785904" fg:w="78838429"/><text x="84.0862%" y="911.50"></text></g><g><title>cpuacct_charge (19,265,567 samples, 0.01%)</title><rect x="84.0035%" y="837" width="0.0141%" height="15" fill="rgb(249,39,40)" fg:x="115129078799" fg:w="19265567"/><text x="84.2535%" y="847.50"></text></g><g><title>dequeue_task_fair (85,855,857 samples, 0.06%)</title><rect x="83.9577%" y="885" width="0.0626%" height="15" fill="rgb(207,72,44)" fg:x="115066293402" fg:w="85855857"/><text x="84.2077%" y="895.50"></text></g><g><title>dequeue_entity (74,466,194 samples, 0.05%)</title><rect x="83.9660%" y="869" width="0.0543%" height="15" fill="rgb(215,193,12)" fg:x="115077683065" fg:w="74466194"/><text x="84.2160%" y="879.50"></text></g><g><title>update_curr (66,843,072 samples, 0.05%)</title><rect x="83.9716%" y="853" width="0.0488%" height="15" fill="rgb(248,41,39)" fg:x="115085306187" fg:w="66843072"/><text x="84.2216%" y="863.50"></text></g><g><title>_raw_spin_lock (15,148,085 samples, 0.01%)</title><rect x="84.0232%" y="869" width="0.0111%" height="15" fill="rgb(253,85,4)" fg:x="115155999074" fg:w="15148085"/><text x="84.2732%" y="879.50"></text></g><g><title>raw_spin_rq_lock_nested (23,547,159 samples, 0.02%)</title><rect x="84.0203%" y="885" width="0.0172%" height="15" fill="rgb(243,70,31)" fg:x="115152149259" fg:w="23547159"/><text x="84.2703%" y="895.50"></text></g><g><title>__schedule (223,021,274 samples, 0.16%)</title><rect x="83.9133%" y="901" width="0.1627%" height="15" fill="rgb(253,195,26)" fg:x="115005451937" fg:w="223021274"/><text x="84.1633%" y="911.50"></text></g><g><title>update_rq_clock (41,496,683 samples, 0.03%)</title><rect x="84.0458%" y="885" width="0.0303%" height="15" fill="rgb(243,42,11)" fg:x="115186976528" fg:w="41496683"/><text x="84.2958%" y="895.50"></text></g><g><title>futex_wait_queue (358,943,224 samples, 0.26%)</title><rect x="83.8194%" y="933" width="0.2619%" height="15" fill="rgb(239,66,17)" fg:x="114876716567" fg:w="358943224"/><text x="84.0694%" y="943.50"></text></g><g><title>schedule (245,798,666 samples, 0.18%)</title><rect x="83.9019%" y="917" width="0.1793%" height="15" fill="rgb(217,132,21)" fg:x="114989861125" fg:w="245798666"/><text x="84.1519%" y="927.50"></text></g><g><title>futex_get_value_locked (686,712,343 samples, 0.50%)</title><rect x="84.1589%" y="917" width="0.5011%" height="15" fill="rgb(252,202,21)" fg:x="115341999857" fg:w="686712343"/><text x="84.4089%" y="927.50"></text></g><g><title>__get_user_nocheck_4 (626,304,436 samples, 0.46%)</title><rect x="84.2030%" y="901" width="0.4570%" height="15" fill="rgb(233,98,36)" fg:x="115402407764" fg:w="626304436"/><text x="84.4530%" y="911.50"></text></g><g><title>native_queued_spin_lock_slowpath (1,025,297,527 samples, 0.75%)</title><rect x="85.1744%" y="885" width="0.7481%" height="15" fill="rgb(216,153,54)" fg:x="116733862920" fg:w="1025297527"/><text x="85.4244%" y="895.50"></text></g><g><title>_raw_spin_lock (1,165,341,187 samples, 0.85%)</title><rect x="85.0890%" y="901" width="0.8503%" height="15" fill="rgb(250,99,7)" fg:x="116616731629" fg:w="1165341187"/><text x="85.3390%" y="911.50"></text></g><g><title>preempt_count_add (22,912,369 samples, 0.02%)</title><rect x="85.9225%" y="885" width="0.0167%" height="15" fill="rgb(207,56,50)" fg:x="117759160447" fg:w="22912369"/><text x="86.1725%" y="895.50"></text></g><g><title>futex_q_lock (1,893,692,170 samples, 1.38%)</title><rect x="84.6599%" y="917" width="1.3817%" height="15" fill="rgb(244,61,34)" fg:x="116028712200" fg:w="1893692170"/><text x="84.9099%" y="927.50"></text></g><g><title>futex_hash (136,460,952 samples, 0.10%)</title><rect x="85.9421%" y="901" width="0.0996%" height="15" fill="rgb(241,50,38)" fg:x="117785943418" fg:w="136460952"/><text x="86.1921%" y="911.50"></text></g><g><title>_raw_spin_unlock (49,952,879 samples, 0.04%)</title><rect x="86.1593%" y="901" width="0.0364%" height="15" fill="rgb(212,166,30)" fg:x="118083702017" fg:w="49952879"/><text x="86.4093%" y="911.50"></text></g><g><title>futex_q_unlock (214,940,899 samples, 0.16%)</title><rect x="86.0417%" y="917" width="0.1568%" height="15" fill="rgb(249,127,32)" fg:x="117922404370" fg:w="214940899"/><text x="86.2917%" y="927.50"></text></g><g><title>get_futex_key (18,617,074 samples, 0.01%)</title><rect x="86.1985%" y="917" width="0.0136%" height="15" fill="rgb(209,103,0)" fg:x="118137345269" fg:w="18617074"/><text x="86.4485%" y="927.50"></text></g><g><title>futex_wait_setup (2,936,093,782 samples, 2.14%)</title><rect x="84.0813%" y="933" width="2.1423%" height="15" fill="rgb(238,209,51)" fg:x="115235659791" fg:w="2936093782"/><text x="84.3313%" y="943.50">f..</text></g><g><title>srso_alias_return_thunk (15,791,230 samples, 0.01%)</title><rect x="86.2121%" y="917" width="0.0115%" height="15" fill="rgb(237,56,23)" fg:x="118155962343" fg:w="15791230"/><text x="86.4621%" y="927.50"></text></g><g><title>srso_alias_safe_ret (15,791,230 samples, 0.01%)</title><rect x="86.2121%" y="901" width="0.0115%" height="15" fill="rgb(215,153,46)" fg:x="118155962343" fg:w="15791230"/><text x="86.4621%" y="911.50"></text></g><g><title>__futex_wait (3,458,290,994 samples, 2.52%)</title><rect x="83.7031%" y="949" width="2.5233%" height="15" fill="rgb(224,49,31)" fg:x="114717344272" fg:w="3458290994"/><text x="83.9531%" y="959.50">__..</text></g><g><title>futex_setup_timer (17,265,339 samples, 0.01%)</title><rect x="86.2264%" y="949" width="0.0126%" height="15" fill="rgb(250,18,42)" fg:x="118175635266" fg:w="17265339"/><text x="86.4764%" y="959.50"></text></g><g><title>futex_wait (3,598,514,886 samples, 2.63%)</title><rect x="83.6161%" y="965" width="2.6256%" height="15" fill="rgb(215,176,39)" fg:x="114598147995" fg:w="3598514886"/><text x="83.8661%" y="975.50">fu..</text></g><g><title>native_queued_spin_lock_slowpath (1,414,067,551 samples, 1.03%)</title><rect x="86.6726%" y="933" width="1.0318%" height="15" fill="rgb(223,77,29)" fg:x="118787083309" fg:w="1414067551"/><text x="86.9226%" y="943.50"></text></g><g><title>_raw_spin_lock (1,519,946,830 samples, 1.11%)</title><rect x="86.6152%" y="949" width="1.1090%" height="15" fill="rgb(234,94,52)" fg:x="118708471195" fg:w="1519946830"/><text x="86.8652%" y="959.50"></text></g><g><title>preempt_count_add (27,267,165 samples, 0.02%)</title><rect x="87.7043%" y="933" width="0.0199%" height="15" fill="rgb(220,154,50)" fg:x="120201150860" fg:w="27267165"/><text x="87.9543%" y="943.50"></text></g><g><title>_raw_spin_unlock (27,016,159 samples, 0.02%)</title><rect x="87.7242%" y="949" width="0.0197%" height="15" fill="rgb(212,11,10)" fg:x="120228418025" fg:w="27016159"/><text x="87.9742%" y="959.50"></text></g><g><title>preempt_count_sub (15,179,300 samples, 0.01%)</title><rect x="87.7329%" y="933" width="0.0111%" height="15" fill="rgb(205,166,19)" fg:x="120240254884" fg:w="15179300"/><text x="87.9829%" y="943.50"></text></g><g><title>futex_hash (113,985,615 samples, 0.08%)</title><rect x="87.7439%" y="949" width="0.0832%" height="15" fill="rgb(244,198,16)" fg:x="120255434184" fg:w="113985615"/><text x="87.9939%" y="959.50"></text></g><g><title>futex_wake_mark (102,469,367 samples, 0.07%)</title><rect x="87.8271%" y="949" width="0.0748%" height="15" fill="rgb(219,69,12)" fg:x="120369419799" fg:w="102469367"/><text x="88.0771%" y="959.50"></text></g><g><title>__futex_unqueue (31,546,599 samples, 0.02%)</title><rect x="87.8789%" y="933" width="0.0230%" height="15" fill="rgb(245,30,7)" fg:x="120440342567" fg:w="31546599"/><text x="88.1289%" y="943.50"></text></g><g><title>plist_del (19,972,560 samples, 0.01%)</title><rect x="87.8873%" y="917" width="0.0146%" height="15" fill="rgb(218,221,48)" fg:x="120451916606" fg:w="19972560"/><text x="88.1373%" y="927.50"></text></g><g><title>__list_del_entry_valid_or_report (15,927,043 samples, 0.01%)</title><rect x="87.8903%" y="901" width="0.0116%" height="15" fill="rgb(216,66,15)" fg:x="120455962123" fg:w="15927043"/><text x="88.1403%" y="911.50"></text></g><g><title>get_futex_key (28,257,846 samples, 0.02%)</title><rect x="87.9019%" y="949" width="0.0206%" height="15" fill="rgb(226,122,50)" fg:x="120471889166" fg:w="28257846"/><text x="88.1519%" y="959.50"></text></g><g><title>_raw_spin_lock_irqsave (65,910,954 samples, 0.05%)</title><rect x="87.9687%" y="917" width="0.0481%" height="15" fill="rgb(239,156,16)" fg:x="120563462655" fg:w="65910954"/><text x="88.2187%" y="927.50"></text></g><g><title>select_task_rq_fair (25,916,542 samples, 0.02%)</title><rect x="88.0233%" y="917" width="0.0189%" height="15" fill="rgb(224,27,38)" fg:x="120638292901" fg:w="25916542"/><text x="88.2733%" y="927.50"></text></g><g><title>futex_wake (2,502,050,665 samples, 1.83%)</title><rect x="86.2418%" y="965" width="1.8256%" height="15" fill="rgb(224,39,27)" fg:x="118196662881" fg:w="2502050665"/><text x="86.4918%" y="975.50">f..</text></g><g><title>wake_up_q (186,682,989 samples, 0.14%)</title><rect x="87.9312%" y="949" width="0.1362%" height="15" fill="rgb(215,92,29)" fg:x="120512030557" fg:w="186682989"/><text x="88.1812%" y="959.50"></text></g><g><title>try_to_wake_up (173,978,578 samples, 0.13%)</title><rect x="87.9404%" y="933" width="0.1269%" height="15" fill="rgb(207,159,16)" fg:x="120524734968" fg:w="173978578"/><text x="88.1904%" y="943.50"></text></g><g><title>ttwu_queue_wakelist (34,504,103 samples, 0.03%)</title><rect x="88.0422%" y="917" width="0.0252%" height="15" fill="rgb(238,163,47)" fg:x="120664209443" fg:w="34504103"/><text x="88.2922%" y="927.50"></text></g><g><title>do_futex (6,137,986,290 samples, 4.48%)</title><rect x="83.5944%" y="981" width="4.4786%" height="15" fill="rgb(219,91,49)" fg:x="114568310846" fg:w="6137986290"/><text x="83.8444%" y="991.50">do_fu..</text></g><g><title>__x64_sys_futex (6,219,711,950 samples, 4.54%)</title><rect x="83.5436%" y="997" width="4.5382%" height="15" fill="rgb(227,167,31)" fg:x="114498793877" fg:w="6219711950"/><text x="83.7936%" y="1007.50">__x64..</text></g><g><title>_copy_to_iter (882,519,837 samples, 0.64%)</title><rect x="88.9316%" y="965" width="0.6439%" height="15" fill="rgb(234,80,54)" fg:x="121883158112" fg:w="882519837"/><text x="89.1816%" y="975.50"></text></g><g><title>check_preemption_disabled (200,913,598 samples, 0.15%)</title><rect x="90.0224%" y="949" width="0.1466%" height="15" fill="rgb(212,114,2)" fg:x="123378156220" fg:w="200913598"/><text x="90.2724%" y="959.50"></text></g><g><title>chacha_permute (2,372,533,711 samples, 1.73%)</title><rect x="90.8010%" y="917" width="1.7311%" height="15" fill="rgb(234,50,24)" fg:x="124445239426" fg:w="2372533711"/><text x="91.0510%" y="927.50"></text></g><g><title>chacha_block_generic (2,738,168,683 samples, 2.00%)</title><rect x="90.5427%" y="933" width="1.9979%" height="15" fill="rgb(221,68,8)" fg:x="124091201427" fg:w="2738168683"/><text x="90.7927%" y="943.50">c..</text></g><g><title>memcpy (248,747,780 samples, 0.18%)</title><rect x="92.5406%" y="933" width="0.1815%" height="15" fill="rgb(254,180,31)" fg:x="126829370110" fg:w="248747780"/><text x="92.7906%" y="943.50"></text></g><g><title>srso_alias_return_thunk (26,488,765 samples, 0.02%)</title><rect x="92.7221%" y="933" width="0.0193%" height="15" fill="rgb(247,130,50)" fg:x="127078117890" fg:w="26488765"/><text x="92.9721%" y="943.50"></text></g><g><title>srso_alias_safe_ret (26,488,765 samples, 0.02%)</title><rect x="92.7221%" y="917" width="0.0193%" height="15" fill="rgb(211,109,4)" fg:x="127078117890" fg:w="26488765"/><text x="92.9721%" y="927.50"></text></g><g><title>crng_fast_key_erasure (3,529,337,868 samples, 2.58%)</title><rect x="90.1690%" y="949" width="2.5752%" height="15" fill="rgb(238,50,21)" fg:x="123579069818" fg:w="3529337868"/><text x="90.4190%" y="959.50">cr..</text></g><g><title>debug_smp_processor_id (150,105,434 samples, 0.11%)</title><rect x="92.7442%" y="949" width="0.1095%" height="15" fill="rgb(225,57,45)" fg:x="127108407686" fg:w="150105434"/><text x="92.9942%" y="959.50"></text></g><g><title>crng_make_state (4,512,727,554 samples, 3.29%)</title><rect x="89.5755%" y="965" width="3.2927%" height="15" fill="rgb(209,196,50)" fg:x="122765677949" fg:w="4512727554"/><text x="89.8255%" y="975.50">crn..</text></g><g><title>srso_alias_return_thunk (19,892,383 samples, 0.01%)</title><rect x="92.8537%" y="949" width="0.0145%" height="15" fill="rgb(242,140,13)" fg:x="127258513120" fg:w="19892383"/><text x="93.1037%" y="959.50"></text></g><g><title>srso_alias_safe_ret (19,892,383 samples, 0.01%)</title><rect x="92.8537%" y="933" width="0.0145%" height="15" fill="rgb(217,111,7)" fg:x="127258513120" fg:w="19892383"/><text x="93.1037%" y="943.50"></text></g><g><title>srso_alias_return_thunk (33,798,434 samples, 0.02%)</title><rect x="92.8682%" y="965" width="0.0247%" height="15" fill="rgb(253,193,51)" fg:x="127278405503" fg:w="33798434"/><text x="93.1182%" y="975.50"></text></g><g><title>srso_alias_safe_ret (33,798,434 samples, 0.02%)</title><rect x="92.8682%" y="949" width="0.0247%" height="15" fill="rgb(252,70,29)" fg:x="127278405503" fg:w="33798434"/><text x="93.1182%" y="959.50"></text></g><g><title>get_random_bytes_user (6,472,014,126 samples, 4.72%)</title><rect x="88.2417%" y="981" width="4.7223%" height="15" fill="rgb(232,127,12)" fg:x="120937617983" fg:w="6472014126"/><text x="88.4917%" y="991.50">get_ra..</text></g><g><title>stackleak_track_stack (97,428,172 samples, 0.07%)</title><rect x="92.8929%" y="965" width="0.0711%" height="15" fill="rgb(211,180,21)" fg:x="127312203937" fg:w="97428172"/><text x="93.1429%" y="975.50"></text></g><g><title>import_ubuf (38,349,445 samples, 0.03%)</title><rect x="92.9640%" y="981" width="0.0280%" height="15" fill="rgb(229,72,13)" fg:x="127409632109" fg:w="38349445"/><text x="93.2140%" y="991.50"></text></g><g><title>__x64_sys_getrandom (6,749,110,138 samples, 4.92%)</title><rect x="88.0818%" y="997" width="4.9245%" height="15" fill="rgb(240,211,49)" fg:x="120718505827" fg:w="6749110138"/><text x="88.3318%" y="1007.50">__x64_..</text></g><g><title>srso_alias_return_thunk (19,634,411 samples, 0.01%)</title><rect x="92.9920%" y="981" width="0.0143%" height="15" fill="rgb(219,149,40)" fg:x="127447981554" fg:w="19634411"/><text x="93.2420%" y="991.50"></text></g><g><title>srso_alias_safe_ret (19,634,411 samples, 0.01%)</title><rect x="92.9920%" y="965" width="0.0143%" height="15" fill="rgb(210,127,46)" fg:x="127447981554" fg:w="19634411"/><text x="93.2420%" y="975.50"></text></g><g><title>down_write_killable (27,379,857 samples, 0.02%)</title><rect x="93.0315%" y="965" width="0.0200%" height="15" fill="rgb(220,106,7)" fg:x="127502225474" fg:w="27379857"/><text x="93.2815%" y="975.50"></text></g><g><title>mas_find (23,749,596 samples, 0.02%)</title><rect x="93.0515%" y="965" width="0.0173%" height="15" fill="rgb(249,31,22)" fg:x="127529605331" fg:w="23749596"/><text x="93.3015%" y="975.50"></text></g><g><title>mas_walk (16,206,040 samples, 0.01%)</title><rect x="93.0570%" y="949" width="0.0118%" height="15" fill="rgb(253,1,49)" fg:x="127537148887" fg:w="16206040"/><text x="93.3070%" y="959.50"></text></g><g><title>mprotect_fixup (24,003,075 samples, 0.02%)</title><rect x="93.0798%" y="965" width="0.0175%" height="15" fill="rgb(227,144,33)" fg:x="127568358541" fg:w="24003075"/><text x="93.3298%" y="975.50"></text></g><g><title>__x64_sys_mprotect (148,378,825 samples, 0.11%)</title><rect x="93.0063%" y="997" width="0.1083%" height="15" fill="rgb(249,163,44)" fg:x="127467615965" fg:w="148378825"/><text x="93.2563%" y="1007.50"></text></g><g><title>do_mprotect_pkey (148,378,825 samples, 0.11%)</title><rect x="93.0063%" y="981" width="0.1083%" height="15" fill="rgb(234,15,39)" fg:x="127467615965" fg:w="148378825"/><text x="93.2563%" y="991.50"></text></g><g><title>tlb_gather_mmu (15,943,986 samples, 0.01%)</title><rect x="93.1029%" y="965" width="0.0116%" height="15" fill="rgb(207,66,16)" fg:x="127600050804" fg:w="15943986"/><text x="93.3529%" y="975.50"></text></g><g><title>amd_clear_divider (15,391,431 samples, 0.01%)</title><rect x="93.5277%" y="981" width="0.0112%" height="15" fill="rgb(233,112,24)" fg:x="128182209345" fg:w="15391431"/><text x="93.7777%" y="991.50"></text></g><g><title>syscall_exit_to_user_mode (662,020,046 samples, 0.48%)</title><rect x="93.1261%" y="997" width="0.4830%" height="15" fill="rgb(230,90,22)" fg:x="127631875316" fg:w="662020046"/><text x="93.3761%" y="1007.50"></text></g><g><title>syscall_exit_to_user_mode_prepare (96,294,586 samples, 0.07%)</title><rect x="93.5389%" y="981" width="0.0703%" height="15" fill="rgb(229,61,13)" fg:x="128197600776" fg:w="96294586"/><text x="93.7889%" y="991.50"></text></g><g><title>do_syscall_64 (15,090,232,322 samples, 11.01%)</title><rect x="82.6210%" y="1013" width="11.0105%" height="15" fill="rgb(225,57,24)" fg:x="113234304282" fg:w="15090232322"/><text x="82.8710%" y="1023.50">do_syscall_64</text></g><g><title>x64_sys_call (30,641,242 samples, 0.02%)</title><rect x="93.6092%" y="997" width="0.0224%" height="15" fill="rgb(208,169,48)" fg:x="128293895362" fg:w="30641242"/><text x="93.8592%" y="1007.50"></text></g><g><title>srso_alias_return_thunk (239,549,072 samples, 0.17%)</title><rect x="93.6315%" y="1013" width="0.1748%" height="15" fill="rgb(244,218,51)" fg:x="128324536604" fg:w="239549072"/><text x="93.8815%" y="1023.50"></text></g><g><title>srso_alias_safe_ret (239,549,072 samples, 0.17%)</title><rect x="93.6315%" y="997" width="0.1748%" height="15" fill="rgb(214,148,10)" fg:x="128324536604" fg:w="239549072"/><text x="93.8815%" y="1007.50"></text></g><g><title>srso_alias_safe_ret (22,366,790 samples, 0.02%)</title><rect x="93.8063%" y="1013" width="0.0163%" height="15" fill="rgb(225,174,27)" fg:x="128564085676" fg:w="22366790"/><text x="94.0563%" y="1023.50"></text></g><g><title>entry_SYSCALL_64 (19,463,504,938 samples, 14.20%)</title><rect x="79.6869%" y="1029" width="14.2015%" height="15" fill="rgb(230,96,26)" fg:x="109213087158" fg:w="19463504938"/><text x="79.9369%" y="1039.50">entry_SYSCALL_64</text></g><g><title>srso_alias_untrain_ret (90,139,630 samples, 0.07%)</title><rect x="93.8226%" y="1013" width="0.0658%" height="15" fill="rgb(232,10,30)" fg:x="128586452466" fg:w="90139630"/><text x="94.0726%" y="1023.50"></text></g><g><title>error_entry (40,243,136 samples, 0.03%)</title><rect x="93.8884%" y="1029" width="0.0294%" height="15" fill="rgb(222,8,50)" fg:x="128676592096" fg:w="40243136"/><text x="94.1384%" y="1039.50"></text></g><g><title>getrandom::imp::getrandom_inner (18,811,442 samples, 0.01%)</title><rect x="93.9178%" y="1029" width="0.0137%" height="15" fill="rgb(213,81,27)" fg:x="128716835232" fg:w="18811442"/><text x="94.1678%" y="1039.50"></text></g><g><title>getrandom::util_libc::sys_fill_exact (15,061,982 samples, 0.01%)</title><rect x="93.9205%" y="1013" width="0.0110%" height="15" fill="rgb(245,50,10)" fg:x="128720584692" fg:w="15061982"/><text x="94.1705%" y="1023.50"></text></g><g><title>malloc (298,656,103 samples, 0.22%)</title><rect x="93.9315%" y="1029" width="0.2179%" height="15" fill="rgb(216,100,18)" fg:x="128735646674" fg:w="298656103"/><text x="94.1815%" y="1039.50"></text></g><g><title>entry_SYSCALL_64 (27,568,482 samples, 0.02%)</title><rect x="94.1293%" y="1013" width="0.0201%" height="15" fill="rgb(236,147,54)" fg:x="129006734295" fg:w="27568482"/><text x="94.3793%" y="1023.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (31,285,966 samples, 0.02%)</title><rect x="94.2067%" y="997" width="0.0228%" height="15" fill="rgb(205,143,26)" fg:x="129112819020" fg:w="31285966"/><text x="94.4567%" y="1007.50"></text></g><g><title>&lt;rpq::schema::Item&lt;T&gt; as core::clone::Clone&gt;::clone (105,692,874 samples, 0.08%)</title><rect x="94.1664%" y="1013" width="0.0771%" height="15" fill="rgb(236,26,9)" fg:x="129057623853" fg:w="105692874"/><text x="94.4164%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;u64,rpq::pq::PriorityQueue&lt;u64&gt;&gt;&gt;&gt; (31,574,077 samples, 0.02%)</title><rect x="94.2435%" y="1013" width="0.0230%" height="15" fill="rgb(221,165,53)" fg:x="129163316727" fg:w="31574077"/><text x="94.4935%" y="1023.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (31,574,077 samples, 0.02%)</title><rect x="94.2435%" y="997" width="0.0230%" height="15" fill="rgb(214,110,17)" fg:x="129163316727" fg:w="31574077"/><text x="94.4935%" y="1007.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read_unlock (31,574,077 samples, 0.02%)</title><rect x="94.2435%" y="981" width="0.0230%" height="15" fill="rgb(237,197,12)" fg:x="129163316727" fg:w="31574077"/><text x="94.4935%" y="991.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (30,156,370 samples, 0.02%)</title><rect x="94.4079%" y="869" width="0.0220%" height="15" fill="rgb(205,84,17)" fg:x="129388512191" fg:w="30156370"/><text x="94.6579%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (69,770,969 samples, 0.05%)</title><rect x="94.3909%" y="885" width="0.0509%" height="15" fill="rgb(237,18,45)" fg:x="129365214776" fg:w="69770969"/><text x="94.6409%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (16,317,184 samples, 0.01%)</title><rect x="94.4299%" y="869" width="0.0119%" height="15" fill="rgb(221,87,14)" fg:x="129418668561" fg:w="16317184"/><text x="94.6799%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (559,424,889 samples, 0.41%)</title><rect x="94.5446%" y="869" width="0.4082%" height="15" fill="rgb(238,186,15)" fg:x="129575962616" fg:w="559424889"/><text x="94.7946%" y="879.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1,093,251,965 samples, 0.80%)</title><rect x="94.2723%" y="933" width="0.7977%" height="15" fill="rgb(208,115,11)" fg:x="129202751982" fg:w="1093251965"/><text x="94.5223%" y="943.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1,093,251,965 samples, 0.80%)</title><rect x="94.2723%" y="917" width="0.7977%" height="15" fill="rgb(254,175,0)" fg:x="129202751982" fg:w="1093251965"/><text x="94.5223%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1,093,251,965 samples, 0.80%)</title><rect x="94.2723%" y="901" width="0.7977%" height="15" fill="rgb(227,24,42)" fg:x="129202751982" fg:w="1093251965"/><text x="94.5223%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (861,018,202 samples, 0.63%)</title><rect x="94.4418%" y="885" width="0.6282%" height="15" fill="rgb(223,211,37)" fg:x="129434985745" fg:w="861018202"/><text x="94.6918%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (160,616,442 samples, 0.12%)</title><rect x="94.9528%" y="869" width="0.1172%" height="15" fill="rgb(235,49,27)" fg:x="130135387505" fg:w="160616442"/><text x="95.2028%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (16,410,200 samples, 0.01%)</title><rect x="95.0754%" y="821" width="0.0120%" height="15" fill="rgb(254,97,51)" fg:x="130303360194" fg:w="16410200"/><text x="95.3254%" y="831.50"></text></g><g><title>hashbrown::map::make_hash (1,137,852,018 samples, 0.83%)</title><rect x="94.2694%" y="965" width="0.8302%" height="15" fill="rgb(249,51,40)" fg:x="129198791565" fg:w="1137852018"/><text x="94.5194%" y="975.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,137,852,018 samples, 0.83%)</title><rect x="94.2694%" y="949" width="0.8302%" height="15" fill="rgb(210,128,45)" fg:x="129198791565" fg:w="1137852018"/><text x="94.5194%" y="959.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (33,283,389 samples, 0.02%)</title><rect x="95.0754%" y="933" width="0.0243%" height="15" fill="rgb(224,137,50)" fg:x="130303360194" fg:w="33283389"/><text x="95.3254%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (33,283,389 samples, 0.02%)</title><rect x="95.0754%" y="917" width="0.0243%" height="15" fill="rgb(242,15,9)" fg:x="130303360194" fg:w="33283389"/><text x="95.3254%" y="927.50"></text></g><g><title>core::hash::Hasher::write_u64 (33,283,389 samples, 0.02%)</title><rect x="95.0754%" y="901" width="0.0243%" height="15" fill="rgb(233,187,41)" fg:x="130303360194" fg:w="33283389"/><text x="95.3254%" y="911.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (33,283,389 samples, 0.02%)</title><rect x="95.0754%" y="885" width="0.0243%" height="15" fill="rgb(227,2,29)" fg:x="130303360194" fg:w="33283389"/><text x="95.3254%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (33,283,389 samples, 0.02%)</title><rect x="95.0754%" y="869" width="0.0243%" height="15" fill="rgb(222,70,3)" fg:x="130303360194" fg:w="33283389"/><text x="95.3254%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (33,283,389 samples, 0.02%)</title><rect x="95.0754%" y="853" width="0.0243%" height="15" fill="rgb(213,11,42)" fg:x="130303360194" fg:w="33283389"/><text x="95.3254%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (33,283,389 samples, 0.02%)</title><rect x="95.0754%" y="837" width="0.0243%" height="15" fill="rgb(225,150,9)" fg:x="130303360194" fg:w="33283389"/><text x="95.3254%" y="847.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (16,873,189 samples, 0.01%)</title><rect x="95.0873%" y="821" width="0.0123%" height="15" fill="rgb(230,162,45)" fg:x="130319770394" fg:w="16873189"/><text x="95.3373%" y="831.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,183,684,688 samples, 0.86%)</title><rect x="94.2666%" y="1013" width="0.8637%" height="15" fill="rgb(222,14,52)" fg:x="129194890804" fg:w="1183684688"/><text x="94.5166%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,183,684,688 samples, 0.86%)</title><rect x="94.2666%" y="997" width="0.8637%" height="15" fill="rgb(254,198,14)" fg:x="129194890804" fg:w="1183684688"/><text x="94.5166%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,183,684,688 samples, 0.86%)</title><rect x="94.2666%" y="981" width="0.8637%" height="15" fill="rgb(220,217,30)" fg:x="129194890804" fg:w="1183684688"/><text x="94.5166%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (41,931,909 samples, 0.03%)</title><rect x="95.0997%" y="965" width="0.0306%" height="15" fill="rgb(215,146,41)" fg:x="130336643583" fg:w="41931909"/><text x="95.3497%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (41,931,909 samples, 0.03%)</title><rect x="95.0997%" y="949" width="0.0306%" height="15" fill="rgb(217,27,36)" fg:x="130336643583" fg:w="41931909"/><text x="95.3497%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (41,931,909 samples, 0.03%)</title><rect x="95.0997%" y="933" width="0.0306%" height="15" fill="rgb(219,218,39)" fg:x="130336643583" fg:w="41931909"/><text x="95.3497%" y="943.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (15,550,621 samples, 0.01%)</title><rect x="95.1303%" y="997" width="0.0113%" height="15" fill="rgb(219,4,42)" fg:x="130378575492" fg:w="15550621"/><text x="95.3803%" y="1007.50"></text></g><g><title>std::sync::poison::Flag::borrow (15,550,621 samples, 0.01%)</title><rect x="95.1303%" y="981" width="0.0113%" height="15" fill="rgb(249,119,36)" fg:x="130378575492" fg:w="15550621"/><text x="95.3803%" y="991.50"></text></g><g><title>rpq::RPQ&lt;T&gt;::enqueue (1,567,744,006 samples, 1.14%)</title><rect x="94.1609%" y="1029" width="1.1439%" height="15" fill="rgb(209,23,33)" fg:x="129050029812" fg:w="1567744006"/><text x="94.4109%" y="1039.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (239,198,326 samples, 0.17%)</title><rect x="95.1303%" y="1013" width="0.1745%" height="15" fill="rgb(211,10,0)" fg:x="130378575492" fg:w="239198326"/><text x="95.3803%" y="1023.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read (223,647,705 samples, 0.16%)</title><rect x="95.1416%" y="997" width="0.1632%" height="15" fill="rgb(208,99,37)" fg:x="130394126113" fg:w="223647705"/><text x="95.3916%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (14,344,749 samples, 0.01%)</title><rect x="95.3218%" y="1013" width="0.0105%" height="15" fill="rgb(213,132,31)" fg:x="130641134731" fg:w="14344749"/><text x="95.5718%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (14,344,749 samples, 0.01%)</title><rect x="95.3218%" y="997" width="0.0105%" height="15" fill="rgb(243,129,40)" fg:x="130641134731" fg:w="14344749"/><text x="95.5718%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (14,344,749 samples, 0.01%)</title><rect x="95.3218%" y="981" width="0.0105%" height="15" fill="rgb(210,66,33)" fg:x="130641134731" fg:w="14344749"/><text x="95.5718%" y="991.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (14,344,749 samples, 0.01%)</title><rect x="95.3218%" y="965" width="0.0105%" height="15" fill="rgb(209,189,4)" fg:x="130641134731" fg:w="14344749"/><text x="95.5718%" y="975.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (14,344,749 samples, 0.01%)</title><rect x="95.3218%" y="949" width="0.0105%" height="15" fill="rgb(214,107,37)" fg:x="130641134731" fg:w="14344749"/><text x="95.5718%" y="959.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (19,053,290 samples, 0.01%)</title><rect x="95.3350%" y="997" width="0.0139%" height="15" fill="rgb(245,88,54)" fg:x="130659244429" fg:w="19053290"/><text x="95.5850%" y="1007.50"></text></g><g><title>std::sync::poison::Flag::guard (19,053,290 samples, 0.01%)</title><rect x="95.3350%" y="981" width="0.0139%" height="15" fill="rgb(205,146,20)" fg:x="130659244429" fg:w="19053290"/><text x="95.5850%" y="991.50"></text></g><g><title>std::thread::panicking (19,053,290 samples, 0.01%)</title><rect x="95.3350%" y="965" width="0.0139%" height="15" fill="rgb(220,161,25)" fg:x="130659244429" fg:w="19053290"/><text x="95.5850%" y="975.50"></text></g><g><title>std::panicking::panicking (19,053,290 samples, 0.01%)</title><rect x="95.3350%" y="949" width="0.0139%" height="15" fill="rgb(215,152,15)" fg:x="130659244429" fg:w="19053290"/><text x="95.5850%" y="959.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (19,053,290 samples, 0.01%)</title><rect x="95.3350%" y="933" width="0.0139%" height="15" fill="rgb(233,192,44)" fg:x="130659244429" fg:w="19053290"/><text x="95.5850%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (15,605,749 samples, 0.01%)</title><rect x="95.3376%" y="917" width="0.0114%" height="15" fill="rgb(240,170,46)" fg:x="130662691970" fg:w="15605749"/><text x="95.5876%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_load (15,605,749 samples, 0.01%)</title><rect x="95.3376%" y="901" width="0.0114%" height="15" fill="rgb(207,104,33)" fg:x="130662691970" fg:w="15605749"/><text x="95.5876%" y="911.50"></text></g><g><title>rpq::bpq::BucketPriorityQueue::add_bucket (132,476,338 samples, 0.10%)</title><rect x="95.3048%" y="1029" width="0.0967%" height="15" fill="rgb(219,21,39)" fg:x="130617773818" fg:w="132476338"/><text x="95.5548%" y="1039.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (91,005,727 samples, 0.07%)</title><rect x="95.3350%" y="1013" width="0.0664%" height="15" fill="rgb(214,133,29)" fg:x="130659244429" fg:w="91005727"/><text x="95.5850%" y="1023.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock (71,952,437 samples, 0.05%)</title><rect x="95.3489%" y="997" width="0.0525%" height="15" fill="rgb(226,93,6)" fg:x="130678297719" fg:w="71952437"/><text x="95.5989%" y="1007.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (22,420,819 samples, 0.02%)</title><rect x="95.4234%" y="981" width="0.0164%" height="15" fill="rgb(252,222,34)" fg:x="130780280282" fg:w="22420819"/><text x="95.6734%" y="991.50"></text></g><g><title>core::ptr::read (22,420,819 samples, 0.02%)</title><rect x="95.4234%" y="965" width="0.0164%" height="15" fill="rgb(252,92,48)" fg:x="130780280282" fg:w="22420819"/><text x="95.6734%" y="975.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_up (45,685,398 samples, 0.03%)</title><rect x="95.4177%" y="997" width="0.0333%" height="15" fill="rgb(245,223,24)" fg:x="130772569995" fg:w="45685398"/><text x="95.6677%" y="1007.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::push (49,605,195 samples, 0.04%)</title><rect x="95.4177%" y="1013" width="0.0362%" height="15" fill="rgb(205,176,3)" fg:x="130772569995" fg:w="49605195"/><text x="95.6677%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;alloc::collections::binary_heap::BinaryHeap&lt;rpq::schema::Item&lt;u64&gt;&gt;&gt;&gt; (32,645,288 samples, 0.02%)</title><rect x="95.4568%" y="1013" width="0.0238%" height="15" fill="rgb(235,151,15)" fg:x="130826136554" fg:w="32645288"/><text x="95.7068%" y="1023.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (32,645,288 samples, 0.02%)</title><rect x="95.4568%" y="997" width="0.0238%" height="15" fill="rgb(237,209,11)" fg:x="130826136554" fg:w="32645288"/><text x="95.7068%" y="1007.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::write_unlock (32,645,288 samples, 0.02%)</title><rect x="95.4568%" y="981" width="0.0238%" height="15" fill="rgb(243,227,24)" fg:x="130826136554" fg:w="32645288"/><text x="95.7068%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (15,458,557 samples, 0.01%)</title><rect x="95.4694%" y="965" width="0.0113%" height="15" fill="rgb(239,193,16)" fg:x="130843323285" fg:w="15458557"/><text x="95.7194%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_sub (15,458,557 samples, 0.01%)</title><rect x="95.4694%" y="949" width="0.0113%" height="15" fill="rgb(231,27,9)" fg:x="130843323285" fg:w="15458557"/><text x="95.7194%" y="959.50"></text></g><g><title>rpq::pq::PriorityQueue&lt;T&gt;::enqueue (121,958,848 samples, 0.09%)</title><rect x="95.4096%" y="1029" width="0.0890%" height="15" fill="rgb(219,169,10)" fg:x="130761489368" fg:w="121958848"/><text x="95.6596%" y="1039.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (17,174,205 samples, 0.01%)</title><rect x="95.4861%" y="1013" width="0.0125%" height="15" fill="rgb(244,229,43)" fg:x="130866274011" fg:w="17174205"/><text x="95.7361%" y="1023.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::write (17,174,205 samples, 0.01%)</title><rect x="95.4861%" y="997" width="0.0125%" height="15" fill="rgb(254,38,20)" fg:x="130866274011" fg:w="17174205"/><text x="95.7361%" y="1007.50"></text></g><g><title>entry_SYSCALL_64 (46,770,348 samples, 0.03%)</title><rect x="95.5393%" y="1013" width="0.0341%" height="15" fill="rgb(250,47,30)" fg:x="130939170114" fg:w="46770348"/><text x="95.7893%" y="1023.50"></text></g><g><title>entry_SYSCALL_64 (30,791,962 samples, 0.02%)</title><rect x="95.5954%" y="997" width="0.0225%" height="15" fill="rgb(224,124,36)" fg:x="131016000727" fg:w="30791962"/><text x="95.8454%" y="1007.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock_contended (159,824,890 samples, 0.12%)</title><rect x="95.5039%" y="1029" width="0.1166%" height="15" fill="rgb(246,68,51)" fg:x="130890619972" fg:w="159824890"/><text x="95.7539%" y="1039.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::spin (57,100,003 samples, 0.04%)</title><rect x="95.5788%" y="1013" width="0.0417%" height="15" fill="rgb(253,43,49)" fg:x="130993344859" fg:w="57100003"/><text x="95.8288%" y="1023.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_read (27,762,534 samples, 0.02%)</title><rect x="95.6481%" y="1013" width="0.0203%" height="15" fill="rgb(219,54,36)" fg:x="131088229149" fg:w="27762534"/><text x="95.8981%" y="1023.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::spin_until (27,762,534 samples, 0.02%)</title><rect x="95.6481%" y="997" width="0.0203%" height="15" fill="rgb(227,133,34)" fg:x="131088229149" fg:w="27762534"/><text x="95.8981%" y="1007.50"></text></g><g><title>std::sys::pal::unix::locks::futex_rwlock::RwLock::read_contended (73,788,624 samples, 0.05%)</title><rect x="95.6205%" y="1029" width="0.0538%" height="15" fill="rgb(247,227,15)" fg:x="131050444862" fg:w="73788624"/><text x="95.8705%" y="1039.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (77,388,113 samples, 0.06%)</title><rect x="95.6771%" y="1029" width="0.0565%" height="15" fill="rgb(229,96,14)" fg:x="131128073189" fg:w="77388113"/><text x="95.9271%" y="1039.50"></text></g><g><title>rpq::main::_{{closure}} (77,388,113 samples, 0.06%)</title><rect x="95.6771%" y="1013" width="0.0565%" height="15" fill="rgb(220,79,17)" fg:x="131128073189" fg:w="77388113"/><text x="95.9271%" y="1023.50"></text></g><g><title>syscall (146,679,659 samples, 0.11%)</title><rect x="95.7336%" y="1029" width="0.1070%" height="15" fill="rgb(205,131,53)" fg:x="131205461302" fg:w="146679659"/><text x="95.9836%" y="1039.50"></text></g><g><title>srso_alias_return_thunk (19,773,137 samples, 0.01%)</title><rect x="97.7342%" y="1013" width="0.0144%" height="15" fill="rgb(209,50,29)" fg:x="133947346785" fg:w="19773137"/><text x="97.9842%" y="1023.50"></text></g><g><title>srso_alias_safe_ret (19,773,137 samples, 0.01%)</title><rect x="97.7342%" y="997" width="0.0144%" height="15" fill="rgb(245,86,46)" fg:x="133947346785" fg:w="19773137"/><text x="97.9842%" y="1007.50"></text></g><g><title>syscall_return_via_sysret (5,588,480,125 samples, 4.08%)</title><rect x="95.8406%" y="1029" width="4.0776%" height="15" fill="rgb(235,66,46)" fg:x="131352140961" fg:w="5588480125"/><text x="96.0906%" y="1039.50">sysc..</text></g><g><title>stackleak_erase (2,973,501,164 samples, 2.17%)</title><rect x="97.7486%" y="1013" width="2.1696%" height="15" fill="rgb(232,148,31)" fg:x="133967119922" fg:w="2973501164"/><text x="97.9986%" y="1023.50">s..</text></g><g><title>uuid::builder::&lt;impl uuid::Uuid&gt;::from_u128 (31,912,511 samples, 0.02%)</title><rect x="99.9381%" y="1013" width="0.0233%" height="15" fill="rgb(217,149,8)" fg:x="136967897729" fg:w="31912511"/><text x="100.1881%" y="1023.50"></text></g><g><title>all (137,052,689,532 samples, 100%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(209,183,11)" fg:x="0" fg:w="137052689532"/><text x="0.2500%" y="1071.50"></text></g><g><title>rpq (137,052,685,562 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(208,55,20)" fg:x="3970" fg:w="137052685562"/><text x="0.2500%" y="1055.50">rpq</text></g><g><title>uuid::v4::&lt;impl uuid::Uuid&gt;::new_v4 (100,854,755 samples, 0.07%)</title><rect x="99.9264%" y="1029" width="0.0736%" height="15" fill="rgb(218,39,14)" fg:x="136951834777" fg:w="100854755"/><text x="100.1764%" y="1039.50"></text></g><g><title>uuid::rng::u128 (52,879,292 samples, 0.04%)</title><rect x="99.9614%" y="1013" width="0.0386%" height="15" fill="rgb(216,169,33)" fg:x="136999810240" fg:w="52879292"/><text x="100.2114%" y="1023.50"></text></g></svg></svg>